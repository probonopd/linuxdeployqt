2007-12-30  Paolo Carlini  <pcarlini@suse.de>

	* include/std/tuple (_Tuple_impl<>::_Tuple_impl(typename
	std::remove_reference<>::type&&, typename
	std::remove_reference<>::type&&...),
	_Tuple_impl(const _Tuple_impl<>&), _Tuple_impl(_Tuple_impl&&),
	_Tuple_impl(_Tuple_impl<>&&), operator=(_Tuple_impl&&),
	operator=(const _Tuple_impl<>&), operator=(_Tuple_impl<>&&)): Add.
	(tuple<>::tuple(const _Elements&...), tuple(_UElements&&...),
	tuple(tuple&&), tuple(const tuple<>&), tuple(tuple<>&&),
	operator=(tuple&&), operator=(const tuple<>&), operator=(tuple<>&&)):
	Likewise.
	(tuple<_T1, _T2>::tuple(const _T1&, const _T2&, tuple(_U1&&, _U2&&),
	tuple(tuple&&), tuple(tuple<>&&), tuple(pair<>&&), operator=(tuple&&),
	operator=(tuple<>&&), operator=(pair<>&&)): Likewise.
	(tuple<>::tuple(typename __add_c_ref<_Elements>::type...),
	tuple<_T1, _T2>::tuple(typename __add_c_ref<>::type,
	typename __add_c_ref<>::type)): Remove.
	* testsuite/tr1/6_containers/tuple/creation_functions/tie2.cc: New.
	* testsuite/20_util/tuple/creation_functions/tie2.cc: Likewise.
	* testsuite/20_util/tuple/moveable.cc: Likewise.

2007-12-29  Gerald Pfeifer  <gerald@pfeifer.com>

	* config/os/mingw32/error_constants.h: Fix typo in comment.

2007-12-29  Danny Smith  <dannysmith@users.sourceforge.net>

	* config/os/mingw32/error_constants.h (enum posix_errno): Move
	inside namespace posix_error
.
2007-12-27  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/34538
	* config/os/generic/error_constants.h (enum posix_errno): Move
	inside namespace posix_error.
	* include/std/system_error (error_category::posix,
	error_code::error_code(posix_errno), error_code::posix): Adjust.
	* src/system_error.cc (gnu_error_category::posix): Likewise.
	* testsuite/27_io/basic_ostream/inserters_other/wchar_t/error_code.cc:
	Adjust.
	* testsuite/27_io/basic_ostream/inserters_other/char/error_code.cc:
	Likewise.
	* testsuite/19_diagnostics/error_code/cons/1.cc: Likewise.
	* testsuite/19_diagnostics/error_code/operators/bool.cc: Likewise.
	* testsuite/19_diagnostics/error_code/operators/equal.cc: Likewise.
	* testsuite/19_diagnostics/error_code/operators/not_equal.cc:
	Likewise.
	* testsuite/19_diagnostics/error_category/cons/copy_neg.cc: Likewise.
	* testsuite/19_diagnostics/error_category/cons/default.cc: Likewise.
	* testsuite/19_diagnostics/error_category/operators/equal.cc:
	Likewise.
	* testsuite/19_diagnostics/error_category/operators/not_equal.cc:
	Likewise.
	* testsuite/19_diagnostics/headers/system_error/types_std_c++0x.cc:
	Likewise.
	* testsuite/19_diagnostics/system_error/cons-1.cc: Likewise.
	* testsuite/19_diagnostics/system_error/what-4.cc: Likewise.
	* testsuite/19_diagnostics/headers/system_error/34538.cc: New.

2007-12-26  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/25_algorithms/copy/34595.C: Rename to 34595.cc.

2007-12-26  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/34595
	* include/bits/stl_algobase.h (struct __cm_assign): Remove.
	(struct __copy_move<true, false, _Category>,
	struct __copy_move<true, false, random_access_iterator_tag>,
	struct __copy_move_backward<true, false, _Category>,
	struct __copy_move_backward<true, false, random_access_iterator_tag>):
	Add.
	(struct __copy_move, struct __copy_move_backward,
	struct __copy_move<false, false, random_access_iterator_tag>,
	struct __copy_move_backward<false, false, random_access_iterator_tag>):
	Adjust.
	* testsuite/25_algorithms/copy/34595.C: New.

2007-12-26  Chris Fairles  <chris.fairles@gmail.com>
	    Paolo Carlini  <pcarlini@suse.de>

	* include/std/tuple: New.
	* include/tr1/tuple: New, adjust from tr1_impl/tuple code.
	* include/tr1_impl/tuple: Remove.
	* include/Makefile.am: Update.
	* include/Makefile.in: Regenerate.

2007-12-25  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/hashtable_policy.h (__lower_bound): Add.
	(_Prime_rehash_policy::_M_next_bkt, _M_bkt_for_elements,
	_M_need_rehash): Use __lower_bound.
	* include/std/unordered_map: Do not include the whole <algorithm>,
	include <bits/stl_algobase.h>.
	* include/std/unordered_set: Likewise.
	* include/tr1/unordered_map: Likewise.
	* include/tr1/unordered_set: Likewise.

2007-12-24  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/20_util/tuple/cons/big_tuples.cc: New.
	* testsuite/20_util/tuple/cons/constructor.cc: Likewise.
	* testsuite/20_util/tuple/cons/assignment.cc: Likewise.
	* testsuite/20_util/tuple/tuple_element.cc: Likewise.
	* testsuite/20_util/tuple/tuple_size.cc: Likewise.
	* testsuite/20_util/tuple/comparison_operators/comparisons.cc:
	Likewise.
	* testsuite/20_util/tuple/element_access/get.cc: Likewise.
	* testsuite/20_util/tuple/creation_functions/23978.cc: Likewise.
	* testsuite/20_util/tuple/creation_functions/tie.cc: Likewise.
	* testsuite/20_util/tuple/creation_functions/make_tuple.cc: Likewise.

	* testsuite/20_util/tuple/requirements/explicit_instantiation.cc:
	Fix header file and namespace.

	* testsuite/tr1/6_containers/tuple/cons/big_tuples.cc: Minor tweaks.
	* testsuite/tr1/6_containers/tuple/cons/constructor.cc: Likewise.
	* testsuite/tr1/6_containers/tuple/cons/assignment.cc: Likewise.
	* testsuite/tr1/6_containers/tuple/tuple_element.cc: Likewise.
	* testsuite/tr1/6_containers/tuple/tuple_size.cc: Likewise.
	* testsuite/tr1/6_containers/tuple/comparison_operators/
	comparisons.cc: Likewise.
	* testsuite/tr1/6_containers/tuple/element_access/get.cc: Likewise.
	* testsuite/tr1/6_containers/tuple/creation_functions/tie.cc: Likewise.
	* testsuite/tr1/6_containers/tuple/creation_functions/make_tuple.cc:
	Likewise.

2007-12-24  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* testsuite/tr1/2_general_utilities/shared_ptr/thread/
	default_weaktoshared.cc: Use static_cast not reinterpret_cast.
	* testsuite/tr1/2_general_utilities/shared_ptr/thread/
	mutex_weaktoshared.cc: Likewise.

2007-12-24  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/hashtable_policy.h (_Prime_rehash_policy::
	_M_next_bkt, _M_bkt_for_elements, _M_need_rehash): Use __builtin_ceil.
	* include/std/unordered_map: Do not include <cmath>; prefer
	<bits/stringfwd.h> to <string>.
	* include/std/unordered_set: Likewise.
	* include/tr1/unordered_map: Likewise.
	* include/tr1/unordered_set: Likewise.

2007-12-24  Paolo Carlini  <pcarlini@suse.de>

	* include/std/complex (complex<float>::complex(float, float)):
	Uglify parameters.

2007-12-17  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* include/bits/locale_classes.h (has_facet, use_facet): Simplify
	RTTI checks.

2007-12-17  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* docs/html/test.html: Fix paths and notes on running subset of tests.
	* docs/html/ext/parallel_mode.html: Fix markup typos.
	* docs/html/ext/pb_ds/index.html: Likewise.

2007-12-17  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/22_locale/global_templates/
	standard_facet_hierarchies.cc: Fix for generic locale model.

2007-12-16  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* ChangeLog: Fix my email address in previous two entries.

2007-12-16  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* testsuite/20_util/shared_ptr/thread/default_weaktoshared.cc: Add
	required dg-option for cygwin and darwin targets.
	* testsuite/20_util/shared_ptr/thread/mutex_weaktoshared.cc: Likewise.

2007-12-15  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* include/tr1_impl/boost_shared_ptr.h: Add support for allocators,
	aliasing, make_shared and rvalue-references. Move __shared_count
	and _Sp_counted_* classes to new headers.
	* include/tr1_impl/boost_sp_counted_base.h: New.
	* include/bits/boost_sp_shared_count.h: New.
	* include/tr1/boost_sp_shared_count.h: New.
	* include/std/memory, include/tr1/memory: Include new headers.
	* include/Makefile.am: Adjust.
	* include/Makefile.in: Regenerate.
	* docs/html/documentation.html: Link to shared_ptr notes.
	* docs/html/20_util/shared_ptr.html: New.
	* docs/html/17_intro/c++0x_status.html: Update shared_ptr status.
	* testsuite/20_util/shared_ptr/cons/alias.cc: New.
	* testsuite/20_util/shared_ptr/cons/alloc.cc: Likewise.
	* testsuite/20_util/shared_ptr/cons/move.cc: Likewise.
	* testsuite/20_util/shared_ptr/assign/move.cc: Likewise.
	* testsuite/20_util/shared_ptr/creation/alloc.cc: Likewise.
	* testsuite/20_util/shared_ptr/creation/make.cc: Likewise.
	* testsuite/20_util/shared_ptr/creation/dr402.cc: Likewise.
	* testsuite/20_util/shared_ptr/modifiers/reset_alloc.cc: Likewise.
	* testsuite/20_util/shared_ptr/assign/assign.cc: Duplicate tr1 test.
	* testsuite/20_util/shared_ptr/assign/auto_ptr.cc: Likewise.
	* testsuite/20_util/shared_ptr/assign/auto_ptr_neg.cc: Likewise.
	* testsuite/20_util/shared_ptr/assign/auto_ptr_rvalue_neg.cc: Likewise.
	* testsuite/20_util/shared_ptr/assign/dr541.cc: Likewise.
	* testsuite/20_util/shared_ptr/assign/shared_ptr.cc: Likewise.
	* testsuite/20_util/shared_ptr/assign/shared_ptr_neg.cc: Likewise.
	* testsuite/20_util/shared_ptr/casts/1.cc: Likewise.
	* testsuite/20_util/shared_ptr/comparison/cmp.cc: Likewise.
	* testsuite/20_util/shared_ptr/cons/auto_ptr.cc: Likewise.
	* testsuite/20_util/shared_ptr/cons/auto_ptr_neg.cc: Likewise.
	* testsuite/20_util/shared_ptr/cons/copy.cc: Likewise.
	* testsuite/20_util/shared_ptr/cons/default.cc: Likewise.
	* testsuite/20_util/shared_ptr/cons/pointer.cc: Likewise.
	* testsuite/20_util/shared_ptr/cons/weak_ptr.cc: Likewise.
	* testsuite/20_util/shared_ptr/cons/weak_ptr_expired.cc: Likewise.
	* testsuite/20_util/shared_ptr/dest/dest.cc: Likewise.
	* testsuite/20_util/shared_ptr/misc/24595.cc: Likewise.
	* testsuite/20_util/shared_ptr/misc/io.cc: Likewise.
	* testsuite/20_util/shared_ptr/misc/swap.cc: Likewise.
	* testsuite/20_util/shared_ptr/modifiers/24805.cc: Likewise.
	* testsuite/20_util/shared_ptr/modifiers/reset.cc: Likewise.
	* testsuite/20_util/shared_ptr/modifiers/reset_neg.cc: Likewise.
	* testsuite/20_util/shared_ptr/modifiers/swap.cc: Likewise.
	* testsuite/20_util/shared_ptr/modifiers/swap_neg.cc: Likewise.
	* testsuite/20_util/shared_ptr/observers/bool_conv.cc: Likewise.
	* testsuite/20_util/shared_ptr/observers/get.cc: Likewise.
	* testsuite/20_util/shared_ptr/observers/unique.cc: Likewise.
	* testsuite/20_util/shared_ptr/observers/use_count.cc: Likewise.
	* testsuite/20_util/shared_ptr/thread/default_weaktoshared.cc:
	Likewise.
	* testsuite/20_util/shared_ptr/thread/mutex_weaktoshared.cc: Likewise.
	* testsuite/20_util/shared_ptr/requirements/explicit_instantiation/
	1.cc: Likewise.
	* testsuite/20_util/shared_ptr/requirements/explicit_instantiation/
	2.cc: Likewise.
	* testsuite/20_util/shared_ptr/requirements/explicit_instantiation.cc:
	Remove.
	* testsuite/20_util/weak_ptr/lock/1.cc: Duplicate tr1 test.
	* testsuite/20_util/weak_ptr/requirements/explicit_instantiation/1.cc:
	Likewise.
	* testsuite/20_util/weak_ptr/requirements/explicit_instantiation/2.cc:
	Likewise.
	* testsuite/20_util/weak_ptr/requirements/explicit_instantiation.cc:
	Remove.

2007-12-15  Hans-Peter Nilsson  <hp@axis.com>

	* configure.host (try_cpu settings): Set try_cpu=cris for crisv32.
	* config/cpu/cris/atomicity.h (__exchange_and_add)
	[__CRIS_arch_version >= 32]: Add support for CRIS v32.

2007-12-15  Benjamin Kosnik  <bkoz@redhat.com>
	    Paolo Carlini  <pcarlini@suse.de>

	* include/parallel/partial_sum.h: Include new. Fix for DR 402.
	* include/parallel/multiway_merge.h:Fix for DR 402.
	* include/parallel/losertree.h: Same.
	* include/parallel/quicksort.h: Same.
	* include/parallel/random_shuffle.h: Same.
	* include/parallel/multiway_mergesort.h: Same.

2007-12-14  Benjamin Kosnik  <bkoz@redhat.com>

	PR libstdc++/30127
	PR libstdc++/34449
	* include/bits/locale_classes.h (use_facet): Check facet hierarchy.
	(has_facet): Same.
	* testsuite/22_locale/global_templates/user_facet_hierarchies.cc: New.
	* testsuite/22_locale/global_templates/
	standard_facet_hierarchies.cc: New.

2007-12-11  Benjamin Kosnik  <bkoz@redhat.com>

	PR libstdc++/34015
	* include/backward/backward_warning.h: Adjust warning message.

2007-12-11  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_bvector.h (vector<bool>::reserve): Move out of
	line...
	* include/bits/vector.tcc: ... here.

2007-12-10  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* docs/html/21_strings/howto.html: Add links to referenced articles.

2007-12-10  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* docs/html/17_intro/backwards_compatibility.html: Fix markup.
	* docs/html/17_intro/howto.html: Likewise.
	* docs/html/18_support/howto.html: Likewise.
	* docs/html/ext/concurrence.html: Likewise.
	* docs/html/documentation.html: Likewise.

2007-12-10  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/tr1/5_numerical_facilities/random/linear_congruential/
	requirements/non_uint_neg.cc: Avoid -Wall warnings.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	01_assoc_laguerre/compile.cc: Likewise.
	* testsuite/util/testsuite_api.h: Likewise.

2007-12-10  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/25_algorithms/nth_element/2.cc: Avoid -Wall warnings.
	* testsuite/27_io/basic_streambuf/sgetc/wchar_t/1.cc: Likewise.
	* testsuite/27_io/basic_streambuf/sgetc/char/1.cc: Likewise.
	* testsuite/27_io/basic_stringbuf/sgetn/wchar_t/1.cc: Likewise.
	* testsuite/27_io/basic_stringbuf/sgetn/char/1.cc: Likewise.
	* testsuite/27_io/basic_stringbuf/sbumpc/wchar_t/1.cc: Likewise.
	* testsuite/27_io/basic_stringbuf/sbumpc/char/1.cc: Likewise.
	* testsuite/27_io/basic_stringbuf/snextc/wchar_t/1.cc: Likewise.
	* testsuite/27_io/basic_stringbuf/snextc/char/1.cc: Likewise.
	* testsuite/27_io/basic_istream/peek/wchar_t/12296.cc: Likewise.
	* testsuite/27_io/basic_ostream/inserters_character/wchar_t/
	28277-2.cc: Likewise.
	* testsuite/27_io/basic_ostream/inserters_character/wchar_t/
	28277-3.cc: Likewise.
	* testsuite/27_io/basic_ostream/inserters_character/wchar_t/
	28277-4.cc: Likewise.
	* testsuite/27_io/basic_ostream/inserters_character/char/
	28277-3.cc: Likewise.
	* testsuite/27_io/basic_ostream/inserters_character/char/
	28277-4.cc: Likewise.
	* testsuite/19_diagnostics/error_code/operators/bool.cc: Likewise.
	* testsuite/19_diagnostics/error_code/operators/bool_neg.cc: Likewise.
	* testsuite/18_support/headers/cstddef/macros.cc: Likewise.
	* testsuite/21_strings/basic_string/inserters_extractors/
	wchar_t/28277.cc: Likewise.
	* testsuite/21_strings/basic_string/inserters_extractors/
	char/28277.cc: Likewise.
	* testsuite/26_numerics/headers/cmath/25913.cc: Likewise.
	* testsuite/ext/pb_ds/example/priority_queue_xref.cc: Likewise.
	* testsuite/ext/vstring/inserters_extractors/wchar_t/28277.cc: Likewise.
	* testsuite/ext/vstring/inserters_extractors/char/28277.cc: Likewise.
	* testsuite/ext/enc_filebuf/char/13598.cc: Likewise.
	* testsuite/22_locale/collate/compare/char/2.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/5.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/5.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/6.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/7.cc: Likewise.
	* testsuite/22_locale/time_put/put/char/8.cc: Likewise.
	* testsuite/22_locale/codecvt/unshift/char/1.cc: Likewise.
	* testsuite/22_locale/codecvt/length/char/1.cc: Likewise.
	* testsuite/22_locale/codecvt/length/char/2.cc: Likewise.
	* testsuite/22_locale/codecvt/in/wchar_t/9.cc: Likewise.
	* testsuite/22_locale/codecvt/in/char/1.cc: Likewise.
	* testsuite/22_locale/codecvt/out/char/1.cc: Likewise.
	* testsuite/22_locale/num_get/get/wchar_t/1.cc: Likewise.
	* testsuite/22_locale/num_get/get/char/1.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/random/uniform_int/
	33128.cc: Likewise.
	* testsuite/tr1/2_general_utilities/shared_ptr/thread/
	mutex_weaktoshared.cc: Likewise.
	* testsuite/tr1/2_general_utilities/shared_ptr/thread/
	default_weaktoshared.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/assign/wchar_t/
	range.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/assign/char/
	range.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/ctors/wchar_t/
	range.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/ctors/char/
	range.cc: Likewise.
	* testsuite/23_containers/multimap/operations/1.cc: Likewise.
	* testsuite/23_containers/set/operations/1.cc: Likewise.
	* testsuite/23_containers/vector/bool/capacity/29134.cc: Likewise.
	* testsuite/23_containers/deque/modifiers/erase/1.cc: Likewise.
	* testsuite/23_containers/deque/modifiers/erase/2.cc: Likewise.
	* testsuite/23_containers/multiset/operations/1.cc: Likewise.
	* testsuite/23_containers/map/operations/1.cc: Likewise.
	* testsuite/util/testsuite_hooks.cc: Likewise.
	* testsuite/util/testsuite_rvalref.h: Likewise.

2007-12-10  Jakub Jelinek  <jakub@redhat.com>

	* include/ext/throw_allocator.h (print_to_string): Change sprintf
	format to %lu and cast ref.second.{first,second} to long.
	* include/debug/safe_iterator.tcc (_M_can_advance): Add parens to
	avoid warnings.

2007-12-09  Benjamin Kosnik  <bkoz@redhat.com>

	* docs/html/ext/howto.html: Update.
	* docs/html/ext/sgiexts.html: Same.
	* docs/html/ext/concurrence.html: New. Document extensions.
	* docs/html/17_intro/api.html: Move some bits...
	* docs/html/17_intro/backwards_compatibility.html: here. New. Add
	compatibility suggestions, move existing ones.
	* docs/html/17_intro/howto.html: Update info.
	* docs/html/18_support/howto.html: Tweak.
	* docs/html/faq/index.html: Update thread info.
	* docs/html/documentation.html: Add links.
	* docs/html/20_util/allocator.html: Update info.
	* include/precompiled/stdc++.h: Add C++0x includes if appropriate.
	* testsuite/17_intro/headers/c++200x/all.cc: Same.

2007-12-09  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* testsuite/util/testsuite_allocator.h,
	testsuite/util/testsuite_hooks.cc,
	testsuite/util/testsuite_character.h,
	testsuite/util/testsuite_performance.h,
	testsuite/util/testsuite_rvalref.h, testsuite/util/testsuite_io.h,
	testsuite/util/testsuite_allocator.cc: Remove semi-colons after
	namespace declarations.

2007-12-05  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/hashtable_policy.h (_Prime_rehash_policy::
	_S_n_primes): Add.
	(_Prime_rehash_policy::_M_next_bkt, _M_bkt_for_elements,
	_M_need_rehash): Adjust.

2007-12-03  Paolo Carlini  <pcarlini@suse.de>

	* src/hashtable.cc (__prime_list): Use __SIZEOF_LONG__.

2007-12-03  Paolo Carlini  <pcarlini@suse.de>

	* src/hashtable.cc: New.
	* src/hashtable_c++0x.cc: Likewise.
	* src/Makefile.am: Add.
	* src/Makefile.in: Regenerate.
	* include/tr1_impl/hashtable_policy.h (struct _Primes): Remove.
	(_Prime_rehash_policy::_M_next_bkt, _M_bkt_for_elements,
	_M_need_rehash): Adjust.
	* config/abi/pre/gnu.ver: Update exports.

	* src/hash.cc: Minor tweak.

2007-12-03  Paolo Carlini  <pcarlini@suse.de>

	* include/debug/unordered_map (operator==(const unordered_map&,
	const unordered_map&), operator!=(const unordered_map&,
	const unordered_map&), operator==(const unordered_multimap&,
	const unordered_multimap&), operator!=(const unordered_multimap&,
	const unordered_multimap&)): Remove.
	(unordered_map<>::unordered_map(unordered_map&&),
	operator=(unordered_map&&), clear, _M_invalidate_all,
	unordered_multimap<>::unordered_multimap(unordered_multimap&&),
	operator=(unordered_map&&), clear, _M_invalidate_all,
	swap(unordered_map<>&&, unordered_map<>&), swap(unordered_map<>&,
	unordered_map<>&&), swap(unordered_multimap<>&&,
	unordered_multimap<>&), swap(unordered_multimap<>&,
	unordered_multimap<>&&)): Add.
	* include/debug/unordered_set (operator==(const unordered_set&,
	const unordered_set&), operator!=(const unordered_set&,
	const unordered_set&), operator==(const unordered_multiset&,
	const unordered_multiset&), operator!=(const unordered_multiset&,
	const unordered_multiset&)): Remove.
	(unordered_set<>::unordered_set(unordered_set&&),
	operator=(unordered_set&&), clear, _M_invalidate_all,
	unordered_multiset<>::unordered_multiset(unordered_multiset&&),
	operator=(unordered_set&&), clear, _M_invalidate_all,
	swap(unordered_set<>&&, unordered_set<>&), swap(unordered_set<>&,
	unordered_set<>&&), swap(unordered_multiset<>&&,
	unordered_multiset<>&), swap(unordered_multiset<>&,
	unordered_multiset<>&&)): Add.
	* include/debug/safe_association.h (_Safe_association<>::
	_Safe_association(_Safe_association&&)): Add.
	(_Safe_association<>::clear, _M_invalidate_all): Remove.

2007-12-01  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/hashtable_policy.h (struct _LessThan): Remove.
	(_Prime_rehash_policy::_M_bkt_for_elements, _Prime_rehash_policy::
	_M_need_rehash): Adjust.

2007-12-01  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_tempbuf.h (__get_temporary_buffer): Fold
	in get_temporary_buffer.

2007-11-29  Andris Pavenis <andris.pavenis@iki.fi>

	* src/Makefile.am: Use separate vpath lines for each path.

2007-11-28  Johannes Singler  <singler@ira.uka.de>

        * include/parallel/multiway_merge.h: Destruct only elements that
        were have been constructed before. Code beautifying and formatting.
        * include/parallel/losertree.h: (Copy) construct all loser tree
        item keys, so they can be deconstructed all at once.
        * include/parallel/quicksort.h: Fix memory leak.
        * include/parallel/random_shuffle.h: Use copy constructor instead
        of assignment. Code beautifying and formatting.
        * include/parallel/unique_copy.h: Use assignment instead of copy
        constructor.
        * include/parallel/multiway_mergesort.h: Use copy constructor
        instead of assignment. Code beautifying and formatting.
        * include/parallel/random_shuffle.h: Use copy constructor instead
        of assignment. Code beautifying.

2007-11-27  Kaz Kojima  <kkojima@gcc.gnu.org>

	* testsuite/tr1/5_numerical_facilities/special_functions/
	01_assoc_laguerre/check_nan.cc: Add -mieee for sh.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	02_assoc_legendre/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	03_beta/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	04_comp_ellint_1/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	06_comp_ellint_3/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	07_conf_hyperg/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	08_cyl_bessel_i/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	09_cyl_bessel_j/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	10_cyl_bessel_k/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	11_cyl_neumann/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	12_ellint_1/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	13_ellint_2/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	14_ellint_3/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	15_expint/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	16_hermite/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	18_laguerre/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	19_legendre/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	20_riemann_zeta/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	21_sph_bessel/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	22_sph_legendre/check_nan.cc: Likewise.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	23_sph_neumann/check_nan.cc: Likewise.

2007-11-26  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/locale_facets.tcc (num_put<>::_M_insert_int): When
	ios_base::showpos and the type is signed and the value is zero,
	prepend +.
	* testsuite/22_locale/num_put/put/char/12.cc: New.
	* testsuite/22_locale/num_put/put/wchar_t/12.cc: Likewise.

2007-11-26  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/25913
	* include/c_std/cmath (std::fpclassify, isfinite, isinf, isnan,
	isnormal, signbit, isgreater, isgreaterequal, isless, islessequal,
	islessgreater, isunordered): Guard with __enable_if and forward
	with __promote.
	* include/c_global/cmath: Likewise.
	* testsuite/26_numerics/headers/cmath/25913.cc: New.

	* include/c_std/cmath (__gnu_cxx::__capture_isfinite,
	__capture_isinf, __capture_isnan, __capture_isnormal,
	__capture_signbit, __capture_isgreater, __capture_isgreaterequal,
	__capture_isless, __capture_islessequal, __capture_islessgreater,
	__capture_isunordered): Remove.
	(std::isfinite, isinf, isnan, isnormal, signbit, isgreater,
	isgreaterequal, isless, islessequal, islessgreater, isunordered):
	Forward to the corresponding builtin.
	* include/c_global/cmath: Likewise.

	* include/c_global/cmath (std::atan2, pow): Guard with __enable_if.

2007-11-25  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/unordered_map
	(__unordered_map<>::__unordered_map(__unordered_map&&),
	__unordered_multimap<>::__unordered_multimap(__unordered_multimap&&),
	unordered_map<>::unordered_map(unordered_map&&),
	unordered_multimap<>::unordered_multimap(unordered_multimap&&),
	unordered_map<>::operator=(unordered_map&&),
	unordered_multimap<>::operator=(unordered_multimap&&),
	swap(unordered_map<>&&, unordered_map<>&),
	swap(unordered_map<>&, unordered_map<>&&),
	swap(unordered_multimap<>&&, unordered_multimap<>&),
	swap(unordered_multimap<>&, unordered_multimap<>&&)): Add in C++0x.
	(swap(unordered_multimap<>&, unordered_multimap<>&),
	swap(unordered_multimap<>&, unordered_multimap<>&)): Add.
	* include/tr1_impl/unordered_set
	(__unordered_set<>::__unordered_set(__unordered_set&&),
	__unordered_multiset<>::__unordered_multiset(__unordered_multiset&&),
	unordered_set<>::unordered_set(unordered_setp&&),
	unordered_multiset<>::unordered_multiset(unordered_multiset&&),
	unordered_set<>::operator=(unordered_set&&),
	unordered_multiset<>::operator=(unordered_multiset&&),
	swap(unordered_set<>&&, unordered_set<>&),
	swap(unordered_set<>&, unordered_set<>&&),
	swap(unordered_multiset<>&&, unordered_multiset<>&),
	swap(unordered_multiset<>&, unordered_multiset<>&&)): Likewise.
	(swap(unordered_set<>&, unordered_set<>&),
	swap(unordered_multiset<>&, unordered_multiset<>&)): Add.
	* include/tr1_impl/hashtable (_Hashtable<>::_Hashtable(_Hashtable&&),
	swap(_Hashtable&&)): Add in C++0x.
	* testsuite/23_containers/unordered_map/moveable.cc: New.
	* testsuite/23_containers/unordered_set/moveable.cc: Likewise.
	* testsuite/23_containers/unordered_multimap/moveable.cc: Likewise.
	* testsuite/23_containers/unordered_multiset/moveable.cc: Likewise.

2007-11-25  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/array (array<>::_M_check): Remove, not necessary
	anymore.
	(array<>::at): Adjust.

	* docs/html/17_intro/c++0x_status.html: Fix array::data entry.

2007-11-25  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algobase.h (__lexicographical_compare<>::__lc):
	Move out of line.

	* include/bits/stl_algobase.h (swap_ranges): Remove redundant
	simulated concept checks.

2007-11-23  Paolo Carlini  <pcarlini@suse.de>

	* include/std/bitset (bitset<>::all): Add, per DR 693 [Ready].
	(_Base_bitset<>::_M_are_all_aux()): Add.
	* include/debug/bitset (bitset<>::all): Add.
	* testsuite/23_containers/bitset/all/1.cc: New.
	* docs/html/ext/howto.html: Add an entry for DR 693.

	* include/std/bitset (bitset<0>::set, reset, flip, test): Remove,
	not necessary anymore.

2007-11-23  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_list.h (insert(iterator, value_type&&)): Just
	forward to emplace.
	* include/bits/stl_vector.h (insert(iterator, value_type&&)): Likewise.
	* include/bits/stl_deque.h (insert(iterator, value_type&&)): Likewise.
	* include/debug/list (insert(iterator, value_type&&)): Likewise.
	* include/debug/vector (insert(iterator, value_type&&)): Likewise.
	* include/debug/deque (insert(iterator, value_type&&)): Likewise.
	* include/bits/list.tcc (insert(iterator, value_type&&)): Remove.
	* include/bits/vector.tcc (insert(iterator, value_type&&)): Likewise.
	* include/bits/deque.tcc (insert(iterator, value_type&&)): Likewise.
	* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:
	Adjust dg-error line number.
	* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_2_neg.cc: Likewise.
	* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:
	Adjust dg-error line number.
	* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/deque/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/deque/requirements/dr438/
	constructor_2_neg.cc: Likewise.
	* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:
	Adjust dg-error line number.
	* testsuite/23_containers/list/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/list/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/list/requirements/dr438/
	constructor_2_neg.cc: Likewise.

2007-11-22  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_tree.h (_Rb_tree<>::_Rb_tree_impl<, true>): Remove,
	identical in mainline to the primary template.

2007-11-22  Paolo Carlini  <pcarlini@suse.de>

	* config/abi/pre/gnu.ver: Adjust new exports for 128-bit long double.

2007-11-22  Johannes Singler  <singler@ira.uka.de>

	PR libstdc++/33893
        * include/parallel/multiway_merge.h: made omp_dynamic-safe
        * include/parallel/workstealing.h: made omp_dynamic-safe
        * include/parallel/base.h: infrastructure, cleanup
        * include/parallel/par_loop.h: made omp_dynamic-safe
        * include/parallel/features.h: activate loser tree variant
        * include/parallel/quicksort.h: made omp_dynamic-safe
        * include/parallel/compiletime_settings.h: settings overridable
        * include/parallel/equally_split.h: made omp_dynamic-safe
        * include/parallel/omp_loop_static.h: made omp_dynamic-safe
        * include/parallel/random_shuffle.h: made omp_dynamic-safe
        * include/parallel/balanced_quicksort.h: made omp_dynamic-safe
        * include/parallel/set_operations.h: made omp_dynamic-safe
        * include/parallel/unique_copy.h: made omp_dynamic-safe
        * include/parallel/multiway_mergesort.h: made omp_dynamic-safe
        * include/parallel/search.h: made omp_dynamic-safe
        * include/parallel/partition.h: made omp_dynamic-safe
        * include/parallel/partial_sum.h: made omp_dynamic-safe
        * include/parallel/find.h: made omp_dynamic-safe
        * include/parallel/omp_loop.h: made omp_dynamic-safe
        * include/parallel/losertree.h: avoid default constructor

2007-11-21  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* docs/html/17_intro/C++STYLE: Fix typos.

2007-11-20  Benjamin Kosnik  <bkoz@redhat.com>

	* docs/html/documentation.html: Validate. Add links to index,
	correct broken links.
	* docs/html/17_intro/C++STYLE: Add bits.
	* docs/html/17_intro/configury.html: Correct, update.
	* docs/html/17_intro/api.html: Correct HTML.

	* include/bits/stl_algobase.h: Adjust comment.

2007-11-20  Richard Sandiford  <rsandifo@nildram.co.uk>

	* testsuite/ext/throw_allocator/variadic_construct.cc: Add
	dg-require-time.

2007-11-20  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/functional_hash.h: Do not include ext/numeric_traits.h.
	* include/tr1/functional_hash.h: Likewise.
	* include/std/functional: Include ext/type_traits.h.
	* include/tr1/functional: Likewise.

2007-11-20  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/functional_hash.h
	(hash<long double>::operator()(long double)): Only declare.
	* src/hash.cc: Define here.
	* config/abi/pre/gnu.ver: Adjust exports.
	* include/tr1/functional: Do not include <cmath>.
	* include/std/functional: Likewise.

	* include/std/functional: Include <new>.

2007-11-18  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/type_traits (_DEFINE_SPEC_BODY): Remove.
	(_DEFINE_SPEC_0_HELPER): Rename to _DEFINE_SPEC_HELPER.
	(_DEFINE_SPEC): Simplify; adjust uses.

2007-11-18  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/type_traits (is_reference, is_function,
	remove_cv, is_member_pointer, remove_reference): Declare.
	* include/tr1_impl/type_traitsfwd.h: Remove.
	* include/Makefile.am: Adjust.
	* include/Makefile.in: Regenerate.

2007-11-17  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* docs/html/17_intro/howto.html, docs/html/21_strings/howto.html,
	docs/html/22_locale/codecvt.html, docs/html/23_containers/howto.html,
	docs/html/27_io/howto.html, docs/html/ext/howto.html,
	docs/html/debug.html,  docs/html/install.html,
	docs/html/faq/index.html: Fix typos and anachronisms.

2007-11-16  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algobase.h (struct __lexicographical_compare):
	Move to namespace std.
	(__lexicographical_compare_aux<>(_II1, _II1, _II2, _II2)): Add.
	(lexicographical_compare<>(_II1, _II1, _II2, _II2)): Call the latter.

2007-11-16  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algobase.h (struct __lexicographical_compare): Add.
	(lexicographical_compare<>(_II1, _II1, _II2, _II2)): Use it.
	(lexicographical_compare(const unsigned char*, const unsigned char*,
	const unsigned char*, const unsigned char*),
	lexicographical_compare(const char*, const char*, const char*,
	const char*)): Remove.
	* include/ext/numeric_traits.h (__numeric_traits_floating<>::
	__is_signed): Add.

2007-11-16  Paolo Carlini  <pcarlini@suse.de>

	* src/locale_facets.cc: Fix typo in Copyright.

2007-11-16  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/locale_facets.tcc (__verify_grouping): Move...
	* src/locale_facets.cc: ... here.
	* config/abi/pre/gnu.ver: Update exports.

2007-11-15  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/istream.tcc (basic_istream<>::sentry::
	sentry(basic_istream<>&, bool)): Explicitly convert to bool.
	* include/bits/locale_facets.tcc (num_put<>::_M_insert_int(_OutIter,
	ios_base&, _CharT, _ValueT)): Likewise.
	* include/std/ostream (basic_ostream<>::sentry::~sentry): Likewise.

2007-11-15  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/34105
	* include/bits/stl_algobase.h: Do not include <bits/algorithmfwd.h>.
	(lexicographical_compare(const unsigned char*, const unsigned char*,
	const unsigned char*, const unsigned char*),
	lexicographical_compare(const char*, const char*, const char*,
	const char*)): Move to namespace (std, _GLIBCXX_STD_P).
	* include/parallel/algobase.h: Do not include <bits/algorithmfwd.h>.
	(equal): Move after mismatch.
	* include/bits/stl_heap.h (is_heap, is_heap_until): Reorder.
	* include/bits/char_traits.h: Include <bits/stl_algobase.h> instead
	of <bits/algorithmfwd.h>.
	* include/bits/stl_algo.h: Include first <bits/algorithmfwd.h>.
	* include/bits/algorithmfwd.h (lexicographical_compare): Do not
	declare overloads.
	* include/parallel/partition.h: Include <parallel/random_number.h>.
	* testsuite/util/testsuite_abi.cc: Include <algorithm>.

2007-11-14  Johannes Singler  <singler@ira.uka.de>

      * include/parallel/multiway_merge.h: More robust finding of an
        arbitrary existing element inside the input sequences.
      * include/bits/stl_algo.h: Fix typo to actually call appropriate
        sequential version.

2007-11-13  Benjamin Kosnik  <bkoz@redhat.com>

	* docs/html/documentation.html: First pass at unified table of contents.
	* docs/html/abi.html: Move...
	* docs/html/17_intro/abi.html: ...here.
	* docs/html/17_intro/porting-howto.html: Update, edit, put
	resulting pieces into...
	* docs/html/17_intro/api.html: New.
	* docs/html/17_intro/c++0x_status.html: New.
	* docs/html/17_intro/CHECKLIST: Move to...
	* docs/html/17_intro/c++1998_status.html: ...here.
	* docs/html/ext/tr1.html: Move ...
	* docs/html/17_intro/tr1_status.html: ...here.
	* docs/html/debug_mode.html: Move...
	* docs/html/ext/debug_mode.html: ...here.
	* docs/html/parallel_mode.html: Move...
	* docs/html/ext/parallel_mode.html: ...here
	* docs/html/17_intro/BUGS: Remove.
	* docs/html/17_intro/concept_check.diff: Remove.
	* docs/html/17_intro/HEADER_POLICY: Remove.
	* docs/html/17_intro/headers_cc.txt: Remove.
	* docs/html/17_intro/PROBLEMS: Remove.
	* docs/html/17_intro/RELEASE-NOTES: Remove.
	* docs/html/explanations.html: Remove.
	* docs/html/makedoc.awk: Remove.
	* docs/html/faq/index.txt: Remove. HTML only.
	* /docs/html/Makefile: Remove.
	
	* docs/html/17_intro/configury.html: Editing, updating,
	consistency check with doxygen conventions. Change libstdc++-v3 to
	libstdc++.	
	* docs/html/17_intro/howto.html: Same.
	* docs/html/17_intro/license.html: Same.
	* docs/html/17_intro/porting.html: Same.
	* docs/html/18_support/howto.html: Same.
	* docs/html/19_diagnostics/howto.html: Same.
	* docs/html/20_util/allocator.html: Same.
	* docs/html/20_util/howto.html: Same.
	* docs/html/21_strings/howto.html: Same.
	* docs/html/22_locale/codecvt.html: Same.
	* docs/html/22_locale/ctype.html: Same.
	* docs/html/22_locale/howto.html: Same.
	* docs/html/22_locale/messages.html: Same.
	* docs/html/23_containers/howto.html: Same.
	* docs/html/24_iterators/howto.html: Same.
	* docs/html/25_algorithms/howto.html: Same.
	* docs/html/26_numerics/howto.html: Same.
	* docs/html/27_io/howto.html: Same.
	* docs/html/configopts.html: Same.
	* docs/html/debug.html: Same.
	* docs/html/ext/ballocator_doc.html: Same.
	* docs/html/ext/howto.html: Same.
	* docs/html/ext/mt_allocator.html: Same.
	* docs/html/ext/sgiexts.html: Same.
	* docs/html/faq/index.html: Same.
	* docs/html/install.html: Same.
	* docs/html/test.html: Same.

	* include/bits/c++config: Change _GLIBCXX_DEPRECATED to
	_GLIBCXX_DEPRECATED_ATTR, _GLIBCXX_VISIBILITY to
	_GLIBCXX_VISIBILITY_ATTR.
	* include/backward/auto_ptr.h: Same.
	* include/backward/binders.h: Same.
	* include/bits/stl_function.h: Same.
	* include/std/memory: Same.
	* include/std/streambuf: Same.
	* include/tr1_impl/boost_shared_ptr.h: Same.
	* src/globals_io.cc: Same.
	* src/ios_init.cc: Same.

2007-11-13  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/deque.tcc (deque<>::_M_push_back_aux,
	_M_push_front_aux): Do not copy unnecessarily to __t_copy.

2007-11-12  Chris Jefferson  <chris@bubblescope.net>
	    Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_deque.h (deque<>::push_back<>(_Args...),
	deque<>::push_front<>(_Args...), emplace<>(iterator, _Args...),
	insert(iterator, _Tp&&), _M_push_back_aux<>(_Args&&...),
	_M_push_front_aux<>(_Args&&...), _M_insert_aux<>(iterator,
	_Args&&...)): Add.
	* include/deque/deque.tcc (insert(iterator, value_type&&),
	emplace<>(iterator, _Args...), _M_push_back_aux<>(_Args&&...),
	_M_push_front_aux<>(_Args&&...), _M_insert_aux<>(iterator,
	_Args&&...)): Define.
	(_M_insert_aux(iterator, size_type, const value_type&),
	_M_insert_aux<>(iterator, _ForwardIterator, _ForwardIterator,
	size_type)): Use _GLIBCXX_MOVE3, _GLIBCXX_MOVE_BACKWARD3,
	__uninitialized_move*, __uninitialized_fill_move,
	__uninitialized_copy_move, when possible.
	* include/bits/stl_uninitialized.h (__uninitialized_copy_copy,
	__uninitialized_fill_copy, __uninitialized_copy_fill): Remove.
	(__uninitialized_copy_move, __uninitialized_move_copy,
	__uninitialized_move_fill, __uninitialized_fill_move): Add.
	* include/debug/deque (deque<>::push_back<>(_Args...),
	deque<>::push_front<>(_Args...), emplace<>(iterator, _Args...),
	insert(iterator, _Tp&&)): Add.
	* testsuite/23_containers/deque/modifiers/moveable.cc: Enable.
	* testsuite/23_containers/deque/capacity/moveable.cc: Likewise.
	* testsuite/23_containers/deque/cons/moveable.cc: Likewise.
	* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:
	Adjust dg-error line numbers.
	* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/deque/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/deque/requirements/dr438/
	constructor_2_neg.cc: Likewise.

	* include/debug/vector (vector<>::insert(iterator, _Tp&&)): Minor
	tweak, prefer std::move.

2007-11-11  Howard Hinnant  <hhinnant@apple.com>

	* include/bits/stl_pair.h (pair<>::pair<>(_U1&&, _Arg0&&,
	_Args&&...)): Add.

2007-11-11  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_list.h (list<>::_M_create_node<>(_Args&&...),
	_M_insert<>(iterator, _Args&&...), push_front<>(_Args&&...),
	push_back<>(_Args&&...)): Add.
	(list<>::emplace<>(iterator, _Args&&...), insert(iterator,
	value_type&&)): Declare.
	(splice(iterator, list&&), splice(iterator, list&&, iterator),
	splice(iterator, list&&, iterator, iterator), merge(list&&),
	merge(list&&, _StrictWeakOrdering)): Add C++0x signatures.
	* include/bits/list.tcc (list<>::emplace<>(iterator, _Args&&...),
	insert(iterator, value_type&&)): Define.
	* include/debug/list (list<>::emplace<>(iterator, _Args&&...),
	insert(iterator, value_type&&)): Add.
	(splice(iterator, list&&), splice(iterator, list&&, iterator),
	splice(iterator, list&&, iterator, iterator), merge(list&&),
	merge(list&&, _StrictWeakOrdering)): Add C++0x signatures, use
	_GLIBCXX_MOVE.
	* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:
	Likewise.
	* testsuite/23_containers/list/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/list/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/list/requirements/dr438/
	constructor_2_neg.cc: Likewise.

2007-11-09  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_deque.h (deque<>::operator=(deque&&)): Implement
	resolution of DR 675, call clear first.
	* include/bits/stl_list.h (list<>::operator=(list&&)): Likewise.
	* include/bits/stl_bvector.h (vector<bool>::operator=(vector&&)):
	Likewise.
	* include/bits/stl_vector.h (vector<>::operator=(vector&&)): Likewise.
	* include/bits/stl_map.h (map<>::operator=(map&&)): Likewise.
	* include/bits/stl_multimap.h (multimap<>::operator=(multimap&&)):
	Likewise.
	* include/bits/stl_multiset.h (multiset<>::operator=(multiset&&)):
	Likewise.
	* include/bits/stl_set.h (set<>::operator=(set&&)): Likewise.
	* include/debug/map.h (map<>::operator=(map&&)): Likewise.
	* include/debug/set.h (set<>::operator=(set&&)): Likewise.
	* include/debug/multimap.h (multimap<>::operator=(multimap&&)):
	Likewise.
	* include/debug/multiset.h (multiset<>::operator=(multiset&&)):
	Likewise.
	* include/debug/deque (deque<>::operator=(deque&&)): Likewise.
	* include/debug/list (list<>::operator=(list&&)): Likewise.
	* include/debug/vector (vector<>::operator=(vector&&)): Likewise.
	* testsuite/23_containers/multimap/moveable.cc: Adjust.
	* testsuite/23_containers/multiset/moveable.cc: Likewise.
	* testsuite/23_containers/set/moveable.cc: Likewise.
	* testsuite/23_containers/map/moveable.cc: Likewise.
	* testsuite/20_util/pair/moveable.cc: Likewise.
	* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:
	Adjust dg-error line numbers.
	* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/deque/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/deque/requirements/dr438/
	constructor_2_neg.cc: Likewise.
	* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:
	Likewise.
	* testsuite/23_containers/list/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/list/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/list/requirements/dr438/
	constructor_2_neg.cc: Likewise.
	* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:
	Likewise.
	* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_2_neg.cc: Likewise.

2007-11-09  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/34032
	* acinclude.m4 ([GLIBCXX_ENABLE_C99], [GLIBCXX_CHECK_C99_TR1]):
	Use -std=c++98 instead of the default -std=gnu++98.
	* configure: Regenerate.

2007-11-08  Paolo Carlini  <pcarlini@suse.de>

	* config/io/basic_file_stdio.cc (fopen_mode): Add modes missing
	per DR 596.
	* testsuite/27_io/basic_filebuf/open/char/4.cc: Extend.
	* include/std/fstream: Update comment preceding open.
	* docs/html/ext/howto.html: Update.

2007-11-08  Paolo Carlini  <pcarlini@suse.de>

	* include/std/type_traits (__decay_selector<_Up, false, false>):
	Change according to DR 705.
	* include/bits/stl_pair.h (make_pair(_T1&&, _T2&&)): Change
	according to DR 706.
	* include/tr1_impl/tuple: Tweak.

2007-11-08  Paolo Carlini  <pcarlini@suse.de>

	* include/debug/vector (push_back, emplace): Fix signature typo.

2007-11-08  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/locale_facets.h (ctype<char>::taple, classic_table):
	Implement trivial resolution of DR 695 [Ready].
	* testsuite/22_locale/ctype/dr695.cc: New.
	* docs/html/ext/howto.html: Update.

2007-11-08  Paolo Carlini  <pcarlini@suse.de>

	* docs/html/ext/lwg-active.html: Update to Revision R52.
	* docs/html/ext/lwg-closed.html: Likewise.
	* docs/html/ext/lwg-defects.html: Likewise.
	* docs/html/ext/howto.html: Adjust.

2007-11-07  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/complex (fabs): In C++0x mode adjust
	return type per DR 595 [Ready].

2007-11-07  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_iterator.h (move_iterator<>::pointer): Adjust
	typedef per DR 680 [Ready].

2007-11-06  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/vector.tcc (vector<>::_M_insert_aux<>(iterator,
	_Args&&...)): In C++0x mode do not use temporary copies.
	(insert(iterator, const value_type&)): Copy to a temporary
	when not reallocating.

	* include/bits/vector.tcc (insert(iterator, value_type&&)):
	Minor tweaks in C++0x mode.

2007-11-06  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* include/tr1_impl/boost_shared_ptr.h: Avoid unnecessary memory
	barriers in _S_atomic case.

2007-11-05  Chris Jefferson  <chris@bubblescope.net>
	    Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_vector.h (vector<>::push_back<>(_Args...),
	emplace<>(iterator, _Args...), insert(iterator, _Tp&&),
	_M_insert_aux<>(iterator, _Args&&...)): Add.
	* include/bits/vector.tcc (insert(iterator, value_type&&),
	emplace<>(iterator, _Args...), _M_insert_aux<>(iterator, _Args&&...)):
	Define.
	(_M_fill_insert(iterator, size_type, const value_type&),
	_M_range_insert(iterator, _ForwardIterator, _ForwardIterator,
	std::forward_iterator_tag)): Use __uninitialized_move_a,
	_GLIBCXX_MOVE_BACKWARD3 when possible.
	* include/bits/stl_uninitialized.h (__uninitialized_move_a): Add.
	* include/debug/vector (vector<>::push_back<>(_Args...),
	emplace<>(iterator, _Args...), insert(iterator, _Tp&&)): Add.
	* testsuite/23_containers/vector/modifiers/moveable.cc: Enable.
	* testsuite/23_containers/vector/resize/moveable.cc: Likewise.
	* testsuite/23_containers/vector/cons/moveable.cc: Likewise.
	* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:
	Adjust dg-error line numbers.
	* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_2_neg.cc: Likewise.

2007-11-03  Paolo Carlini  <pcarlini@suse.de>
	    Kai-Uwe Bux  <bux@kubux.net>

	* include/tr1_impl/random (variate_generator<>::min, max,
	operator()()): Return non-trivial values when _Engine_result_type
	is a floating point type and result_type is an integer type.

2007-11-02  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algo.h (minmax, minmax_element): Add.
	* include/bits/algorithmfwd.h: Update.
	* testsuite/25_algorithms/minmax/requirements/
	explicit_instantiation/2.cc: New.
	* testsuite/25_algorithms/minmax/requirements/
	explicit_instantiation/pod.cc: Likewise.
	* testsuite/25_algorithms/minmax/1.cc: Likewise.
	* testsuite/25_algorithms/minmax_element/check_type.cc: Likewise.
	* testsuite/25_algorithms/minmax_element/requirements/
	explicit_instantiation/2.cc: Likewise.
	* testsuite/25_algorithms/minmax_element/requirements/
	explicit_instantiation/pod.cc: Likewise.
	* testsuite/25_algorithms/minmax_element/1.cc: Likewise.
	* testsuite/25_algorithms/headers/algorithm/synopsis.cc: Update.

2007-11-02  Johannes Singler  <singler@ira.uka.de>

        * include/parallel/workstealing.h: Replaced pragma by function
          call lock.
        * include/parallel/search.h: Same
        * include/parallel/partition.h: Same
        * include/parallel/find.h: Same

2007-11-01  Janis Johnson  <janis187@us.ibm.com>

	PR testsuite/25352
	* testsuite/26_numerics/headers/cmath/c99_classification_macros_c.cc:
	Remove xfail from dg-do and add dg-skip-if.

2007-10-31  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_queue.h (queue<>::push(value_type&&)): Replace
	with "emplace" version per DR 756.
	(priority_queue<>::push(value_type&&)): Likewise.
	* include/bits/stl_stack.h (stack<>::push(value_type&&)): Likewise.

2007-10-30  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/random (uniform_int<>::
	_M_call(_UniformRandomNumberGenerator&, result_type, result_type,
	true_type)): Only declare.
	* include/tr1_impl/random.tcc (uniform_int<>::
	_M_call(_UniformRandomNumberGenerator&, result_type, result_type,
	true_type)): Re-do, unbiased for the currently supported ranges;
	add comment.

2007-10-30  Benjamin Kosnik  <bkoz@redhat.com>

	* docs/html/ext/pb_ds/multimap_text_insert_timing_test_small.html:
	Correct filename.
	* docs/html/ext/pb_ds/multimap_text_find_timing_test_large.html: Same.
	* docs/html/ext/pb_ds/
	multimap_text_insert_mem_usage_test_small.html: Same.
	* docs/html/ext/pb_ds/multimap_text_insert_timing_test_large.html: Same.
	* docs/html/ext/pb_ds/
	multimap_text_insert_mem_usage_test_large.html: Same.
	* docs/html/ext/pb_ds/multimap_text_find_timing_test_small.html: Same.

2007-10-30  Benjamin Kosnik  <bkoz@redhat.com>

	* include/Makefile.am (PCHFLAGS): Remove -Wno-deprecated.
	* include/Makefile.in: Regenerate.

	* include/std/memory: Remove extraneous include.

2007-10-29  Benjamin Kosnik  <bkoz@redhat.com>

	* include/bits/c++config (_GLIBCXX_DEPRECATED,
	_GLIBCXX_USE_DEPRECATED): New. Adjust comments.
	* include/bits/stl_auto_ptr.h: Move...
	* includse/backward/auto_ptr.h: ...here.
	* include/bits/stl_function.h (binder1st, binder2nd, bind1st,
	bind2nd): Move...
	* include/backward/binders.h: ...here. Deprecate in C++0x.

	* include/tr1_impl/boost_shared_ptr.h: Guard auto_ptr usage.
	* include/std/memory: Same.
	* include/std/streambuf: Consistent use of _GLIBCXX_USE_DEPRECATED.

	* include/backward/strstream: Fix guard macros.
	* include/backward/backward_warning.h: Adjust for all new items.

	* config/abi/pre/gnu.ver: Export basic_streambuf::stossc.

	* include/Makefile.am (backward_headers): Adjust.
	* include/Makefile.in: Regenerate.
	* configure: Regenerate.

2007-10-29  Benjamin Kosnik  <bkoz@redhat.com>

	* include/Makefile.am (ext_compat_headers): New.
	* include/Makefile.in: Regenerate.
	* configure: Regenerate.

2007-10-28  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algobase.h (_GLIBCXX_MOVE3,
	_GLIBCXX_MOVE_BACKWARD3): Add.
	* include/bits/stl_iterator.h (_GLIBCXX_MAKE_MOVE_ITERATOR): Add.
	* include/bits/vector.tcc (vector<>::reserve): Use the latter.
	(vector<>::erase): Use _GLIBCXX_MOVE3.
	* include/bits/deque.tcc (deque<>::erase): Use _GLIBCXX_MOVE3
	and _GLIBCXX_MOVE_BACKWARD3.
	* testsuite/23_containers/vector/modifiers/erase/moveable.cc: New.
	* testsuite/23_containers/vector/capacity/reserve/moveable.cc: New.
	* testsuite/23_containers/deque/modifiers/erase/moveable.cc: New.

2007-10-28  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_uninitialized.h (uninitialized_copy): Use
	::new and value_type per the letter of the standard.
	* testsuite/20_util/specialized_algorithms/uninitialized_copy/
	move_iterators/1.cc: New.

	* testsuite/20_util/specialized_algorithms/16505.cc: Move to...
	* testsuite/20_util/specialized_algorithms/uninitialized_fill_n/
	16505.cc: ... here.
	* testsuite/20_util/specialized_algorithms/32158.cc: Move to...
	* testsuite/20_util/specialized_algorithms/uninitialized_fill/
	32158.cc: ... here.

	* include/bits/stl_construct.h (_Construct(_T1*)): Remove, unused.

2007-10-27  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algobase.h (struct __miter_base): Add.
	(__copy_move_a2, __copy_move_backward_a2): Add.
	(copy, copy_backward, move, move_backward): Adjust, call *a2 helpers.
	* include/bits/cpp_type_traits.h (struct __is_move_iterator): Add.
	* include/bits/streambuf_iterator.h (__copy_move_a<>): Rename
	to __copy_move_a2.
	* include/std/streambuf (friend __copy_move_a<>): Likewise.
	* testsuite/25_algorithms/copy/move_iterators/1.cc: New.
	* testsuite/25_algorithms/copy_backward/move_iterators/1.cc: Likewise.

	* include/bits/stl_iterator.h (__normal_iterator<>::_Iterator_type):
	Rename to iterator_type.

2007-10-26  Paolo Carlini  <pcarlini@suse.de>

	* include/ext/throw_allocator.h (throw_allocator<>::
	construct<>(pointer, _Args&&...)): Add.
	* include/ext/pool_allocator.h (__pool_alloc<>::
	construct<>(pointer, _Args&&...)): Likewise.
	(construct(pointer, const _Tp&)): Cast pointer to void*.
	* include/ext/bitmap_allocator.h (bitmap_allocator<>::
	construct<>(pointer, _Args&&...)): Add.
	(construct(pointer, const _Tp&)): Cast pointer to void*.
	* include/ext/new_allocator.h (new_allocator<>::
	construct<>(pointer, _Args&&...)): Add.
	(construct(pointer, const _Tp&)): Cast pointer to void*.
	* include/ext/malloc_allocator.h (malloc_allocator<>::
	construct<>(pointer, _Args&&...)): Add.
	(construct(pointer, const _Tp&)): Cast pointer to void*.
	* include/ext/array_allocator.h (array_allocator<>::
	construct<>(pointer, _Args&&...)): Add.
	(construct(pointer, const _Tp&)): Cast pointer to void*.
	* include/ext/mt_allocator.h (__mt_alloc<>::
	construct<>(pointer, _Args&&...)): Add.
	(construct(pointer, const _Tp&)): Cast pointer to void*.
	* testsuite/util/testsuite_allocator.h (tracker_allocator<>::
	construct<>(pointer, _Args&&...)): Add.
	(construct(pointer, const _Tp&)): Cast pointer to void*.
 	(uneq_allocator<>::construct<>(pointer, _Args&&...)): Add.
	(construct(pointer, const _Tp&)): Cast pointer to void*.
	* testsuite/ext/mt_allocator/variadic_construct.cc: New.
	* testsuite/ext/new_allocator/variadic_construct.cc: Likewise.
	* testsuite/ext/throw_allocator/variadic_construct.cc: Likewise.
	* testsuite/ext/malloc_allocator/variadic_construct.cc: Likewise.
	* testsuite/ext/pool_allocator/variadic_construct.cc: Likewise.
	* testsuite/ext/bitmap_allocator/variadic_construct.cc: Likewise.
	* testsuite/ext/array_allocator/variadic_construct.cc: Likewise.

2007-10-26  Benjamin Kosnik  <bkoz@redhat.com>

	* include/std/unordered_map: Fix for parallel mode.
	* include/std/unordered_set: Same.

2007-10-25  Andreas Tobler  <a.tobler@schweiz.org>

	* include/Makefile.am (parallel_headers): Remove timing.h.
	* include/Makefile.in: Regenerate.

2007-10-25  Johannes Singler  <singler@ira.uka.de>

      * include/parallel/multiway_merge.h: Removed Timing<inactive_tag>
      * include/parallel/random_shuffle.h: Same
      * include/parallel/set_operations.h: Same
      * include/parallel/tree.h: Same
      * include/parallel/multiway_mergesort.h: Same
      * include/parallel/timing.h: Removed completely

2007-10-25  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algo.h (__lg<>(_Size)): Slightly tweak.
	(__lg(int), __lg(long), __lg(long long)): Add, overloads
	exploiting __builtin_clz*.

2007-10-24  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/array (_M_instance): Align naturally.
	* testsuite/ext/array_allocator/1.cc: Use ext/vstring,
	more solid than our current basic_string vs alignment.
	* testsuite/ext/array_allocator/2.cc: Likewise.
	* testsuite/ext/array_allocator/3.cc: Likewise.

2007-10-20  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_move.h (_GLIBCXX_MOVE): Wrap in parentheses.
	* include/bits/stl_algobase.h (__niter_base<>): Pass iterators
	by value, as everywhere else.

2007-10-20  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/random
	(uniform_int<>::_M_call(_UniformRandomNumberGenerator&, result_type,
	result_type, true_type)): Fix small thinko.

2007-10-19  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/33815
	* include/tr1_impl/random
	(uniform_int<>::_M_call(_UniformRandomNumberGenerator&, result_type,
	result_type, true_type)): Avoid the modulo (which uses the low-order
	bits).

2007-10-19  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algobase.h (struct __cm_assign,
	struct __copy_move, struct __copy_move_backward, move,
	move_backward): Add.
	(struct __copy, struct __copy_backward): Remove.
	(__copy_aux, __copy_backward_aux): Rename to...
	(__copy_move_a, __copy_move_backward_a): ... this, and
	adjust calls.
	(copy, copy_backward): Adjust calls.
	* include/bits/streambuf_iterator.h (__copy_aux): Rename
	to ...
	(__copy_move_a): ... this; add bool template parameter.
	* include/std/streambuf: Adjust friend declarations.
	* testsuite/util/testsuite_iterators.h
	(WritableObject<>::operator=(U&&)): Add.
	* testsuite/25_algorithms/move/1.cc: New.
	* testsuite/25_algorithms/move/requirements/
	explicit_instantiation/2.cc: Likewise.
	* testsuite/25_algorithms/move/requirements/
	explicit_instantiation/pod.cc: Likewise.
	* testsuite/25_algorithms/move_backward/1.cc: Likewise.
	* testsuite/25_algorithms/move_backward/requirements/
	explicit_instantiation/2.cc: Likewise.
	* testsuite/25_algorithms/move_backward/requirements/
	explicit_instantiation/pod.cc: Likewise.

2007-10-18  Kaz Kojima  <kkojima@gcc.gnu.org>

	* testsuite/tr1/5_numerical_facilities/special_functions/
	05_comp_ellint_2/check_nan.cc: Add -mieee for sh.

2007-10-18  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/allocator.h (struct __alloc_neq): Add.
	* include/bits/stl_list.h (list<>::_M_check_equal_allocators): Use it.

2007-10-18  Benjamin Kosnik  <bkoz@redhat.com>

	* include/ext/hash_map: To...
	* include/backward/hash_map: ...here. Remove debug mode.
	* include/ext/hash_set: To...
	* include/backward/hash_set: ...here. Remove debug mode.
	* include/ext/hash_fun.h: To...
	* include/backward/hash_fun.h: ...here.
	* include/ext/hashtable.h: To...
	* include/backward/hashtable.h: ...here.

	* include/bits/c++config: Remove __gnu_cxx namespace from debug mode.
	* include/debug/debug.h: Same.

	* include/debug/hash_map: Remove.
	* include/debug/hash_multimap.h: Remove.
	* include/debug/hash_set.h: Remove.
	* include/debug/hash_set: Remove.
	* include/debug/hash_multiset.h: Remove.
	* include/debug/hash_map.h: Remove.

	* include/Makefile.am (ext_headers): Move hash_set, hash_map to
	backward.
	(debug_headers): Remove hash_map, hash_set, hash_map.h,
	hash_map.h, hash_multiset.h, hash_multimap.h.
	* include/Makefile.in: Regenerate.

	* docs/html/debug.html: Update.
	* docs/html/ext/howto.html: Same.
	* docs/html/faq/index.html: Same.
	* docs/doxygen/Intro.3: Same.
	* docs/doxygen/user.cfg.in: Adjust includes.
	* testsuite/ext/hash_map: Move to...
	* testsuite/backward/hash_map: ...here.
	* testsuite/ext/hash_set: Move to...
	* testsuite/backward/hash_set: ...here.

2007-10-18  Benjamin Kosnik  <bkoz@redhat.com>

	Removal of pre-ISO C++ items from include/backwards.
	* include/Makefile.am (backward_headers): Remove all but strstream,
	backward_warning.h.
	* include/Makefile.in: Regenerate.
	* include/backward/new.h: Remove.
	* include/backward/iterator.h: Same.
	* include/backward/alloc.h: Same.
	* include/backward/set.h: Same.
	* include/backward/hashtable.h: Same.
	* include/backward/hash_set.h: Same.
	* include/backward/fstream.h: Same.
	* include/backward/tempbuf.h: Same.
	* include/backward/istream.h: Same.
	* include/backward/bvector.h: Same.
	* include/backward/stack.h: Same.
	* include/backward/rope.h: Same.
	* include/backward/complex.h: Same.
	* include/backward/ostream.h: Same.
	* include/backward/heap.h: Same.
	* include/backward/iostream.h: Same.
	* include/backward/function.h: Same.
	* include/backward/multimap.h: Same.
	* include/backward/pair.h: Same.
	* include/backward/stream.h: Same.
	* include/backward/iomanip.h: Same.
	* include/backward/slist.h: Same.
	* include/backward/tree.h: Same.
	* include/backward/vector.h: Same.
	* include/backward/deque.h: Same.
	* include/backward/multiset.h: Same.
	* include/backward/defalloc.h: Same.
	* include/backward/list.h: Same.
	* include/backward/map.h: Same.
	* include/backward/algobase.h: Same.
	* include/backward/hash_map.h: Same.
	* include/backward/algo.h: Same.
	* include/backward/queue.h: Same.
	* include/backward/streambuf.h: Same.
	* testsuite/backward/header_hash_set_h.cc: Same.
	* testsuite/backward/header_slist_h.cc: Same.
	* testsuite/backward/header_hash_map_h.cc: Same.
	* testsuite/backward/header_tempbuf_h.cc: Same.
	* testsuite/backward/header_deque_h.cc: Same.
	* testsuite/backward/header_rope_h.cc: Same.
	* testsuite/backward/header_iterator_h.cc: Same.
	* testsuite/backward/header_hashtable_h.cc: Same.

2007-10-18  Benjamin Kosnik  <bkoz@redhat.com>

	PR libstdc++/30085
	* include/debug/unordered_map: New.
	* include/debug/unordered_set: New.
	* include/debug/safe_association.h: New.
	* include/std/unordered_map: Include debug header if _GLIBCXX_DEBUG.
	* include/std/unordered_set: Same.
	* include/Makefile.am (debug_headers): Add unordered_map,
	unordered_set, safe_association.h.
	* include/Makefile.in: Regenerate.
	* testsuite/23_containers/unordered_map/requirements/debug.cc: New.
	* testsuite/23_containers/unordered_multimap/requirements/
	debug.cc: New.
	* testsuite/23_containers/unordered_set/requirements/debug.cc: New.
	* testsuite/23_containers/unordered_multiset/requirements/
	debug.cc: New.

2007-10-18  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/util/native_type/assoc/native_hash_multimap.hpp: Remove
	hash_map include.

2007-10-18  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/33807
	* include/bits/allocator.h (operator==(const allocator<_Tp>&,
	const allocator<_Tp>&), operator!=(const allocator<_Tp>&,
	const allocator<_Tp>&)): Add.
	* testsuite/20_util/allocator/33807.cc: New.

2007-10-17  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/cpp_type_traits.h (__is_byte): Add.
	* include/bits/stl_algobase.h (struct __fill, struct __fill_n,
	__fill_aux, __fill_n_aux): Remove.
	(__fill_a, __fill_n_a): Add.
	(fill, fill_n): Adjust.

2007-10-17  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_iterator.h (back_insert_iterator<>::operator=
	(typename _Container::value_type&&), front_insert_iterator<>::
	operator=(typename _Container::value_type&&), insert_iterator<>::
	operator=(typename _Container::value_type&&)): Add.

	* include/bits/stl_iterator.h (insert_iterator<>::operator=
	(typename _Container::const_reference)): Fix typo in signature.

2007-10-17  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/array: Correct macro guarding cbegin, cend,
	crbegin, crend.
	* include/tr1_impl/hashtable: Likewise.

2007-10-16  Paolo Carlini  <pcarlini@suse.de>

	* include/ext/vstring.h (__versa_string<>::front,
	__versa_string<>::back): Add.
	* testsuite/ext/vstring/element_access/char/front_back.cc: New.
	* testsuite/ext/vstring/element_access/wchar_t/front_back.cc: Likewise.

2007-10-16  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_queue.h (queue<>::queue(_Sequence&&),
	queue<>::queue(queue&&), queue<>::operator=(queue&&),
	queue<>::push(value_type&&), queue<>::swap(queue&&),
	swap(queue<>&, queue<>&), swap(queue<>&&, queue<>&),
	swap(queue<>&, queue<>&&), priority_queue<>::
	priority_queue(const _Compare&, _Sequence&&),
	priority_queue<>::priority_queue(_InputIterator, _InputIterator,
	const _Compare&, _Sequence&&),
	priority_queue<>::priority_queue(priority_queue&&),
	priority_queue<>::operator=(priority_queue&&),
	priority_queue<>::push(value_type&&),
	priority_queue<>::swap(priority_queue&&),
	swap(priority_queue<>&, priority_queue<>&),
	swap(priority_queue<>&&, priority_queue<>&),
	swap(priority_queue<>&, priority_queue<>&&)): Add.
	* include/bits/stl_stack.h (stack<>::stack(_Sequence&&),
	stack<>::push(value_type&&), stack<>::swap(stack&&),
	swap(stack<>&, stack<>&), swap(stack<>&&, stack<>&),
	swap(stack<>&, stack<>&&)): Add.
	* testsuite/23_containers/queue/moveable.cc: New.
	* testsuite/23_containers/priority_queue/moveable.cc: Likewise.

2007-10-16  Paolo Carlini  <pcarlini@suse.de>

	* include/ext/vstring.h (__versa_string<>::
	__versa_string(__versa_string&&),
	__versa_string<>::operator=(__versa_string&&,
	swap(__versa_string<>&&, __versa_string<>&),
	swap(__versa_string<>(&, __versa_string<>&&)): Add.
	(__versa_string<>::swap(__versa_string&&)): Adjust for C++0x.
	* include/ext/sso_string_base.h
	(__sso_string_base(__sso_string_base&&)): Add.
	(__sso_string_base()): Use _Alloc_hider(_CharT*).
	* include/ext/rc_string_base.h (__rc_string_base(__rc_string_base&&)):
	Add.
	(__rc_string_base()): Use _Alloc_hider(_CharT*).
	* include/ext/vstring_util.h (_Alloc_hider::_Alloc_hider(_CharT*)):
	Add.
	* testsuite/ext/vstring/moveable.cc: Add.

	* include/bits/stl_tree.h (_Rb_tree(_Rb_tree&&)): Add.
	* include/bits/stl_map.h (map<>::map(map&&)): Forward to the latter.
	* include/bits/stl_set.h (set<>::set(set&&)): Likewise.
	* include/bits/stl_multimap.h (multimap<>::multimap(multimap&&)):
	Likewise.
	* include/bits/stl_multiset.h (multiset<>::multiset(multiset&&)):
	Likewise.
	* include/bits/stl_deque.h (_Deque_base<>::_Deque_base(_Deque_base&&)):
	Add.
	(deque<>::deque(deque&&)): Forward to the latter.
	* include/bits/stl_list.h (_List_base<>::_List_base(_List_base&&)):
	Add.
	(list<>::list(list&&)): Forward to the latter.
	* include/bits/stl_vector.h
	(_Vector_base<>::_Vector_base(_Vector_base&&)): Add.
	(vector<>::vector(vector&&)): Forward to the latter.
	* include/bits/stl_bvector.h
	(_Bvector_base<>::_Bvector_base(_Bvector_base&&)): Add.
	(vector<bool>::vector(vector&&)): Forward to the latter.

	* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:
	Adjust dg-error lines.
	* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_2_neg.cc: Likewise.
	* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:
	Likewise.
	* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/deque/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/deque/requirements/dr438/
	constructor_2_neg.cc: Likewise.
	* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:
	Likewise.
	* testsuite/23_containers/list/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/list/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/list/requirements/dr438/
	constructor_2_neg.cc: Likewise.

2007-10-15  Paolo Carlini  <pcarlini@suse.de>

	* include/debug/set.h (set<>::cbegin, cend, crbegin, crend): Add.
	* include/debug/multiset.h (set<>::cbegin, cend, crbegin, crend):
	Likewise.
	* include/debug/vector (vector<>::cbegin, cend, crbegin, crend):
	Likewise.
	* include/debug/map.h (map<>::cbegin, cend, crbegin, crend):
	Likewise.
	* include/debug/deque (deque<>::cbegin, cend, crbegin, crend):
	Likewise.
	* include/debug/list (list<>::cbegin, cend, crbegin, crend):
	Likewise.
	* include/debug/multimap.h (multimap<>::cbegin, cend, crbegin,
	crend): Likewise.
	* include/tr1_impl/array (array<>::cbegin, cend, crbegin, crend):
	Likewise.
	* include/ext/vstring.h (__versa_string<>::cbegin, cend, crbegin,
	crend): Likewise.
	* include/bits/stl_list.h (list<>::cbegin, cend, crbegin, crend):
	Likewise.
	* include/bits/stl_map.h (map<>::cbegin, cend, crbegin, crend):
	Likewise.
	* include/bits/stl_set.h (set<>::cbegin, cend, crbegin, crend):
	Likewise.
	* include/bits/stl_multimap.h (multimap<>::cbegin, cend, crbegin,
	crend): Likewise.
	* include/bits/stl_vector.h (vector<>::cbegin, cend, crbegin, crend):
	Likewise.
	* include/bits/stl_deque.h (deque<>::cbegin, cend, crbegin, crend):
	Likewise.
	* include/bits/stl_multiset.h (multiset<>::cbegin, cend, crbegin,
	crend): Likewise.
	* include/bits/stl_bvector.h (vector<bool>::cbegin, cend, crbegin,
	crend): Likewise.
	* include/tr1_impl/hashtable (_Hashtable<>::cbegin, cend): Ad.

	* testsuite/ext/vstring/requirements/citerators.cc: Add.
	* testsuite/23_containers/unordered_map/requirements/citerators.cc:
	Likewise.
	* testsuite/23_containers/multimap/requirements/citerators.cc:
	Likewise.
	* testsuite/23_containers/set/requirements/citerators.cc: Likewise.
	* testsuite/23_containers/unordered_multimap/requirements/
	citerators.cc: Likewise.
	* testsuite/23_containers/unordered_set/requirements/citerators.cc:
	Likewise.
	* testsuite/23_containers/vector/requirements/citerators.cc: Likewise.
	* testsuite/23_containers/vector/bool/requirements/citerators.cc:
	Likewise.
	* testsuite/23_containers/deque/requirements/citerators.cc: Likewise.
	* testsuite/23_containers/multiset/requirements/citerators.cc:
	Likewise.
	* testsuite/23_containers/list/requirements/citerators.cc: Likewise.
	* testsuite/23_containers/unordered_multiset/requirements/
	citerators.cc: Likewise.
	* testsuite/23_containers/map/requirements/citerators.cc: Likewise.
	* testsuite/23_containers/array/requirements/citerators.cc: Likewise.

	* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:
	Adjust dg-error lines.
	* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_2_neg.cc: Likewise.
	* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:
	Likewise.
	* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/deque/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/deque/requirements/dr438/
	constructor_2_neg.cc: Likewise.
	* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:
	Likewise.
	* testsuite/23_containers/list/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/list/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/list/requirements/dr438/
	constructor_2_neg.cc: Likewise.

2007-10-15  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/33773 (cont)
	* testsuite/21_strings/headers/cwchar/macros.cc: Guard with
	_GLIBCXX_USE_WCHAR_T, instead.

2007-10-15  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/33771
	PR libstdc++/33773
	* testsuite/21_strings/headers/cwchar/macros.cc: Guard test with
	_GLIBCXX_HAVE_WCHAR_H.
	* testsuite/21_strings/headers/cwctype/macros.cc: Likewise with
	_GLIBCXX_HAVE_WCTYPE_H.
	* testsuite/17_intro/headers/c++200x/all.cc: Guard inclusions
	of <wchar.h> and <wctype.h>.
	* testsuite/17_intro/headers/c++200x/all_multiple_inclusion.cc:
	Likewise.
	* testsuite/17_intro/headers/c++1998/all.cc: Likewise.
	* testsuite/17_intro/headers/c++1998/all_multiple_inclusion.cc:
	Likewise.

2007-10-14  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algo.h (is_sorted, is_sorted_until): Add.
	* include/bits/algorithmfwd.h: Add.
	* include/ext/algorithm: Adjust.
	* testsuite/25_algorithms/is_sorted/requirements/
	explicit_instantiation/2.cc: New.
	* testsuite/25_algorithms/is_sorted/requirements/
	explicit_instantiation/pod.cc: Likewise.
	* testsuite/25_algorithms/is_sorted/1.cc: Likewise.
	* testsuite/25_algorithms/is_sorted_until/requirements/
	explicit_instantiation/2.cc: Likewise.
	* testsuite/25_algorithms/is_sorted_until/requirements/
	explicit_instantiation/pod.cc: Likewise.
	* testsuite/25_algorithms/is_sorted_until/1.cc: Likewise.
	* testsuite/25_algorithms/headers/algorithm/synopsis.cc:
	Add is_sorted and is_sorted_until.

	* include/bits/stl_heap.h (is_heap_until): Add concept and
	debug-mode checks.

2007-10-12  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_heap.h (__is_heap_until): Add.
	(__is_heap(_RandomAccessIterator, _Distance),
	__is_heap(_RandomAccessIterator, _Compare, _Distance)):
	Adjust, call the latter.
	(is_heap, is_heap_until): Add, call the above.
	* include/bits/algorithmfwd.h: Add.
	* testsuite/25_algorithms/is_heap/requirements/
	explicit_instantiation/2.cc: New.
	* testsuite/25_algorithms/is_heap/requirements/
	explicit_instantiation/pod.cc: Likewise.
	* testsuite/25_algorithms/is_heap/1.cc: Likewise.
	* testsuite/25_algorithms/is_heap_until/requirements/
	explicit_instantiation/2.cc: Likewise.
	* testsuite/25_algorithms/is_heap_until/requirements/
	explicit_instantiation/pod.cc: Likewise.
	* testsuite/25_algorithms/is_heap_until/1.cc: Likewise.
	* testsuite/25_algorithms/headers/algorithm/synopsis.cc:
	Add is_heap and is_heap_until.

2007-10-12  Benjamin Kosnik  <bkoz@redhat.com>

	* docs/doxygen/user.cfg.in: Scan tr1_impl/hashtable.
	* include/tr1_impl/hashtable: Correct comment.

	* include/ext/hash_map: Remove extraneous public markers.
	* include/ext/hash_set: Same.

	* testsuite/25_algorithms/headers/parallel_algorithm.cc: Move
	inside algorithm directory.
	* testsuite/25_algorithms/headers/algorithm_parallel_mode.cc: Same.
	* testsuite/25_algorithms/headers/parallel_algorithm_mixed1.cc: Same.
	* testsuite/25_algorithms/headers/parallel_algorithm_mixed2.cc: Same.
	* testsuite/25_algorithms/headers/algorithm/parallel_algorithm.cc:
	To this.
	* testsuite/25_algorithms/headers/algorithm/
	algorithm_parallel_mode.cc: Same.
	* testsuite/25_algorithms/headers/algorithm/
	parallel_algorithm_mixed1.cc: Same.
	* testsuite/25_algorithms/headers/algorithm/
	parallel_algorithm_mixed2.cc: Same.

	* testsuite/21_strings/basic_string/requirements/
	explicit_instantiation/debug.cc: Remove exception text.

	* testsuite/23_containers/vector/bool/modifiers/insert/31370.cc:
	Fix for debug mode testing.
	* testsuite/23_containers/vector/bool/capacity/29134.cc: Same.

2007-10-12  Jesper Nilsson  <jesper.nilsson@axis.com>

       * testsuite/tr1/5_numerical_facilities/special_functions/
       20_riemann_zeta/check_value_neg.c (MAX_ITERATIONS): Add limit
       when target is simulator.
       * testsuite/tr1/5_numerical_facilities/special_functions/
       20_riemann_zeta/check_value_pos.c (MAX_ITERATIONS): Likewise.

2007-10-11  Roger Sayle  <roger@eyesopen.com>

	* acinclude.m4 (GLIBCXX_CHECK_SYSTEM_ERROR): Add EOVERFLOW for Tru64.
	* configure: Regenerate.
	* config/os/generic/error_constants.h: Guard.
	* testsuite/19_diagnostics/headers/system_error/
	types_std_c++0x.cc: Same.

2007-10-11  Benjamin Kosnik  <bkoz@redhat.com>

	Convert ext/hash_map, set to tr1/functional, tr1/unordered_map, set.
	* include/ext/rope: Use tr1/functional hash instead of ext/hash_fun.h.
	* include/ext/pb_ds/detail/standard_policies.hpp: Same.
	* include/precompiled/extc++.h: Remove hash_map, hash_set.
	* testsuite/util/testsuite_abi.h (__gnu_cxx): Use unordered_map
	instead of hash_map. Remove hash specialization for string.
	* testsuite/util/testsuite_abi.cc: Include <vector>.
	* testsuite/util/native_type/assoc/native_hash_set.hpp: Remove
	hash_set code.
	* testsuite/util/native_type/assoc/native_hash_map.hpp: Remove
	hash_map code.
	* testsuite/util/native_type/assoc/native_hash_multimap.hpp:
	Change hash_multimap to unordered_multimap.
	* testsuite/util/testsuite_common_types.h: Remove hash_map, hash_set.
	* testsuite/ext/headers.cc: Same.
	* testsuite/17_intro/headers/all_c++200x_compatibility.cc: Remove
	hash_map.h, hash_set.h.
	* testsuite/17_intro/headers/all.cc: Same.
	* testsuite/17_intro/headers/all_pedantic_errors.cc: Same.

	* include/ext/pb_ds/detail/standard_policies.hpp: Format.
	* testsuite/util/native_type/assoc/native_set.hpp: Same,
	update comment.
	* testsuite/util/native_type/assoc/native_map.hpp: Same.
	* testsuite/util/native_type/assoc/native_multimap.hpp: Same.
	* testsuite/util/performance/assoc/timing/
	multimap_insert_test.hpp: Same.
	* testsuite/util/performance/assoc/timing/multimap_find_test.hpp: Same.

2007-10-11  Chris Jefferson  <chris@bubblescope.net>
	    Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_heap.h (__push_heap, push_heap, __adjust_heap,
	make_heap): Use _GLIBCXX_MOVE.
	(__pop_heap): Likewise, adjust signature.
	(pop_heap): Adjust __pop_heap call.
	* include/bits/stl_algo.h (__heap_select): Likewise.
	* testsuite/25_algorithms/heap/moveable.cc: Remove dg-require-rvalref.
	* testsuite/25_algorithms/partial_sort/moveable.cc: Likewise.

2007-10-11  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/33734
	* include/ext/codecvt_specializations.h (encoding_state::good,
	init, destroy): Use cast notation instead of reinterpret_cast.

2007-10-11  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/25_algorithms/heap/moveable.cc: Fix and extend.

2007-10-11  Danny Smith  <dannysmith@users.sourceforge.net>

	PR libstdc++/33578
	* include/parallel/compatibility.h.  Use POSIX sched_yield on
	__CYGWIN__
	(Sleep): Add prototype for __MINGW32__.

2007-10-10  Jason Merrill  <jason@redhat.com>

	* libsupc++/guard.cc (struct mutex_wrapper): Move into
	anonymous namespace.

2007-10-10  Paolo Carlini  <pcarlini@suse.de>

	* include/debug/list (list<>::list(list&&)): Fix.
	* include/debug/vector (vector<>::vector(vector&&)): Likewise.
	* include/debug/deque (deque<>::deque(deque&&)): Likewise.
	* include/debug/set.h (set<>::set(set&&)): Likewise.
	* include/debug/map.h (map<>::map(map&&)): Likewise.
	* include/debug/multiset.h (multiset<>::multiset(multiset&&)):Likewise.
	* include/debug/multimap.h (multimap<>::multimap(multimap&&)):Likewise.

2007-10-10  Benjamin Kosnik  <bkoz@redhat.com>

	PR libstdc++/33633
	* include/debug/hash_multimap.h: Change _GLIBCXX_EXT to _GLIBCXX_EXT_D.
	* include/debug/hash_set.h: Same.
	* include/debug/hash_multiset.h: Same.
	* include/debug/hash_map.h: Same.

2007-10-10  Benjamin Kosnik  <bkoz@redhat.com>

	* include/parallel/losertree.h (loser_tree_traits_unguarded): To
	loser_tree_unguarded_traits.
	* include/parallel/multiway_merge.h (__gnu_parallel): Same.

2007-10-10  Paolo Carlini  <pcarlini@suse.de>
	    Chris Fairles  <chris.fairles@gmail.com>

	* include/bits/stl_algobase.h (swap): Move...
	* include/bits/stl_move.h: ... here.
	* include/bits/stl_pair.h (pair<>::pair(_U1&&, _U2&&),
	pair<>::pair(pair<>&&), pair<>::operator=(pair<>&&),
	pair<>::swap(pair&&), swap(&, &), swap(&&, &), swap(&, &&),
	make_pair(_T1&&, _T2&&)): Add.
	* testsuite/20_util/pair/swap.cc: Add.

2007-10-09  Wolfgang Bangerth  <bangerth@dealii.org>

	PR libstdc++/33485 continued.
	* include/parallel/multiway_mergesort.h: Use __builtin_alloca.

2007-10-09  Zhou Drangon  <drangon.mail@gmail.com>

	PR libstdc++/33682
        * libsupc++/guard.cc: Make single conditional variable
        implementation dependent to __GTHREAD_HAS_COND.

2007-10-09  Benjamin Kosnik  <bkoz@redhat.com>

	PR libstdc++/33489 continued.
	* include/parallel/features.h (_GLIBCXX_LOSER_TREE): Set to zero.
	(_GLIBCXX_LOSER_TREE_POINTER): Set to one.
	(_GLIBCXX_LOSER_TREE_UNGUARDED): Set to zero.
	(_GLIBCXX_LOSER_TREE_POINTER_UNGUARDED): Set to one.
	* include/parallel/multiway_merge.h (parallel_multiway_merge):
	Change array of value_type to array of value_type pointers.
 	(multiway_merge_bubble): Same.
	(multiway_merge_loser_tree): Same.
	* include/parallel/merge.h (merge_advance_movc): Change to avoid
	default construction.
	* include/parallel/multiseq_selection.h (multiseq_partition):
	Replace value_type, bool pair with value_type*, null-initialized.
	* include/parallel/multiway_mergesort.h (parallel_sort_mwms):
	Don't use array form of operator new for value_types.
	(parallel_sort_mwms_pu): Same.
	* include/parallel/quicksort.h (parallel_sort_qs_divide): Don't
	use array form to construct pointer to value_type on stack,
	instead use __builtin_alloca.
	* include/parallel/random_shuffle.h (sequential_random_shuffle): Same,
	but use operator new.
	(parallel_random_shuffle_drs_pu): Same.
	* include/parallel/partial_sum.h ( parallel_partial_sum_linear): Same.

	* include/parallel/losertree.h: Format.
	* include/parallel/settings.h: Format.

	* include/parallel/multiway_merge.h: Move traits to....
	* include/parallel/losertree.h: ... here.

2007-10-09  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/type_traitsfwd.h (add_reference): Remove.
	* include/tr1/type_traits (add_reference): Add forward declaration.
	* include/tr1_impl/functional (class _Mu<>): Fix.

2007-10-09  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/boost_concept_check.h (*AssociativeContainerConcept):
	Remove, unused.

2007-10-08  Johannes Singler  <singler@ira.uka.de>

	* include/parallel/base.h: Added plus and multiplies functor
       for differently typed objects.
	* include/parallel/numeric: Use it.
	* include/parallel/for_each_selectors.h: Allowed different types.
	* include/parallel/partial_sum.h: Fixed return value.
	* testsuite/26_numerics/accumulate/1.cc: Tests for accumulate.
	* testsuite/26_numerics/inner_product/1.cc: Tests for inner_product.

2007-10-08  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_move.h (_GLIBCXX_MOVE): Add.
	* include/bits/stl_algobase.h: Adjust.
	* include/bits/stl_pair.h: Likewise.

	* include/bits/stl_algo.h: Minor formatting fixes.

2007-10-08  Benjamin Kosnik  <bkoz@redhat.com>

	PR libstdc++/33489
	* include/parallel/multiseq_selection.h: Remove default constructed
	value_type.
	* include/parallel/partition.h:
	* include/parallel/partial_sum.h: Format.

2007-10-08  Johannes Singler  <singler@ira.uka.de>

        * include/parallel/multiway_merge.h: Added reference to paper.
        * include/parallel/multiseq_selection.h: Added reference to paper.
        * include/parallel/workstealing.h: Added reference to paper.
        * include/parallel/balanced_quicksort.h: Added reference to paper.
        * include/parallel/tree.h: Added reference to paper.
        * docs/html/parallel_mode.html: Added reference to MCSTL.
        More documentation on compile-time settings and tuning.

2007-10-08  Paolo Carlini  <pcarlini@suse.de>

	* include/std/utility (identity, move, forward): Move to...
	* include/bits/stl_move.h: ... here.
	* include/Makefile.am: Add.
	* include/bits/stl_algobase.h: Include the latter.
	* include/Makefile.in: Regenerate.
	* testsuite/20_util/pair/moveable.cc: Remove dg-require-rvalref.

2007-10-08  Chris Jefferson  <chris@bubblescope.net>
	    Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_pair.h (pair<>:pair(pair&&),
	pair<>::operator=(pair&&)): Add.

2007-10-07  Chris Jefferson  <chris@bubblescope.net>
	    Paolo Carlini  <pcarlini@suse.de>

	* include/debug/list (list<>::list(list&&),
	list<>::operator=(list&&)): Add.
	(list<>::swap): Adjust.
	(swap(list&&, list& __y), swap(list&, list&& __y)): Add.
	* include/debug/vector (vector<>::vector(vector&&),
	vector<>::operator=(vector&&)): Add.
	(vector<>::swap): Adjust.
	(swap(vector&&, vector& __y), swap(vector&, vector&& __y)): Add.
	* include/debug/deque (deque<>::deque(deque&&),
	deque<>::operator=(deque&&)): Add.
	(deque<>::swap): Adjust.
	(swap(deque&&, deque& __y), swap(deque&, deque&& __y)): Add.
	* include/debug/set.h (set<>::set(set&&),
	set<>::operator=(set&&)): Add.
	(set<>::swap): Adjust.
	(swap(set&&, set& __y), swap(set&, set&& __y)): Add.
	* include/debug/map.h (map<>::map(map&&),
	map<>::operator=(map&&)): Add.
	(map<>::swap): Adjust.
	(swap(map&&, map& __y), swap(map&, map&& __y)): Add.
	* include/debug/multiset.h (multiset<>::multiset(multiset&&),
	multiset<>::operator=(multiset&&)): Add.
	(smultiet<>::swap): Adjust.
	(swap(multiset&&, multiset& __y),
	swap(multiset&, multiset&& __y)): Add.
	* include/debug/multimap.h (multimap<>::multimap(multimap&&),
	multimap<>::operator=(multimap&&)): Add.
	(multimap<>::swap): Adjust.
	(swap(multimap&&, multimap& __y),
	swap(multimap&, multimap&& __y)): Add.

2007-10-07  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algobase.h (_GLIBCXX_MOVE): Add.
	(swap, __iter_swap): Use it.
	* testsuite/25_algorithms/rotate/moveable.cc: Remove
	dg-require-rvalref.
	* testsuite/25_algorithms/remove/moveable.cc: Likewise.
	* testsuite/25_algorithms/partition/moveable.cc: Likewise.
	* testsuite/25_algorithms/swap_ranges/moveable.cc: Likewise.
	* testsuite/25_algorithms/reverse/moveable.cc: Likewise.
	* testsuite/25_algorithms/unique/moveable.cc: Likewise.
	* testsuite/25_algorithms/remove_if/moveable.cc: Likewise.

	* include/bits/stl_algobase.h (lexicographical_compare):
	Clean up.

2007-10-07  Chris Jefferson  <chris@bubblescope.net>
	    Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algo.h (remove, remove_if, unique,
	__rotate(_RandomAccessIterator, _RandomAccessIterator,
	_RandomAccessIterator, random_access_iterator_tag)): Use _GLIBCXX_MOVE.
	(__rotate(_ForwardIterator, _ForwardIterator, _ForwardIterator,
	forward_iterator_tag), __rotate(_BidirectionalIterator,
	_BidirectionalIterator, _BidirectionalIterator,
	bidirectional_iterator_tag), __partition(_ForwardIterator,
	_ForwardIterator, _Predicate, forward_iterator_tag)): Use iter_swap.

2007-10-06  Benjamin Kosnik  <bkoz@redhat.com>

	PR libstdc++/33678
	* libsupc++/typeinfo (typeinfo): Revert ordering of virtual components.

2007-10-06  Benjamin Kosnik  <bkoz@redhat.com>

	PR libstdc++/33487
	* include/parallel/algorithmfwd.h (for_each, generate, generate_n,
	transform, replace, replace_if, max_element, min_element, count,
	count_if): Consistently construct overloads.
	* include/parallel/numericfwd.h (accumulate, adjacent_difference,
	inner_product): Same.
	* include/parallel/algobase.h: Same.
	* include/parallel/algo.h: Same.
	* include/parallel/numeric: Same.

	* include/bits/algorithmfwd.h: Correct find_end placement.

	* docs/html/parallel_mode.html: Document some of the interface
	conventions.

	* include/parallel/search.h (calc_borders): Only use operator ==.

	* include/parallel/algorithmfwd.h: Move __gnu_sequential bits to...
	* include/parallel/tags.h: ...here, and use a using directive.

	* include/parallel/random_shuffle.h: Include stl_numeric. Qualify
	uses of partial_num with __gnu_sequential.

	* include/parallel/tree.h: Formatting.

2007-10-05  Benjamin Kosnik  <bkoz@redhat.com>

	Fixes for --disable-libstdcxx-pch.
	* include/ext/rc_string_base.h: Include stl_iterator_base_funcs.h.
	* include/ext/vstring_util.h: Include stl_iterator.h and
	numeric_traits.h.
	* include/tr1/functional: Include new.
	* testsuite/util/testsuite_api.h: Include exception.
	* testsuite/lib/libstdc++.exp (libstdc++_init): Set
	PCH_CXXFLAGS via cxxpchflags.

	* testsuite/25_algorithms/binary_search/requirements/
	explicit_instantiation/2.cc: Same.: Fix includes.
	* testsuite/25_algorithms/count_if/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/equal_range/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/find_end/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/find_first_of/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/find_if/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/for_each/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/includes/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/inplace_merge/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/lexicographical_compare/
	requirements/explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/lower_bound/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/make_heap/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/max_element/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/max/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/merge/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/min_element/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/min/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/next_permutation/
	requirements/explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/nth_element/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/partial_sort_copy/
	requirements/explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/partial_sort/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/partition/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/pop_heap/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/prev_permutation/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/push_heap/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/random_shuffle/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/remove_copy_if/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/remove_if/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/replace_copy_if/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/replace_if/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/search_n/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/search/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/set_difference/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/set_intersection/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/set_symmetric_difference/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/set_union/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/sort_heap/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/sort/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/stable_partition/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/stable_sort/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/transform/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/unique_copy/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/unique/requirements/
	explicit_instantiation/2.cc: Same.
	* testsuite/25_algorithms/upper_bound/requirements/
	explicit_instantiation/2.cc: Same.

	* testsuite/25_algorithms/remove/requirements/
	explicit_instantiation/pod.cc: Provide a hint to the compiler.

2007-10-05  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/23_containers/map/moveable.cc: Remove dg-require-rvalref.
	* testsuite/23_containers/multimap/moveable.cc: Likewise.
	* testsuite/23_containers/set/moveable.cc: Likewise.
	* testsuite/23_containers/multiset/moveable.cc: Likewise.
	* testsuite/23_containers/deque/moveable.cc: Likewise.
	* testsuite/23_containers/list/moveable.cc: Likewise.
	* testsuite/23_containers/vector/moveable.cc: Likewise.
	* include/std/utility: Use _GLIBCXX_BEGIN_NAMESPACE.

2007-10-05  Paolo Carlini  <pcarlini@suse.de>
	    Chris Jefferson  <chris@bubblescope.net>

	* include/bits/stl_iterator.h (class move_iterator,
	make_move_iterator): Add.

2007-10-04  Doug Kwan  <dougkwan@google.com>

	* include/ext/concurrent.h (class __mutex,
	class __recursive_mutex): Add new method gthread_mutex to access
	inner gthread mutex.
	[__GTHREAD_HAS_COND] (class __concurrence_broadcast_error,
	class __concurrence_wait_error, class __cond): Add.
	* libsupc++/guard.cc (recursive_push, recursive_pop): Delete.
	(init_in_progress_flag, set_init_in_progress_flag): Add to
	replace recursive_push and recursive_pop.
	(throw_recursive_init_exception): Add.
	(acquire, __cxa_guard_acquire, __cxa_guard_abort and
	__cxa_guard_release): [__GTHREAD_HAS_COND] Use a conditional
	for synchronization of static variable initialization.
	The global mutex is only held briefly when guards are
	accessed. [!__GTHREAD_HAS_COND] Fall back to the old code,
	which deadlocks.
	* testsuite/thread/guard.cc: Add new test. It deadlocks with the
	old locking code in libstdc++-v3/libsup++/guard.cc.

2007-10-04  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:
	Adjust dg-error line number.
	* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_2_neg.cc: Likewise.
	* testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:
	Adjust dg-error line number.
	* testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/deque/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/deque/requirements/dr438/
	constructor_2_neg.cc: Likewise.
	* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:
	Adjust dg-error line number.
	* testsuite/23_containers/list/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/list/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/list/requirements/dr438/
	constructor_2_neg.cc: Likewise.

2007-10-04  Chris Jefferson  <chris@bubblescope.net>
	    Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_list.h (list<>::list(list&&),
	list<>::operator=(list&&)): Add.
	(list<>::swap): Adjust.
	(swap(list&&, list& __y), swap(list&, list&& __y)): Add.
	* include/bits/stl_vector.h (vector<>::vector(vector&&),
	vector<>::operator=(vector&&)): Add.
	(vector<>::swap): Adjust.
	(swap(vector&&, vector& __y), swap(vector&, vector&& __y)): Add.
	* include/bits/stl_bvector.h (vector<>::vector(vector&&),
	vector<>::operator=(vector&&)): Add.
	(vector<>::swap): Adjust.
	* include/bits/stl_deque.h (deque<>::deque(deque&&),
	deque<>::operator=(deque&&)): Add.
	(deque<>::swap): Adjust.
	(swap(deque&&, deque& __y), swap(deque&, deque&& __y)): Add.
	* include/bits/stl_set.h (set<>::set(set&&),
	set<>::operator=(set&&)): Add.
	(set<>::swap): Adjust.
	(swap(set&&, set& __y), swap(set&, set&& __y)): Add.
	* include/bits/stl_map.h (map<>::map(map&&),
	map<>::operator=(map&&)): Add.
	(map<>::swap): Adjust.
	(swap(map&&, map& __y), swap(map&, map&& __y)): Add.
	* include/bits/stl_multiset.h (multiset<>::multiset(multiset&&),
	multiset<>::operator=(multiset&&)): Add.
	(smultiet<>::swap): Adjust.
	(swap(multiset&&, multiset& __y),
	swap(multiset&, multiset&& __y)): Add.
	* include/bits/stl_multimap.h (multimap<>::multimap(multimap&&),
	multimap<>::operator=(multimap&&)): Add.
	(multimap<>::swap): Adjust.
	(swap(multimap&&, multimap& __y),
	swap(multimap&, multimap&& __y)): Add.

2007-10-04  Paolo Carlini  <pcarlini@suse.de>

	Avoid copying some allocator objects.
	* include/bits/stl_list.h (_List_impl::_List_impl(),
	_List_base::_List_base(), list<>::list()): Add.
	* include/bits/stl_vector.h  (_Vector_impl::_Vector_impl(),
	_Vector_base::_Vector_base(), vector<>::vector()): Add.
	* include/bits/stl_bvector.h (_Bvector_impl::_Bvector_impl(),
	_Bvector_base::_Bvector_base(), vector<>::vector()): Add.
	* include/bits/stl_deque.h  (_Deque_impl::_Deque_impl(),
	_Deque_base::_Deque_base(), deque<>::deque()): Add.
	* include/bits/stl_tree.h (_Rb_tree_impl<>::_Rb_tree_impl(),
	_Rb_tree_impl<>::_M_initialize): Add.
	(_Rb_tree<>::_Rb_tree(const _Compare&, const allocator_type&),
	_Rb_tree(const _Rb_tree&)): Adjust.
	* include/bits/stl_set.h (set<>::set(),
	set(_InputIterator, _InputIterator)): Use _M_t default constructor.
	* include/bits/stl_map.h (map<>::map(), set(_InputIterator,
	_InputIterator)): Use _M_t default constructor.
	* include/bits/stl_multiset.h (multiset<>::multiset(),
	multiset(_InputIterator, _InputIterator)): Use _M_t default
	constructor.
	* include/bits/stl_multimap.h (multimap<>::multimap(),
	multimap(_InputIterator, _InputIterator)): Use _M_t default
	constructor.

2007-10-03  Chris Jefferson  <chris@bubblescope.net>
	    Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/20_util/pair/moveable.cc: New. Merge from
	libstdcxx_so_7-branch.
	* testsuite/23_containers/deque/capacity/moveable.cc: Same.
	* testsuite/23_containers/deque/cons/moveable.cc: Same.
	* testsuite/23_containers/deque/modifiers/moveable.cc: Same.
	* testsuite/23_containers/deque/moveable.cc: Same.
	* testsuite/23_containers/list/moveable.cc: Same.
	* testsuite/23_containers/map/moveable.cc: Same.
	* testsuite/23_containers/multimap/moveable.cc: Same.
	* testsuite/23_containers/multiset/moveable.cc: Same.
	* testsuite/23_containers/set/moveable.cc: Same.
	* testsuite/23_containers/vector/cons/moveable.cc: Same.
	* testsuite/23_containers/vector/modifiers/moveable.cc: Same.
	* testsuite/23_containers/vector/moveable.cc: Same.
	* testsuite/23_containers/vector/resize/moveable.cc: Same.
	* testsuite/25_algorithms/heap/moveable.cc: Same.
	* testsuite/25_algorithms/nth_element/moveable.cc: Same.
	* testsuite/25_algorithms/partial_sort/moveable.cc: Same.
	* testsuite/25_algorithms/partition/moveable.cc: Same.
	* testsuite/25_algorithms/remove_if/moveable.cc: Same.
	* testsuite/25_algorithms/remove/moveable.cc: Same.
	* testsuite/25_algorithms/reverse/moveable.cc: Same.
	* testsuite/25_algorithms/rotate/moveable.cc: Same.
	* testsuite/25_algorithms/sort/moveable.cc: Same.
	* testsuite/25_algorithms/swap_ranges/moveable.cc: Same.
	* testsuite/25_algorithms/unique/moveable.cc: Same.
	* testsuite/util/testsuite_rvalref.h: New.

	* testsuite/25_algorithms/equal/equal.cc: Move to...
	* testsuite/25_algorithms/equal/no_operator_ne.cc: ...this.
	* testsuite/25_algorithms/heap/heap.cc: Move to...
	* testsuite/25_algorithms/heap/1.cc: ...this.
	* testsuite/25_algorithms/lower_bound/lower_bound.cc: Move to...
	* testsuite/25_algorithms/lower_bound/no_operator_ne.cc: ...this.
	* testsuite/25_algorithms/partition/partition.cc: Move to...
	* testsuite/25_algorithms/partition/1.cc: ...this.
	* testsuite/25_algorithms/stable_partition/1.cc: ... and this.

	* testsuite/25_algorithms/search/1.cc: Update from merge.
	* testsuite/25_algorithms/search/check_type.cc: Same.

	* testsuite/lib/dg-options.exp (dg-require-rvalref): New.
	* testsuite/lib/libstdc++.exp (check_v3_target_rvalref): New.

2007-10-03  Richard Sandiford  <richard@codesourcery.com>

	* acinclude.m4 (GLIBCXX_ENABLE_C99): Temporarily add
	-fno-exceptions to CXXFLAGS.  Use GCC_TRY_COMPILE_OR_LINK.
	Make the tests assign results to volatile variables.  Use -lm
	for link tests in GCC_TRY_COMPILE_OR_LINK.  Fall back to
	compile-only tests if -lm is not available.
	* configure: Regenerate.

2007-10-03  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/33613
	* include/debug/functions.h (__check_partitioned): Rename to...
	(__check_partioned_lower): ... this.
	(__check_partioned_upper): Add.
	* include/debug/macros.h (__glibcxx_check_partitioned): Rename to...
	(__glibcxx_check_partitioned_lower): ... this, adjust.
	(__glibcxx_check_partitioned_upper): Add.
	* include/debug/debug.h (__glibcxx_requires_partitioned): Rename to...
	(__glibcxx_requires_partitioned_lower): ... this, adjust.
	(__glibcxx_requires_partitioned_upper): Add.
	* include/bits/stl_algo.h (lower_bound, upper_bound, equal_range,
	binary search): Use the above.
	* testsuite/25_algorithms/lower_bound/33613.cc: New.
	* testsuite/25_algorithms/upper_bound/33613.cc: Likewise.

2007-10-03  Kazu Hirata  <kazu@codesourcery.com>

	Revert:
	2007-10-02  Richard Sandiford  <richard@codesourcery.com>
	* acinclude.m4 (GLIBCXX_ENABLE_C99): Temporarily add
	-fno-exceptions to CXXFLAGS.  Use GCC_TRY_COMPILE_OR_LINK.
	Make the tests assign results to volatile variables.
	* configure: Regenerate.

2007-10-02  Richard Sandiford  <richard@codesourcery.com>

	* acinclude.m4 (GLIBCXX_ENABLE_C99): Temporarily add
	-fno-exceptions to CXXFLAGS.  Use GCC_TRY_COMPILE_OR_LINK.
	Make the tests assign results to volatile variables.
	* configure: Regenerate.

2007-10-02  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/25_algorithms/binary_search/2.cc: Split into...
	* testsuite/25_algorithms/upper_bound/2.cc: ... this.
	* testsuite/25_algorithms/lower_bound/2.cc: ... this.
	* testsuite/25_algorithms/equal_range/2.cc: ... and this.

2007-10-02  Chris Jefferson  <chris@bubblescope.net>

	* testsuite/25_algorithms/search/1.cc: Merge from
	libstdcxx_so_7-branch.
	* testsuite/25_algorithms/search/check_type.cc: Same.
	* testsuite/25_algorithms/sort/vectorbool.cc: Same.

2007-09-30  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* src/valarray-inst.cc, include/ext/atomicity.h,
	include/ext/concurrence.h, include/bits/basic_string.h,
	include/bits/fstream.tcc, include/ext/vstring.h: Fix comment typos.

2007-09-29  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* docs/html/test.html, docs/html/ext/mt_allocator.html,
	docs/html/ext/tr1.html, docs/html/17_intro/contribute.html,
	docs/html/documentation.html, docs/html/20_util/allocator.html:
	Update docs to refer to Subversion not CVS. Fix markup.

2007-09-29  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* docs/html/Makefile: Follow up to libstdc++/14991, remove target.

2007-09-28  Benjamin Kosnik  <bkoz@redhat.com>

	* include/parallel/algorithmfwd.h: Spacing.
	* include/parallel/tags.h: Correct comment.

	* testsuite/Makefile.am (AM_MAKEFLAGS, AM_RUNTESTFLAGS): Remove.
	* testsuite/Makefile.in: Regenerate.

2007-09-27  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/util/testsuite_hooks.cc (set_memory_limits): Adjust
	x86_64 virtual memory setting for libgomp.

2007-09-26  Benjamin Kosnik  <bkoz@redhat.com>

	* include/bits/stl_algo.h: Add return type information to comments.
	* include/bits/algorithmfwd.h: Formatting.
	* testsuite/util/testsuite_hooks.h (NonDefaultConstructible): Move..
	* testsuite/util/testsuite_api.h: ...here. Add necessary operators
	for use in testing chapters 25 and 26.
	* testsuite/util/testsuite_character.h: Same.

	* testsuite/25_algorithms/*/requirements/explicit_instantiation/
	2.cc, pod.cc: New.

	* testsuite/26_numerics/accumulate, adjacent_difference, inner_product,
	partial_sum/requirements/explicit_instantiation/2.cc, pod.cc: New.

	* testsuite/26_numerics/numeric_arrays/*: Move contents into
	testsuite/26_numerics.

	* testsuite/26_numerics/numeric_operations: Same.

	* testsuite/23_containers/*/requirements/explicit_instantiation/2.cc:
	Adjust includes from testsuite_eh.h to testsuite_api.h.

2007-09-25  Richard Sandiford  <rsandifo@nildram.co.uk>

	* testsuite/lib/libstdc++.exp (check_v3_target_fileio): Test lseek.

2007-09-18  Benjamin Kosnik  <bkoz@redhat.com>
	    Chalathip Thumkanon  <chalathip@gmail.com>

	PR libstdc++/32819
	PR libstdc++/32822
	* docs/html/ext/pb_ds/hash_based_containers.html: Correct.

2007-09-17  Benjamin Kosnik  <bkoz@redhat.com>

	* configure.host: Set atomic_flags on i486.

	* include/Makefile.am: Remove parallel-mode pch.
	* include/Makefile.in: Regenerate.

	* testsuite/lib/libstdc++.exp: Set ld_library_flags for libgomp if
	present.

	* acinclude.m4 (GLIBCXX_ENABLE_PARALLEL): Comment.
	* configure: Regenerate.

2007-09-17  Johannes Singler  <singler@ira.uka.de>

        * include/parallel/for_each.h: Fixed comment/doxygen markup typos.
        * include/parallel/base.h: Same.
        * include/parallel/numeric: Same.
        * include/parallel/quicksort.h: Same.
        * include/parallel/compiletime_settings.h: Same.
        * include/parallel/random_shuffle.h: Same.
        * include/parallel/balanced_quicksort.h: Same.
        * include/parallel/tree.h: Same.
        * include/parallel/settings.h: Same.
        * include/parallel/search.h: Same.
        * include/parallel/partition.h: Same.
        * include/parallel/partial_sum.h: Same.

2007-09-17  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/type_traitsfwd.h (aligned_storage): Remove
	declaration.
	* include/tr1_impl/type_traits (aligned_storage): Remove.
	* include/std/type_traits (aligned_storage, __aligned_storage_msa):
	Add.
	* include/tr1/type_traits (aligned_storage): Add.
	* testsuite/20_util/aligned_storage/value.cc: New.
	* testsuite/20_util/aligned_storage/requirements/
	explicit_instantiation.cc: Likewise.
	* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Adjust
	dg-error lines.
	* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:
	Likewise.

2007-09-16  Paolo Carlini  <pcarlini@suse.de>
	    Douglas Gregor  <doug.gregor@gmail.com>

	* include/tr1_impl/type_traits (aligned_storage): Implement
	in the neat and general way.

2007-09-14  Benjamin Kosnik  <bkoz@redhat.com>

	* include/parallel/base.h (__gnu_parallel::less<Tp>): Add partial
        specialization for one argument.
	(__gnu_parallel::less): Add operator.

	* include/parallel/multiway_merge.h: Use __builtin_alloca.
	* include/parallel/partial_sum.h: Same.
	* include/parallel/find.h: Same.

2007-09-14  Jonathan Wakely  <jwakely.gcc@gmail.com>

	* include/tr1_impl/boost_shared_ptr.h: (__weak_ptr::lock()): Add
	missing template argument.
	* testsuite/tr1/2_general_utilities/shared_ptr/requirements/
	explicit_instantiation/2.cc: New.
	* testsuite/tr1/2_general_utilities/weak_ptr/requirements/
	explicit_instantiation/2.cc: New.

2007-09-14  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/17_intro/headers/all_pedantic_errors.cc: New.
	* include/tr1_impl/cinttypes: Add pragma GCC system_header.
	* include/tr1_impl/cfenv: Same.
	* include/tr1_impl/cstdint: Same.
	* include/tr1/cstdbool: Same.
	* include/ext/pb_ds/detail/resize_policy/
	hash_prime_size_policy_imp.hpp: Same.
	* include/parallel/partial_sum.h: Avoid VLA error with
	__builtin_alloca.

2007-09-14  Thiemo Seufer  <ths@mips.com>

	* crossconfig.m4 (mips*-sde-elf*): New stanza.
	* configure: Regenerate.

2007-09-12  Benjamin Kosnik  <bkoz@redhat.com>

	* include/ext/pb_ds/*: Change namespace pb_ds to __gnu_pbds.
	* docs/html/ext/pb_ds/*: Same.
	* testsuite/ext/pb_ds/*: Same.
	* testsuite/performance/ext/pb_ds/*: Same.
	* testsuite/util/*: Same.

2007-09-12  Benjamin Kosnik  <bkoz@redhat.com>

	* include/parallel/find.h: Doxygen fixups.
	* include/bits/hashtable.h: Same.

2007-09-11  Johannes Singler  <singler@ira.uka.de>
	    Leonor Frias Moya  <lfrias@lsi.upc.edu>
            Felix Putze  <kontakt@felix-putze.de>
            Marius Elvert  <marius.elvert@ira.uka.de>
	    Felix Bondarenko  <f.bondarenko@web.de>
	    Robert Geisberger  <robert.geisberger@stud.uni-karlsruhe.de>
	    Robin Dapp  <r.dapp@freenet.de>
  	    Benjamin Kosnik  <bkoz@redhat.com>

	Add parallel mode.
	* include/parallel: New.
	* include/parallel/iterator.h: New.
	* include/parallel/multiway_merge.h: New.
	* include/parallel/parallel.h: New.
	* include/parallel/algorithm
	* include/parallel/find_selectors.h: New.
	* include/parallel/losertree.h: New.
	* include/parallel/list_partition.h: New.
	* include/parallel/types.h: New.
	* include/parallel/for_each.h: New.
	* include/parallel/multiseq_selection.h: New.
	* include/parallel/workstealing.h: New.
	* include/parallel/base.h: New.
	* include/parallel/par_loop.h: New.
	* include/parallel/numeric
	* include/parallel/features.h: New.
	* include/parallel/quicksort.h: New.
	* include/parallel/algorithmfwd.h: New.
	* include/parallel/equally_split.h: New.
	* include/parallel/compiletime_settings.h: New.
	* include/parallel/for_each_selectors.h: New.
	* include/parallel/basic_iterator.h: New.
	* include/parallel/omp_loop_static.h: New.
	* include/parallel/random_shuffle.h: New.
	* include/parallel/balanced_quicksort.h: New.
	* include/parallel/set_operations.h: New.
	* include/parallel/tags.h: New.
	* include/parallel/merge.h: New.
	* include/parallel/tree.h: New.
	* include/parallel/settings.h: New.
	* include/parallel/unique_copy.h: New.
	* include/parallel/multiway_mergesort.h: New.
	* include/parallel/numericfwd.h: New.
	* include/parallel/search.h: New.
	* include/parallel/partition.h: New.
	* include/parallel/compatibility.h: New.
	* include/parallel/algobase.h: New.
	* include/parallel/find.h: New.
	* include/parallel/partial_sum.h: New.
	* include/parallel/algo.h: New.
	* include/parallel/omp_loop.h: New.
	* include/parallel/queue.h: New.
	* include/parallel/timing.h: New.
	* include/parallel/sort.h: New.
	* include/parallel/checkers.h: New.
	* include/parallel/random_number.h: New.
	* include/bits/algorithmfwd.h: New.

	* acinclude.m4 (GLIBCXX_ENABLE_PARALLEL): New.
	* configure.host: Add atomic_flags.
	* configure.ac: Export ATOMIC_FLAGS, call GLIBCXX_ENABLE_PARALLEL.
	* src/Makefile.am: Add parallel_list rules.
	* include/Makefile.am: Add parallel files.
	* testsuite/Makefile.am (check-parallel): Add.
	(check-performance-parallel): Add.
	* config.h.in: Regenerate.
	* configure: Same.
	* libsupc++/Makefile.in: Same.
	* testsuite/Makefile.in: Same.
	* Makefile.in: Same.
	* libmath/Makefile.in: Same.
	* include/Makefile.in: Same.
	* src/Makefile.in: Same.
	* po/Makefile.in: Same.

	* config/abi/pre/gnu.ver: Export parallel list bits.

	* docs/html/parallel_mode.html: New.
	* docs/html/documentation.html: Add link.
	* docs/doxygen/user.cfg.in: Adjust for new files and directory.
	* docs/doxygen/doxygroups.cc: Adjust namespace markup.

	* include/debug/set.h: Adjust for _GLIBCXX_STD_D or _P change.
	* include/debug/bitset: Same.
	* include/debug/multiset.h: Same.
	* include/debug/vector: Same.
	* include/debug/map.h: Same.
	* include/debug/deque: Same.
	* include/debug/list: Same.
	* include/debug/debug.h: Same.
	* include/debug/multimap.h: Same.
	* include/std/algorithm: Same.
	* include/std/numeric: Same.
	* include/std/bitset: Same.
	* include/std/string: Same.
	* include/ext/hash_map: Same.
	* include/ext/hash_set: Same.
	* include/bits/stl_list.h: Same.
	* include/bits/stl_map.h: Same.
	* include/bits/stl_algobase.h: Same.
	* include/bits/stl_set.h: Same.
	* include/bits/stl_multimap.h: Same.
	* include/bits/stl_vector.h: Same.
	* include/bits/stl_numeric.h: Same.
	* include/bits/stl_deque.h: Same.
	* include/bits/stl_multiset.h: Same.
	* include/bits/char_traits.h: Same.
	* include/bits/stl_algo.h: Same.
	* include/bits/c++config: Same.
	* include/bits/vector.tcc: Same.
	* include/bits/deque.tcc: Same.
	* include/bits/stl_bvector.h: Same.
	* include/bits/list.tcc: Same.
	* src/list.cc: Same.
	* src/parallel_list.cc: New.

	* testsuite/lib/libstdc++.exp (check_v3_target_parallel_mode): New.
	* testsuite/lib/dg-options.exp (dg-require-parallel-mode): New.
	* scripts/testsuite_flags.in (--cxxparallelflags): New.
	* scripts/check_performance: Adjust.
	* testsuite/25_algorithms/headers/parallel_algorithm.cc: New.
	* testsuite/25_algorithms/headers/algorithm_parallel_mode.cc: New.
	* testsuite/25_algorithms/headers/parallel_algorithm_mixed1.cc: New.
	* testsuite/25_algorithms/headers/parallel_algorithm_mixed2.cc: New.
	* testsuite/26_numerics/headers/numeric/parallel_numeric.cc: New.
	* testsuite/26_numerics/headers/numeric/numeric_parallel_mode.cc: New.
	* testsuite/26_numerics/headers/numeric/
	parallel_numeric_mixed1.cc: New.
	* testsuite/26_numerics/headers/numeric/
	parallel_numeric_mixed2.cc: New.

2007-09-11  Daniel Jacobowitz  <dan@codesourcery.com>

	* testsuite/lib/libstdc++.exp (libstdc++_init): Revert part of
	2007-09-06 change.

2007-09-09  Roger Sayle  <roger@eyesopen.com>

	* acinclude.m4 (GLIBCXX_CHECK_SYSTEM_ERROR): Add ECANCELED for cygwin.
	* configure: Regenerate.
	* config/os/generic/error_constants.h: Guard.
	* testsuite/19_diagnostics/headers/system_error/
	types_std_c++0x.cc: Same.

2007-09-09  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/25_algorithms/binary_search.cc: Move...
	* testsuite/25_algorithms/binary_search/2.cc: ...here.

	* testsuite/25_algorithms/sort.cc: Move...
	* testsuite/25_algorithms/sort/1.cc: ...here.
	* testsuite/25_algorithms/partial_sort_copy/2.cc: ...here.
	* testsuite/25_algorithms/nth_element/3.cc: ...here.
	* testsuite/25_algorithms/partial_sort/2.cc: ...here.
	* testsuite/25_algorithms/stable_sort/2.cc: ...here.

	* testsuite/25_algorithms/min_max.cc: Move...
	* testsuite/25_algorithms/min/1.cc: ...here.
	* testsuite/25_algorithms/min/2.cc: ...here.
	* testsuite/25_algorithms/max/1.cc: ...here.
	* testsuite/25_algorithms/max/2.cc: ...here.

2007-09-09  Joseph Myers  <joseph@codesourcery.com>

	* testsuite/lib/libstdc++.exp (v3-build-support): Specify output
	file for preprocessing.  Use remote_exec to call ar and ranlib.

2007-09-08  Benjamin Kosnik  <bkoz@redhat.com>

	* include/bits/functional_hash.h: Add ext/numeric_traits.h.
	* include/tr1/functional_hash.h Same.
	* include/tr1/functional: Remove string, ext/type_traits.h includes.
	* include/tr1_impl/functional_hash.h: Move string, wstring
	definitions for std::<hash>::operator into separate file.
	* include/std/functional
	* src/hash.cc: New, move definitions here.
	* src/hash_c++0x.cc: Same.
	* src/Makefile.am: Add new source files.
	* configure: Regenerate.
	* Makefile.in: Same.
	* src/Makefile.in: Same.
	* po/Makefile.in: Same.
	* libmath/Makefile.in: Same.
	* libsupc++/Makefile.in: Same.
	* testsuite/Makefile.in: Same.
	* config/abi/pre/gnu.ver: Add symbols.
	* config/abi/pre/gnu-versioned-namespace.ver: Same, fix.

2007-09-07  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/19_diagnostics/error_category/cons/copy_neg.cc:
	Correct line number.

2007-09-07  Danny Smith  <dannysmith@users.sourceforge.net>

	PR libstdc++/33203
	* configure.host (error_constants_dir):  New variable,
	defaulting to os/generic.
	( mingw32*): Overide default.
	* configure.ac (ERROR_CONSTANTS_SRCDIR): New.
	* configure: Regenerate.
	* include/Makefile.am (host_headers): Add
	$(ERROR_CONSTANTS_SRCDIR)/error_constants.h .
	* include/Makefile.in: Regenerate.
	* include/std/system_error (enum posix_errno): Remove.
	Include <bits/error_constants.h> instead.
	* config/os/mingw32/error_constants.h: New.
	* config/os/generic/error_constants.h: New.

2007-09-06  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/lib/libstdc++.exp: Check CXXFLAGS.
	* scripts/testsuite_flags.in: CXXFLAGS_default, matching dejagnu.

	* include/std/ostream: Spacing tweak.
	* include/ext/hashtable.h: Use <algorithm>.
	* include/ext/slist: Same.
	* include/ext/rope: Same.
	* include/bits/stl_function.h: Format.
	* include/tr1_impl/array: Remove section number in doxygen markup.
	* src/list.cc: Comment tweak.

	* docs/doxygen/user.cfg.in: Update for include/tr1_impl.

	* testsuite/25_algorithms/search_n/iterator.cc: Add using declaration.
	* testsuite/25_algorithms/nth_element/1.cc:  Same.
	* testsuite/21_strings/char_traits/requirements/short/1.cc: Use
	char_type typedef to the underlying character type.
	* testsuite/21_strings/char_traits/requirements/wchar_t/typedefs.cc:
	Remove -ansi -pedantic-errors.
	* testsuite/21_strings/char_traits/requirements/char/typedefs.cc: Same.
	* testsuite/tr1/6_containers/headers/functional/synopsis.cc:
	Remove specializations.

2007-09-06  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_vector.h (_Vector_base<>::_M_allocate):
	Do not call _M_impl.allocate when __n == 0.
	* testsuite/23_containers/vector/zero_sized_allocations.cc: New.

2007-09-06  Benjamin Kosnik  <bkoz@redhat.com>

	PR libstdc++/29367
	* include/ext/pb_ds/detail/map_debug_base.hpp: From this..
	* include/ext/pb_ds/detail/debug_map_base.hpp: ...to this.
	Rename map_debug_base to debug_map_base, add std::pair output
	extractors, change duplicate map_debug_base typedef in containers
	to debug_base. Use m_store_extra_indicator for m_store_hash_indicator.
	* include/ext/pb_ds/*: Likewise.
	* include/Makefile.am: Same.
	* include/Makefile.in: Regenerate.

2007-09-06  Matthias Klose  <doko@debian.org>

	* testsuite/27_io/headers/cstdlib: Remove empty directory.

2007-09-05  Roger Sayle  <roger@eyesopen.com>

	* acinclude.m4 (GLIBCXX_CHECK_SYSTEM_ERROR): Add EBADMSG for darwin.
	* configure: Regenerate.
	* include/std/system_error: Guard.
	* testsuite/19_diagnostics/headers/system_error/
	types_std_c++0x.cc: Same.
	* testsuite/19_diagnostics/error_category/cons/copy_neg.cc: Adjust
	line numbers.

2007-09-03  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/33293
	* include/bits/stl_numeric.h (accumulate, inner_product):
	Add inline function-specifier.

2007-08-31  Douglas Gregor  <doug.gregor@gmail.com>

	* testsuite/abi/demangle/cxx0x/rref.cc: New.

2007-08-29  Benjamin Kosnik  <bkoz@redhat.com>

	* acinclude.m4 (GLIBCXX_CHECK_SYSTEM_ERROR): Add ENODATA, ENOSR,
	ENOSTR, ETIME for freebsd.
	* configure: Regenerate.
	* include/std/system_error: Guard.
	* testsuite/19_diagnostics/headers/system_error/
	types_std_c++0x.cc: Same.
	* testsuite/19_diagnostics/error_category/cons/copy_neg.cc: Adjust
	line numbers.

2007-08-28  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/33128
	* include/tr1_impl/random (uniform_int<>::_M_call): Deal with
	__urng() returning negative values.
	* testsuite/tr1/5_numerical_facilities/random/uniform_int/33128.cc:
	New.

2007-08-24  Benjamin Kosnik  <bkoz@redhat.com>

	* acinclude.m4: Fix duplicate variable names.
	* configure: Regenerate.

2007-08-24  Benjamin Kosnik  <bkoz@redhat.com>

	* acinclude.m4 (GLIBCXX_CHECK_SYSTEM_ERROR): Add ENOLINK, EPROTO
	for netbsd.
	* configure: Regenerate.
	* include/std/system_error: Guard.
	* testsuite/19_diagnostics/headers/system_error/
	types_std_c++0x.cc: Same.
	* testsuite/19_diagnostics/error_category/cons/copy_neg.cc: Adjust
	line numbers.

2007-08-23  Benjamin Kosnik  <bkoz@redhat.com>

	* include/std/system_error: New file.
	* src/system_error.cc: New file.
	* src/Makefile.am (sources): Add.
	* src/Makefile.in: Regenerate.
	* include/Makefile.am (std_headers): Add system_error.
	* include/Makefile.in: Regenerate.
	* acinclude.m4 (GLIBCXX_CHECK_SYSTEM_ERROR): New.
	* configure.ac: Call it.
	* config.h.in: Regenerate.
	* include/bits/functional_hash.h: Add hash<error_code>.
 	* include/std/ostream: Add inserters for error_code.

	* docs/doxygen/user.cfg.in: Add system_error.

	* config/abi/pre/gnu.ver(GLIBCXX_3.4.10): Add new symbols.

	* testsuite/19_diagnostics/error_code: New.
	* testsuite/19_diagnostics/error_code/cons: Same.
	* testsuite/19_diagnostics/error_code/cons/1.cc: Same.
	* testsuite/19_diagnostics/error_code/operators: Same.
	* testsuite/19_diagnostics/error_code/operators/bool.cc: Same.
	* testsuite/19_diagnostics/error_code/operators/bool_neg.cc: Same.
	* testsuite/19_diagnostics/error_code/operators/equal.cc: Same.
	* testsuite/19_diagnostics/error_code/operators/not_equal.cc: Same.
	* testsuite/19_diagnostics/error_category: Same.
	* testsuite/19_diagnostics/error_category/cons: Same.
	* testsuite/19_diagnostics/error_category/cons/copy_neg.cc: Same.
	* testsuite/19_diagnostics/error_category/cons/default.cc: Same.
	* testsuite/19_diagnostics/error_category/operators: Same.
	* testsuite/19_diagnostics/error_category/operators/equal.cc: Same.
	* testsuite/19_diagnostics/error_category/operators/not_equal.cc: Same.
	* testsuite/19_diagnostics/headers/system_error: Same.
	* testsuite/19_diagnostics/headers/system_error/
	types_std_c++0x.cc: Same.
	* testsuite/19_diagnostics/headers/system_error/std_c++0x_neg.cc: Same.
	* testsuite/19_diagnostics/system_error: Same.
	* testsuite/19_diagnostics/system_error/
	cons_virtual_derivation.cc: Same.
	* testsuite/19_diagnostics/system_error/cons-1.cc: Same.
	* testsuite/19_diagnostics/system_error/what-1.cc: Same.
	* testsuite/19_diagnostics/system_error/what-2.cc: Same.
	* testsuite/19_diagnostics/system_error/what-big.cc: Same.
	* testsuite/19_diagnostics/system_error/what-3.cc: Same.
	* testsuite/19_diagnostics/system_error/what-4.cc: Same.
	* testsuite/27_io/basic_ostream/inserters_other/wchar_t/
	error_code.cc: Same.
	* testsuite/27_io/basic_ostream/inserters_other/char/
	error_code.cc: Same.
	* testsuite/tr1/6_containers/hash/operators: New.
	* testsuite/tr1/6_containers/hash/operators/size_t.cc: Same.

	* testsuite/23_containers/hash: Move...
	* testsuite/20_util/hash: ... here.
	* testsuite/20_util/hash/operators: New.
	* testsuite/20_util/hash/operators/size_t.cc: New.

	* testsuite/20_util/function_objects/bad_function_call: Move...
	* testsuite/20_util/bad_function_call: ...here.

2007-08-21  Benjamin Kosnik  <bkoz@montsouris.artheist.org>

	* include/Makefile.am (install-data-local): Remove pch-install rules.
	(host_headers): Add stdc++.h, stdtr1c++.h, extc++.h.
	* include/Makefile.in: Regenerate.
	* config.h.in: Same.

	* scripts/check_compile: Remove space between outputs.
	* include/ext/throw_allocator.h: Correct doxygen markup.
	* include/bits/char_traits.h: Correct spacing.
	* include/bits/stl_function.h: Same, for 80 column.
	* include/std/valarray: Same.
	* testsuite/util/testsuite_iterators.h: Same.
	* testsuite/25_algorithms/headers/algorithm/synopsis.cc: Format.

2007-08-17  Daniel Jacobowitz  <dan@codesourcery.com>

	PR testsuite/31884
	* testsuite/ext/pb_ds/example/priority_queue_dijkstra.cc (main): Do
	not access deleted nodes.

	* testsuite/25_algorithms/copy/streambuf_iterators/char/4.cc,
	testsuite/25_algorithms/find/istreambuf_iterators/char/2.cc,
	testsuite/27_io/basic_filebuf/open/char/4.cc,
	testsuite/27_io/objects/char/9.cc: Use dg-require-fileio.
	* testsuite/ext/forced_exception_error/cons_virtual_derivation.cc,
	testsuite/ext/pb_ds/regression/hash_data_map_rand.cc,
	testsuite/ext/pb_ds/regression/trie_data_map_rand.cc,
	testsuite/ext/pb_ds/regression/list_update_no_data_map_rand.cc,
	testsuite/ext/pb_ds/regression/tree_no_data_map_rand.cc,
	testsuite/ext/pb_ds/regression/list_update_data_map_rand.cc,
	testsuite/ext/pb_ds/regression/hash_no_data_map_rand.cc,
	testsuite/ext/pb_ds/regression/priority_queue_rand.cc,
	testsuite/ext/pb_ds/regression/tree_data_map_rand.cc,
	testsuite/ext/pb_ds/regression/trie_no_data_map_rand.cc,
	testsuite/ext/throw_allocator/deallocate_global.cc,
	testsuite/ext/throw_allocator/check_delete.cc,
	testsuite/ext/throw_allocator/check_allocate_max_size.cc,
	testsuite/ext/throw_allocator/check_deallocate_null.cc,
	testsuite/ext/throw_allocator/check_new.cc,
	testsuite/ext/throw_allocator/deallocate_local.cc,
	testsuite/tr1/5_numerical_facilities/random/subtract_with_carry_01/
	cons/gen1.cc,
	testsuite/tr1/5_numerical_facilities/random/subtract_with_carry/cons/
	gen1.cc,
	testsuite/tr1/5_numerical_facilities/random/linear_congruential/cons/
	gen1.cc,
	testsuite/tr1/5_numerical_facilities/random/mersenne_twister/cons/
	gen1.cc,
	testsuite/23_containers/list/modifiers/insert/25288.cc: Use
	dg-require-time.

2007-08-17  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Adjust
	dg-error lines.
	* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc: Ditto.

2007-08-17  Chris Fairles  <chris.fairles@gmail.com>

	PR libstdc++/33098
	* include/std/type_traits (__is_convertible_helper):
	Use add_lvalue_reference.

2007-08-17  Johannes Willkomm  <willkomm@sc.rwth-aachen.de>

	PR libstdc++/33084
	* include/std/valarray (operator _Op(const _Tp&,
	const valarray<>&)): Fix typo.
	* testsuite/26_numerics/numeric_arrays/valarray/33084.cc: New.

2007-08-07  Jim Blandy  <jimb@codesourcery.com>

	* src/Makefile.am (libstdc++-symbol.ver): Make
	sure the build tree copy of libstdc++-symbol.ver is writeable.
	* src/Makefile.in: Regenerated.

2007-08-02  Paolo Carlini  <pcarlini@suse.de>

	DR 660, [Ready] in Toronto.
	* include/bits/stl_function.h (bit_and, bit_or, bit_xor): Add.
	* testsuite/20_util/function_objects/dr660.cc: New.
	* docs/html/ext/howto.html: Add an entry for DR 660, update.

	* docs/html/ext/lwg-closed.html, docs/html/ext/lwg-active.html,
	docs/html/ext/lwg-defects.html: Import Revision 49.

2007-07-30  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/32908
	* include/bits/stl_algobase.h (struct __lc_rai): New.
	(lexicographical_compare(_II1, _II1, _II2, _II2),
	lexicographical_compare(_II1, _II1, _II2, _II2, _Compare)): Use it.
	* testsuite/performance/25_algorithms/lexicographical_compare.cc: New.

2007-07-27  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/32907
	* include/bits/basic_string.h (operator==(const basic_string<_CharT>&,
	const basic_string<_CharT>&)): Add.
	(operator!=): Forward to operator==.
	* include/ext/vstring.h(operator==(const __versa_string<_CharT,
	std::char_traits<_CharT>, std::allocator<_CharT>, _Base>&,
	const __versa_string<_CharT, std::char_traits<_CharT>,
	std::allocator<_CharT>, _Base>&)): Add.
	(operator!=): Forward to operator==.

	* include/ext/sso_string_base.h (_M_compare): Remove.

2007-07-25  Stephen M. Webb  <stephenw@xandros.com>

	Fixed abi_check for missing symbol size changes.
	* testsuite/util/testsuite_abi.cc: Changed local variable name to
	prevent member variable hiding.

2007-07-25  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	PR libstdc++/31836
	* config/locale/generic/c_locale.cc (__convert_to_v): Don't use
	strtold if _GLIBCXX_HAVE_BROKEN_STRTOLD is defined.
	* config/os/hpux/os_defines.h (_GLIBCXX_HAVE_BROKEN_STRTOLD): Define
	if __hppa__ is defined.

2007-07-16  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>

	PR bootstrap/3456
	* testsuite/22_locale/locale/cons/12658_thread-1.cc: Enable on
	mips-sgi-irix6*.
	* testsuite/22_locale/locale/cons/12658_thread-2.cc: Likewise.
	* testsuite/thread/18185.cc: Likewise.
	* testsuite/thread/pthread1.cc: Likewise.
	* testsuite/thread/pthread2.cc: Likewise.
	* testsuite/thread/pthread3.cc: Likewise.
	* testsuite/thread/pthread4.cc: Likewise.
	* testsuite/thread/pthread5.cc: Likewise.
	* testsuite/thread/pthread6.cc: Likewise.
	* testsuite/thread/pthread7-rope.cc: Likewise.
	* testsuite/tr1/2_general_utilities/shared_ptr/thread/
	default_weaktoshared.cc: Likewise.
	* testsuite/tr1/2_general_utilities/shared_ptr/thread/
	mutex_weaktoshared.cc: Likewise.

2007-07-16  Danny Smith  <dannysmith@users.sourceforge.net>

	* config/os/mingw32/ctype_base.h: Use the generic libstdc++ masks
	rather than MSVCRT defines.
	* config/os/mingw32/ctype_noninline.h (classic_table): Construct
	and return a static classic table based on generic libstdc++ masks.

2007-07-12  Douglas Gregor  <doug.gregor@gmail.com>

	* testsuite/tr1/3_function_objects/bind/all_bound.cc: Disambiguate
	uses of TR1/C++0x facilities.
	* testsuite/tr1/3_function_objects/bind/nested.cc: Ditto.
	* testsuite/tr1/3_function_objects/bind/placeholders.cc: Ditto.
	* testsuite/tr1/6_containers/unordered_multimap/requirements/
	explicit_instantiation.cc: Ditto.
	* testsuite/tr1/6_containers/unordered_multimap/swap/1.cc: Ditto.
	* testsuite/tr1/6_containers/unordered_multimap/swap/2.cc: Ditto.
	* testsuite/tr1/6_containers/unordered_set/requirements/
	explicit_instantiation.cc: Ditto.
	* testsuite/tr1/6_containers/unordered_set/swap/1.cc: Ditto.
	* testsuite/tr1/6_containers/unordered_set/swap/2.cc: Ditto.
	* testsuite/tr1/6_containers/utility/pair.cc: Ditto.
	* testsuite/tr1/6_containers/unordered_map/requirements/
	explicit_instantiation.cc: Ditto.
	* testsuite/tr1/6_containers/unordered_map/24064.cc: Ditto.
	* testsuite/tr1/6_containers/unordered_map/swap/1.cc: Ditto.
	* testsuite/tr1/6_containers/unordered_map/swap/2.cc: Ditto.
	* testsuite/tr1/6_containers/tuple/cons/big_tuples.cc: Ditto.
	* testsuite/tr1/6_containers/tuple/cons/constructor.cc: Ditto.
	* testsuite/tr1/6_containers/tuple/cons/assignment.cc: Ditto.
	* testsuite/tr1/6_containers/tuple/tuple_element.cc: Ditto.
	* testsuite/tr1/6_containers/tuple/tuple_size.cc: Ditto.
	* testsuite/tr1/6_containers/tuple/comparison_operators/
	comparisons.cc: Ditto.
	* testsuite/tr1/6_containers/tuple/element_access/get.cc: Ditto.
	* testsuite/tr1/6_containers/tuple/creation_functions/23978.cc: Ditto.
	* testsuite/tr1/6_containers/tuple/creation_functions/tie.cc: Ditto.
	* testsuite/tr1/6_containers/tuple/creation_functions/make_tuple.cc:
	Ditto.
	* testsuite/tr1/6_containers/unordered_multiset/requirements/
	explicit_instantiation.cc: Ditto.
	* testsuite/tr1/6_containers/unordered_multiset/swap/1.cc: Ditto.
	* testsuite/tr1/6_containers/unordered_multiset/swap/2.cc: Ditto.

2007-07-10  Bob Wilson  <bob.wilson@acm.org>

	* configure.ac: Check if $atomicity_dir is cpu/generic/atomicity_mutex
	instead of the non-existent cpu/generic/atomic_mutex.
	* configure: Regenerate.

2007-07-10  Paolo Carlini  <pcarlini@suse.de>

	* include/std/utility (identity, move, forward): Add.
	* testsuite/20_util/move/requirements/explicit_instantiation.cc: New.
	* testsuite/20_util/move/1.cc: New.
	* testsuite/20_util/identity/value.cc: New.
	* testsuite/20_util/identity/requirements/typedefs.cc: New.
	* testsuite/20_util/identity/requirements/explicit_instantiation.cc:
	New.
	* testsuite/20_util/forward/requirements/explicit_instantiation.cc:
	New.
	* testsuite/20_util/forward/1.cc: New.
	* testsuite/20_util/forward/1_neg.cc: New.

2007-07-09  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/27_io/ios_base/failure/what-1.cc: Include <stdexcept>.

2007-07-09  Jim Xochellis  <jimxoch@yahoo.gr>
	    Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algo.h (search(_ForwardIterator1,
	_ForwardIterator1, _ForwardIterator2, _ForwardIterator2)): Tidy.
	(search(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2,
	_ForwardIterator2, _BinaryPredicate)): Likewise.

2007-07-06  Hans-Peter Nilsson  <hp@axis.com>

	* testsuite/lib/libstdc++.exp (v3-build_support): Use env(AR)
	and env(RANLIB), not env(AR_FOR_TARGET) and env(RANLIB_FOR_TARGET).

2007-07-05  Joerg Richter  <joerg.richter@pdv-fs.de>

	PR libstdc++/31957
	* include/Makefile.am: Work around an AIX sed oddity.
	* include/Makefile.in: Regenerate.

2007-07-04  Jim Xochellis  <jimxoch@yahoo.gr>

	* include/bits/stl_algo.h (search(_ForwardIterator1,
	_ForwardIterator1, _ForwardIterator2, _ForwardIterator2)): Simplify
	general case loop to a for(;;).
	(search(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2,
	_ForwardIterator2, _BinaryPredicate)): Likewise; remove redundant
	inner loop.

2007-07-03  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/31518
	* include/debug/formatter.h (_Error_formatter::_M_get_max_length): New.
	(_Error_formatter::_Error_formatter): Use it.
	* src/debug.cc: Define.
	(_Error_formatter::_M_error): Tweak.
	* configure.ac: Adjust version to 6:10:0.
	* config/abi/pre/gnu.ver: Export _Error_formatter::_M_get_max_length
	at GLIBCXX_3.4.10.
	* testsuite/util/testsuite_abi.cc: Add GLIBCXX_3.4.10.
	* docs/html/debug.html: Document.
	* configure: Regenerate.

2007-07-02  Douglas Gregor  <doug.gregor@gmail.com>

	* testsuite/20_util/make_signed/requirements/typedefs_neg.cc:
	Tweak line numbers.
	* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:
	Ditto.
	* testsuite/20_util/make_unsigned/requirements/typedefs-1.cc:
	Don't try to create an unsigned wchar_t.
	* testsuite/20_util/make_unsigned/requirements/typedefs-2.cc:
	Don't try to create an unsigned wchar_t.
	* testsuite/util/testsuite_hooks.h: Remove a stray semicolon.

2007-07-01  Douglas Gregor  <doug.gregor@gmail.com>

	* include/std/type_traits (__make_unsigned): Remove invalid
	wchar_t specialization.
	(__make_signed): Remove invalid wchar_t specialization.

2007-06-29  Douglas Gregor  <doug.gregor@gmail.com>

	* testsuite/18_support/headers/cstdbool/std_c++0x_neg.cc: Force
	C++98 mode.
	* testsuite/18_support/headers/cstdint/std_c++0x_neg.cc: Ditto.
	* testsuite/20_util/headers/type_traits/std_c++0x_neg.cc: Ditto.
	* testsuite/23_containers/headers/array/std_c++0x_neg.cc: Ditto.
	* testsuite/23_containers/headers/tuple/std_c++0x_neg.cc: Ditto.
	* testsuite/23_containers/headers/unordered_map/std_c++0x_neg.cc:
	Ditto.
	* testsuite/23_containers/headers/unordered_set/std_c++0x_neg.cc:
	Ditto.
	* testsuite/26_numerics/headers/ccomplex/std_c++0x_neg.cc: Ditto.
	* testsuite/26_numerics/headers/cfenv/std_c++0x_neg.cc: Ditto.
	* testsuite/26_numerics/headers/ctgmath/std_c++0x_neg.cc: Ditto.
	* testsuite/26_numerics/headers/random/std_c++0x_neg.cc: Ditto.
	* testsuite/27_io/headers/cinttypes/std_c++0x_neg.cc: Ditto.
	* testsuite/28_regex/headers/regex/std_c++0x_neg.cc: Ditto.

2007-06-28  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/32509
	* acinclude.m4 (GLIBCXX_ENABLE_CLOCALE): Carry out the checks
	involving the de_DE locale only if an auto locale config is
	used for a target suitable for the gnu locale model.
	* docs/html/install.html: Update.
	* configure: Regenerated.

2007-06-26  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/util/testsuite_api.h: New.
	* testsuite/27_io/ios_base/failure: Add.
	* testsuite/27_io/ios_base/failure/cons_virtual_derivation.cc: New.
	* testsuite/27_io/ios_base/failure/what-1.cc: Same.
	* testsuite/27_io/ios_base/failure/what-2.cc: Same.
	* testsuite/27_io/ios_base/failure/what-big.cc: Same.
	* testsuite/27_io/ios_base/failure/what-3.cc: Same.
	* testsuite/19_diagnostics/logic_error/
	cons_virtual_derivation.cc: Same.
	* testsuite/19_diagnostics/runtime_error/
	cons_virtual_derivation.cc: Same.
	* testsuite/18_support/bad_alloc/cons_virtual_derivation.cc: Same.
	* testsuite/18_support/bad_cast/cons_virtual_derivation.cc: Same.
	* testsuite/18_support/bad_exception/cons_virtual_derivation.cc: Same.
	* testsuite/18_support/bad_typeid/cons_virtual_derivation.cc: Same.
	* testsuite/ext/concurrence_lock_error: New.
	* testsuite/ext/concurrence_lock_error/
	cons_virtual_derivation.cc: Same.
	* testsuite/ext/forced_exception_error: New.
	* testsuite/ext/forced_exception_error/
	cons_virtual_derivation.cc: Same.
	* testsuite/ext/concurrence_unlock_error: New.
	* testsuite/ext/concurrence_unlock_error/
	cons_virtual_derivation.cc: Same.
	* testsuite/20_util/function_objects/bad_function_call: New.
	* testsuite/20_util/function_objects/bad_function_call/
	cons_virtual_derivation.cc: Same.

2007-06-26  Benjamin Kosnik  <bkoz@redhat.com>

	* include/ext/throw_allocator.h: Fixes for -fno-exceptions.
	* testsuite/util/testsuite_shared.cc: Same.
	* testsuite/util/io/illegal_input_error.hpp: Same.
	* testsuite/util/io/verified_cmd_line_input.cc: Same.

	* libsupc++/typeinfo (type_info): Correct comment formatting,
	clarify member access and public interface.
	* libsupc++/exception: Less compressed comments.
	* libsupc++/new: Same.

2007-06-18  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_list.h: Rename guard macro consistently with
	file name.
	* include/bits/stl_algobase.h: Likewise.
	* include/bits/stl_map.h: Likewise.
	* include/bits/stl_queue.h: Likewise.
	* include/bits/stl_set.h: Likewise.
	* include/bits/stl_stack.h: Likewise.
	* include/bits/stl_iterator_base_types.h: Likewise.
	* include/bits/stl_multimap.h: Likewise.
	* include/bits/stl_pair.h: Likewise.
	* include/bits/stl_vector.h: Likewise.
	* include/bits/stl_deque.h: Likewise.
	* include/bits/stl_multiset.h: Likewise.
	* include/bits/stl_iterator_base_funcs.h: Likewise.
	* include/bits/stl_algo.h: Likewise.
	* include/bits/stl_iterator.h: Likewise.
	* include/bits/stl_tempbuf.h: Likewise.
	* include/bits/stl_bvector.h: Likewise.
	* include/bits/stl_function.h: Likewise.
	* include/bits/stl_tree.h: Likewise.

2007-06-17  Nathan Sidwell  <nathan@codesourcery.com>

	* config/cpu/m68k/atomicity.h: Use __mcfisaa__, __mcfisaaplus__,
	__mcfisab__ & __mcfisac__ instead of obsolete cpu #defines.

2007-06-13  Richard Earnshaw  <rearnsha@arm.com>

	* libsupc++/eh_arm.cc (__cxa_type_match): Handle foreign
	exceptions.
	* libsubpc++/eh_personality.cc: Don't try to set up foreign or
	forced unwind types here when using the ARM EABI unwinder.

2007-06-13  Paolo Carlini  <pcarlini@suse.de>

	* include/c_global/cmath: Tweak includes.
	* include/std/memory: Likewise.
	* include/std/complex: Likewise.
	* include/tr1/memory: Likewise.
	* include/tr1/complex: Likewise.
	* include/tr1/cmath: Likewise; do not wrap special functions
	in #ifndef __GXX_EXPERIMENTAL_CXX0X__.

2007-06-10  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/util/testsuite_performance.h: Add cstring include for
	memset.

2007-06-08  Paolo Carlini  <pcarlini@suse.de>

	* docs/html/install.html: Adjust consistently with libstdc++/31717.

2007-06-08  Francesco Palagi  <palagi@arcetri.astro.it>

	* include/std/fstream: Add Table 92 in comment.

2007-06-06  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/32233
	* include/bits/stl_vector.h (_M_fill_initialize): Fix return type.
	* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:
	Adjust dg-error line.
	* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:
	Likewise.

2007-06-06  Benjamin Kosnik  <bkoz@redhat.com>
	    Frank Mori Hess  <frank.hess@nist.gov>

	* docs/html/debug.html: Correct link.

2007-06-02  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1_impl/type_traits (is_reference, add_reference,
	remove_reference): Remove.
	* include/tr1/type_traits (is_reference, add_reference,
	remove_reference): Add.
	* include/std/type_traits (is_lvalue_reference, is_rvalue_reference,
	is_reference, remove_reference, add_lvalue_reference,
	add_rvalue_reference): Add.
	* include/tr1_impl/boost_shared_ptr.h (operator*): Adjust.
	* testsuite/20_util/add_lvalue_reference/requirements/
	explicit_instantiation.cc: New.
	* testsuite/20_util/add_lvalue_reference/value.cc: Likewise.
	* testsuite/20_util/add_rvalue_reference/requirements/
	explicit_instantiation.cc: Likewise.
	* testsuite/20_util/add_rvalue_reference/value.cc: Likewise.
	* testsuite/20_util/is_lvalue_reference/requirements/
	explicit_instantiation.cc: Likewise.
	* testsuite/20_util/is_lvalue_reference/requirements/
	typedefs.cc: Likewise.
	* testsuite/20_util/is_lvalue_reference/value.cc: Likewise.
	* testsuite/20_util/is_rvalue_reference/requirements/
	explicit_instantiation.cc: Likewise.
	* testsuite/20_util/is_rvalue_reference/requirements/
	typedefs.cc: Likewise.
	* testsuite/20_util/is_rvalue_reference/value.cc: Likewise.
	* testsuite/20_util/is_reference/requirements/
	explicit_instantiation.cc: Likewise.
	* testsuite/20_util/is_reference/requirements/typedefs.cc: Likewise.
	* testsuite/20_util/is_reference/value.cc: Likewise.
	* testsuite/20_util/remove_reference/requirements/
	explicit_instantiation.cc: New.
	* testsuite/20_util/remove_reference/value.cc: Likewise.

	* testsuite/tr1/4_metaprogramming/add_const/requirements/
	typedefs.cc: Move...
	* testsuite/tr1/4_metaprogramming/add_const/value.cc: ... here.
	* testsuite/tr1/4_metaprogramming/add_cv/requirements/
	typedefs.cc: Move...
	* testsuite/tr1/4_metaprogramming/add_cv/value.cc: ... here.
	* testsuite/tr1/4_metaprogramming/add_pointer/requirements/
	typedefs.cc: Move...
	* testsuite/tr1/4_metaprogramming/add_pointer/value.cc: ... here.
	* testsuite/tr1/4_metaprogramming/add_reference/requirements/
	typedefs.cc: Move...
	* testsuite/tr1/4_metaprogramming/add_reference/value.cc: ... here.
	* testsuite/tr1/4_metaprogramming/add_volatile/requirements/
	typedefs.cc: Move...
	* testsuite/tr1/4_metaprogramming/add_volatile/value.cc: ... here.
	* testsuite/tr1/4_metaprogramming/aligned_storage/requirements/
	typedefs.cc: Move...
	* testsuite/tr1/4_metaprogramming/aligned_storage/value.cc: ... here.

2007-06-02  Paolo Bonzini  <bonzini@gnu.org>

	* configure: Regenerate.

2007-06-01  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/19_diagnostics/logic_error/what-big.cc: New.
	* testsuite/19_diagnostics/logic_error/what-3.cc: Same.
	* testsuite/19_diagnostics/runtime_error/what-big.cc: Same.
	* testsuite/19_diagnostics/runtime_error/what-3.cc: Same.

	* testsuite/18_support/14493.cc: Break into...
	* testsuite/18_support/exception/what.cc: ...this.
	* testsuite/18_support/bad_cast/what.cc: ...this.
	* testsuite/18_support/bad_alloc/what.cc: ...this.
	* testsuite/18_support/bad_typeid/what.cc: ...this.
	* testsuite/18_support/bad_exception/what.cc: ...this.

	* testsuite/19_diagnostics/bad_exception/23591_thread-1.c: Move...
	* testsuite/18_support/bad_exception/23591_thread-1.c: ...here.

	* testsuite/18_support/14026.cc: Move...
	* testsuite/18_support/uncaught_exception/14026.cc: ...here.

2007-06-01  Benjamin Kosnik  <bkoz@redhat.com>

	* include/ext/throw_allocator.h (__throw_allocator::allocate):
	Throw bad_alloc for out of memory conditions.
	* testsuite/ext/throw_allocator/deallocate_global.cc: New.
	* testsuite/ext/throw_allocator/check_delete.cc: Same.
	* testsuite/ext/throw_allocator/check_allocate_max_size.cc: Same.
	* testsuite/ext/throw_allocator/check_deallocate_null.cc: Same.
	* testsuite/ext/throw_allocator/explicit_instantiation.cc: Same.
	* testsuite/ext/throw_allocator/check_new.cc: Same.
	* testsuite/ext/throw_allocator/deallocate_local.cc: Same.

2007-05-31  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/31426
	* include/bits/c++config: Remove namespace association bits
	from tr1 to std.

	* include/ext/type_traits.h (__promote, __promote2,
	__promote3, __promote4): Add.

	* include/bits/hashtable.h: New.
	* include/bits/functional_hash.h: Likewise.
	* include/tr1/hashtable.h: Likewise.

	* include/tr1_impl/random: New.
	* include/tr1_impl/cinttypes: Likewise.
	* include/tr1_impl/cstdlib: Likewise.
	* include/tr1_impl/unordered_map: Likewise.
	* include/tr1_impl/cstdio: Likewise.
	* include/tr1_impl/boost_shared_ptr.h: Likewise.
	* include/tr1_impl/cctype: Likewise.
	* include/tr1_impl/random.tcc: Likewise.
	* include/tr1_impl/tuple: Likewise.
	* include/tr1_impl/functional_hash.h: Likewise.
	* include/tr1_impl/hashtable: Likewise.
	* include/tr1_impl/cmath: Likewise.
	* include/tr1_impl/type_traitsfwd.h: Likewise.
	* include/tr1_impl/hashtable_policy.h: Likewise.
	* include/tr1_impl/cfenv: Likewise.
	* include/tr1_impl/unordered_set: Likewise.
	* include/tr1_impl/functional: Likewise.
	* include/tr1_impl/utility: Likewise.
	* include/tr1_impl/complex: Likewise.
	* include/tr1_impl/type_traits: Likewise.
	* include/tr1_impl/cwchar: Likewise.
	* include/tr1_impl/cstdint: Likewise.
	* include/tr1_impl/regex: Likewise.
	* include/tr1_impl/array: Likewise.
	* include/tr1_impl/cwctype: Likewise.

	* include/tr1/type_traitsfwd.h: Remove.
	* include/tr1/boost_shared_ptr.h: Likewise.
	* include/tr1/common.h: Likewise.
	* include/tr1/hashtable: Likewise.
	* include/tr1/hashtable_policy.h: Likewise.
	* include/tr1/random.tcc: Likewise.

	* include/c_global/cinttypes: Include tr1_impl/cinttypes.
	* include/c_global/cstdlib: Likewise for cstdlib.
	* include/c_global/cstdio: Likewise for cstdio.
	* include/c_global/cctype: Likewise for cctype.
	* include/c_global/cmath: Likewise for cmath.
	* include/c_global/cfenv: Likewise for cfenv.
	* include/c_global/cwchar: Likewise for cwchar.
	* include/c_global/cstdint: Likewise for cstdint.
	* include/c_global/cwctype: Likewise for cwctype.
	* include/tr1/cinttypes: Likewise for cinttypes.
	* include/tr1/cstdlib: Likewise for cstdlib.
	* include/tr1/cstdio: Likewise for cstdio.
	* include/tr1/cctype: Likewise for cctype.
	* include/tr1/cmath: Likewise for cmath.
	* include/tr1/cfenv: Likewise for cfenv.
	* include/tr1/cwchar: Likewise for cwchar.
	* include/tr1/cstdint: Likewise for cstdint.
	* include/tr1/cwctype: Likewise for cwctype.
	* include/tr1/functional_hash.h: Likewise for functional_hash.

	* include/std/tuple: Include tr1_impl/tuple.
	* include/std/utility: Likewise for utility.
	* include/std/type_traits: Likewise for type_traits.
	(is_pod): Just forward to __is_pod.
	(has_trivial_default_constructor): Just forward to
	__has_trivial_constructor.
	(has_trivial_copy_constructor): Just forward to __has_trivial_copy.
	(has_trivial_assign): Just forward to __has_trivial_assign.
	(has_trivial_destructor): Just forward to __has_trivial_destructor.
	(has_nothrow_default_constructor): Just forward to
	__has_nothrow_constructor.
	(has_nothrow_copy_constructor): Just forward to __has_nothrow_copy.
	(has_nothrow_assign): Just forward to __has_nothrow_assign.
	(is_base_of): Just forward to __is_base_of.
	(is_signed, is_unsigned): Implement according to the C++0x
	specifications.
	* include/std/memory: Likewise for memory.
	* include/std/regex: Likewise for regex.
	* include/std/random: Likewise for random.
	* include/std/unordered_map: Likewise for unordered_map.
	* include/std/unordered_set: Likewise for unordered_set.
	* include/std/functional: Likewise for functional.
	* include/std/complex: Likewise for complex.
	* include/std/array: Likewise for array.
	* include/tr1/tuple: Likewise for tuple.
	* include/tr1/utility: Likewise for utility.
	* include/tr1/type_traits: Likewise for type_traits
	* include/tr1/memory: Likewise for memory.
	* include/tr1/regex: Likewise for regex.
	* include/tr1/random: Likewise for random.
	* include/tr1/unordered_map: Likewise for unordered_map.
	* include/tr1/unordered_set: Likewise for unordered_set.
	* include/tr1/functional: Likewise for functional.
	* include/tr1/complex: Likewise for complex.
	* include/tr1/array: Likewise for array.

	* include/c_global/ctgmath: Tweak.
	* include/c_global/cstdarg: Likewise.
	* include/c_global/ctime: Likewise.
	* include/c_global/climits: Likewise.
	* include/c_global/cfloat: Likewise.
	* include/c_global/ccomplex: Likewise.
	* include/c_global/cstdbool: Likewise.

	* include/tr1/poly_laguerre.tcc: Tweak, don't use _GLIBCXX_TR1.
	* include/tr1/riemann_zeta.tcc: Likewise.
	* include/tr1/beta_function.tcc: Likewise.
	* include/tr1/exp_integral.tcc: Likewise.
	* include/tr1/hypergeometric.tcc: Likewise.
	* include/tr1/modified_bessel_func.tcc: Likewise.
	* include/tr1/legendre_function.tcc: Likewise.
	* include/tr1/special_function_util.h: Likewise.
	* include/tr1/bessel_function.tcc: Likewise.
	* include/tr1/poly_hermite.tcc: Likewise.
	* include/tr1/ell_integral.tcc: Likewise.
	* include/tr1/gamma.tcc: Likewise.
	* include/tr1/stdlib.h: Likewise.
	* include/tr1/math.h: Likewise.

	* include/tr1/complex.h: Minor tweaks.
	* include/tr1/wctype.h: Likewise.
	* include/tr1/wchar.h: Likewise.
	* include/tr1/inttypes.h: Likewise.
	* include/tr1/tgmath.h: Likewise.
	* include/tr1/cstdbool: Likewise.
	* include/tr1/cfloat: Likewise.
	* include/tr1/ccomplex: Likewise.
	* include/tr1/ctime: Likewise.
	* include/tr1/climits: Likewise.
	* include/tr1/ctgmath: Likewise.
	* include/tr1/cstdarg: Likewise.

	* testsuite/tr1/headers.cc: Move...
	* testsuite/tr1/headers/all.cc: ... here.
	* testsuite/tr1/using_namespace_std_tr1.cc: Move...
	* testsuite/tr1/headers/c++200x/using_namespace_std_tr1.cc: ... here.
	* testsuite/tr1/headers/using_namespace_std_tr1.cc ... here.
	* testsuite/tr1/headers/c++200x/using_namespace_std_tr1.cc: New.

	* testsuite/20_util/tuple/requirements/explicit_instantiation.cc:
	Adjust namespace.
	* testsuite/20_util/has_nothrow_copy_constructor/value.cc: Adjust to
	the C++0x requirements.
	* testsuite/20_util/has_nothrow_default_constructor/value.cc: Likewise.
	* testsuite/20_util/has_trivial_copy_constructor/value.cc: Likewise.
	* testsuite/20_util/has_trivial_default_constructor/value.cc: Likewise.

	* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Adjust
	dg-error lines.
	* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:
	Likewise.
	* testsuite/20_util/headers/type_traits/types_std_c++0x_neg.cc:
	Un-xfail.

	* testsuite/20_util/is_signed/value.cc: New.
	* testsuite/20_util/is_signed/requirements/typedefs.cc: Likewise.
	* testsuite/20_util/is_signed/requirements/explicit_instantiation.cc:
	Likewise.
	* testsuite/20_util/is_unsigned/value.cc: Likewise..
	* testsuite/20_util/is_unsigned/requirements/typedefs.cc: Likewise.
	* testsuite/20_util/is_unsigned/requirements/explicit_instantiation.cc:
	Likewise.

	* include/Makefile.am: Adjust.
	* include/Makefile.in: Regenerate.

2007-05-31  Paolo Carlini  <pcarlini@suse.de>

	PR c++/32158 (libstdc++ bits)
	* include/bits/stl_uninitialized.h (__uninitialized_copy_aux,
	__uninitialized_fill_aux, __uninitialized_fill_n_aux):
	Remove.
	(struct __uninitialized_copy, struct __uninitialized_fill,
	struct __uninitialized_fill_n): Add.
	(uninitialized_copy, uninitialized_fill, uninitialized_fill_n):
	Adjust.
	* testsuite/20_util/specialized_algorithms/32158.cc: New.

	* include/bits/stl_uninitialized.h (uninitialized_copy(_InputIterator,
	_InputIterator, _ForwardIterator)): Robustify vs non-POD input.

	* include/bits/stl_vector.h (_M_fill_initialize): New.
	(vector(size_type, const value_type&, const allocator_type&),
	_M_initialize_dispatch(_Integer, _Integer, __true_type)): Use it.
	* testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:
	Adjust dg-error line.
	* testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:
	Likewise.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_2_neg.cc: Likewise.

2007-05-29  Paolo Carlini  <pcarlini@suse.de>

	* aclocal.m4: Regenerate.

	* testsuite/17_intro/headers/c++1998/c++_for_c.tar: Remove.
	* testsuite/17_intro/headers/c++1998/c++.tar: Likewise.

2007-05-28  Benjamin Kosnik  <bkoz@redhat.com>

	PR libstdc++/31717
	* acinclude.m4 (GLIBCXX_ENABLE_CLOCALE): Re-organize. Sanity check
	gnu locale model requests to make sure it will work for the requested
	target. Add checks for strxfrm_l, strerror_l when in gnu locale,
	and strerror_r everywhere.
	* aclocal.m4: Regenerated.
	* configure: Regenerated.
	* config.h.in: Regenerated.

2007-05-27  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/boost_shared_ptr.h
	(_Sp_counted_base<_S_mutex>::_M_add_ref_lock()): Do not wrap in
	#ifdef __GTHREADS.

2007-05-27  Paolo Carlini  <pcarlini@suse.de>

	* include/c_global/cwchar: Do not include <ctime>.
	* include/c_std/cwchar: Likewise.
	* include/ext/throw_allocator.h: Do it here.

2007-05-25  Paolo Carlini  <pcarlini@suse.de>

	* config/locale/gnu/c_locale.h (__convert_from_v): Fix typo.

2007-05-24  Paolo Carlini  <pcarlini@suse.de>

	* include/ext/concurrence.h: Use __GCC_HAVE_SYNC_COMPARE_AND_SWAP_*.

2007-05-24  Steve Ellcey  <sje@cup.hp.com>

	* Makefile.in: Regenerate.
	* configure: Regenerate.
	* aclocal.m4: Regenerate.
	* include/Makefile.in: Regenerate.
	* libmath/Makefile.in: Regenerate.
	* libsupc++/Makefile.in: Regenerate.
	* po/Makefile.in: Regenerate.
	* src/Makefile.in: Regenerate.
	* testsuite/Makefile.in: Regenerate.

2007-05-24  Paolo Carlini  <pcarlini@suse.de>

	* config/locale/gnu/c_locale.h (__convert_from_v): Only switch to the
	"C" locale if the current one isn't already "C" (for old glibcs).
	* config/os/gnu-linux/ctype_noninline.h (ctype<char>::classic_table,
	ctype<char>::ctype(__c_locale, const mask*, bool, size_t),
	ctype<char>::ctype(const mask*, bool, size_t)): Likewise, for generic
	locale model.
	* config/locale/gnu/messages_members.h
	(messages<>::messages(__c_locale, const char*, size_t),
	messages_byname<_CharT>::messages_byname(const char*, size_t)):
	Only dynamically allocate memory if __s != "C".
	* config/locale/gnu/time_members.h
	(__timepunct<_CharT>::__timepunct(__c_locale, const char*, size_t)):
	Likewise.
	* config/locale/generic/time_members.h
	(__timepunct<_CharT>::__timepunct(__c_locale, const char*, size_t)):
	Likewise.

	* testsuite/util/testsuite_allocator.h: Revert last change.

2007-05-22  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/util/testsuite_allocator.h (check_new): Assign false
	to new_called.
	(check_delete): Likewise for delete_called.

2007-05-21  Paolo Carlini  <pcarlini@suse.de>

	* config/locale/gnu/c_locale.h: Do not include <cstdarg>, use builtins.
	* config/locale/generic/c_locale.h: Likewise.

2007-05-21  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/31621
	* acinclude.m4 ([GLIBCXX_CHECK_LINKER_FEATURES]): Use the C compiler.
	* configure: Regenerate.

2007-05-20  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algo.h: Shuffle the functions to better match the
	order in the standard.

2007-05-17  Paolo Carlini  <pcarlini@suse.de>

	* config/locale/gnu/c_locale.h: Do not include <libintl.h>.
	* config/locale/gnu/messages_members.h: Do it here.

	* config/locale/gnu/c_locale.h: Do not include <cstdio>, use
	the builtins.
	* config/locale/generic/c_locale.h: Likewise.

2007-05-17  Benjamin Kosnik  <bkoz@redhat.com>

	* acinclude.m4 (GLIBCXX_CHECK_COMPILER_FEATURES): Add -g to
	compile flags, move code to test to global scope.
	* configure: Regenerate.

2007-05-17  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/21_strings/char_traits/requirements/wchar_t/typedefs.cc:
	Fix dg bits.
	* testsuite/21_strings/char_traits/requirements/char/typedefs.cc: Same.

2007-05-17  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algobase.h (mismatch): Move...
	* include/bits/stl_algo.h: ... here.

2007-05-17  Benjamin Kosnik  <bkoz@redhat.com>

	* include/tr1/cmath: Guard special math with
	__GXX_EXPERIMENTAL_CXX0X__.
	* testsuite/26_numerics/headers/cmath/types_std_c++0x_neg.cc:
	Remove xfail.

2007-05-17  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/locale_facets.tcc (__pad<>::_S_pad): Minor tweaks, avoid
	unnecessary casts, do widenings just in time.

2007-05-16  Benjamin Kosnik  <bkoz@redhat.com>

	* acinclude.m4 (GLIBCXX_CHECK_COMPILER_FEATURES): Add a function
	to the test code compiled with -ffunction-sections -fdata-sections.
	* configure: Regenerate.

	* testsuite/22_locale/ctype/scan/wchar_t/1.cc: Remove
	_GLIBCXX_USE_WCHAR_T guards as superfluous.

	* testsuite/20_util/make_signed/requirements/typedefs-1.cc: Add
	_GLIBCXX_USE_WCHAR_T guards.
	* testsuite/20_util/make_signed/requirements/typedefs-2.cc: Same.
	* testsuite/20_util/make_unsigned/requirements/typedefs-1.cc: Same.
	* testsuite/20_util/make_unsigned/requirements/typedefs-2.cc: Same.

	* testsuite/21_strings/char_traits/requirements/wchar_t/typedefs.cc:
	Add.
	* testsuite/21_strings/char_traits/typedefs/char/1.cc: Move...
	* testsuite/21_strings/char_traits/requirements/char/typedefs.cc:
	...here.
	* testsuite/21_strings/char_traits/typedefs: Remove.
	* testsuite/21_strings/char_traits/typedefs/char: Remove.

2007-05-16  Benjamin Kosnik  <bkoz@redhat.com>

	* docs/html/abi.html: Update for gcc-4.1.2 and gcc-4.2.0.

2007-05-14  Kaz Kojima  <kkojima@gcc.gnu.org>

	* testsuite/tr1/5_numerical_facilities/special_functions/
	17_hyperg/check_nan.cc: Add -mieee for sh.

2007-05-14  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/util/testsuite_io.h: Only include <ios>.

2007-05-14  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/allocator.h: Do not include cpp_type_traits.h.

2007-05-14  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/postypes.h (class fpos<>): Remove redundant forward
	declaration.

2007-05-13  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_tempbuf.h (return_temporary_buffer(_Tp*)): Inline.

2007-05-13  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/type_traitsfwd.h: Fix include guard typo.

2007-05-11  Paolo Carlini  <pcarlini@suse.de>

	* include/ext/pod_char_traits.h (char_traits<>::move):
	Use __builtin_memmove.
	* include/bits/locale_classes.h (locale::_Impl::_M_check_same_name,
	collate_byname(const char*, size_t)): Use __builtin_strcmp.
	* include/bits/locale_facets.h: Use __builtin_mem* and
	__builtin_str* everywhere.
	* include/bits/codecvt.h (codecvt_byname(const char*, size_t)):
	Use __builtin_strcmp.
	* include/bits/char_traits.h: Use __builtin_mem* everywhere.
	* include/bits/fstream.tcc (basic_filebuf<>::underflow, imbue):
	Use __builtin_memcpy and __builtin_memmove.
	* include/bits/locale_facets_nonio.h (moneypunct_byname(const char*,
	size_t __refs)): Use __builtin_strcmp.
	* include/std/bitset (bitset<>::_M_do_reset): Use __builtin_memset.
	* config/locale/gnu/c_locale.h: Use __builtin_strlen, __builtin_strcmp,
	and __builtin_memcpy.
	* config/locale/gnu/messages_members.h: Likewise.
	* config/locale/gnu/time_members.h: Likewise.
	* config/locale/generic/c_locale.h: Likewise.
	* config/locale/generic/messages_members.h: Likewise.
	* config/locale/generic/time_members.h: Likewise.
	* config/os/gnu-linux/ctype_noninline.h: Likewise, avoid strdup.
	* config/os/tpf/ctype_noninline.h: Likewise.
	* config/locale/generic/codecvt_members.cc: Include <cstring>.
	* config/locale/generic/ctype_members.cc: Likewise.
	* config/locale/generic/collate_members.cc: Likewise.
	* config/locale/gnu/c++locale_internal.h: Likewise.
	* config/locale/darwin/ctype_members.cc: Likewise.
	* src/ctype.cc: Likewise.
	* testsuite/19_diagnostics/logic_error/what-1.cc: Likewise.
	* testsuite/19_diagnostics/logic_error/what-2.cc: Likewise.
	* testsuite/19_diagnostics/runtime_error/what-1.cc: Likewise.
	* testsuite/19_diagnostics/runtime_error/what-2.cc: Likewise.
	* testsuite/19_diagnostics/runtime_error/what-3.cc: Likewise.
	* config/locale/gnu/messages_members.cc: Avoid strdup.
	* config/locale/gnu/monetary_members.cc: Likewise.
	* config/locale/gnu/time_members.cc: Likewise.
	* config/locale/gnu/time_members.cc: Likewise.
	* config/locale/generic/c_locale.cc: Likewise.

2007-05-11  Benjamin Kosnik  <bkoz@redhat.com>

	* include/std/stdexcept: Remove extra spacing.

	* testsuite/19_diagnostics/stdexceptions.cc: Break into...
	* testsuite/19_diagnostics/bad_exception: ...this. Populate.
	* testsuite/19_diagnostics/logic_error: ... this.
	* testsuite/19_diagnostics/logic_error/what-1.cc: ...this.
	* testsuite/19_diagnostics/logic_error/what-2.cc: ...this.
	* testsuite/19_diagnostics/runtime_error: ...this.
	* testsuite/19_diagnostics/runtime_error/what-1.cc: ...this.
	* testsuite/19_diagnostics/runtime_error/what-2.cc: ...this.
	* testsuite/19_diagnostics/runtime_error/what-3.cc: ...this.
	* testsuite/19_diagnostics/23591_thread-1.c: Move...
	* testsuite/19_diagnostics/bad_exception/23591_thread-1.c: ...here.

2007-05-10  Paolo Carlini  <pcarlini@suse.de>

	* 27_io/objects/wchar_t/11.cc: Include <cstring>.
	* 27_io/objects/wchar_t/10.cc: Likewise.
	* 27_io/objects/wchar_t/12.cc: Likewise.
	* 27_io/basic_streambuf/sputbackc/char/9538.cc: Likewise.
	* 27_io/basic_streambuf/sgetn/char/1.cc: Likewise.
	* 27_io/basic_streambuf/overflow/char/1.cc: Likewise.
	* 27_io/basic_streambuf/sgetc/char/1.cc: Likewise.
	* 27_io/basic_streambuf/sputn/wchar_t/1.cc: Likewise.
	* 27_io/basic_streambuf/sputn/char/1.cc: Likewise.
	* 27_io/basic_ios/cons/char/3.cc: Likewise.
	* 27_io/basic_stringbuf/setbuf/char/2.cc: Likewise.
	* 27_io/basic_stringbuf/setbuf/char/3.cc: Likewise.
	* 27_io/basic_stringbuf/setbuf/char/4.cc: Likewise.
	* 27_io/basic_istream/extractors_character/char/4.cc: Likewise.
	* 27_io/fpos/mbstate_t/1.cc: Likewise.
	* 27_io/basic_filebuf/setbuf/char/2.cc: Likewise.
	* 27_io/basic_filebuf/setbuf/char/3.cc: Likewise.
	* 25_algorithms/copy/streambuf_iterators/char/2.cc: Likewise.
	* 25_algorithms/copy/streambuf_iterators/char/4.cc: Likewise.
	* 19_diagnostics/stdexceptions.cc: Likewise.
	* 21_strings/char_traits/requirements/short/1.cc: Likewise.
	* 21_strings/basic_string/compare/char/1.cc: Likewise.
	* 21_strings/basic_string/capacity/1.cc: Likewise.
	* ext/codecvt/char-1.cc: Likewise.
	* ext/codecvt/char-2.cc: Likewise.
	* ext/codecvt/1.cc: Likewise.
	* ext/stdio_sync_filebuf/wchar_t/1.cc: Likewise.
	* ext/stdio_sync_filebuf/char/1.cc: Likewise.
	* ext/stdio_filebuf/char/2.cc: Likewise.
	* ext/stdio_filebuf/char/10063-1.cc: Likewise.
	* 22_locale/ctype/narrow/char/19955.cc: Likewise.
	* 22_locale/codecvt/unshift/wchar_t/1.cc: Likewise.
	* 22_locale/codecvt/unshift/wchar_t/2.cc: Likewise.
	* 22_locale/codecvt/unshift/wchar_t/3.cc: Likewise.
	* 22_locale/codecvt/unshift/wchar_t/4.cc: Likewise.
	* 22_locale/codecvt/unshift/char/1.cc: Likewise.
	* 22_locale/codecvt/length/wchar_t/1.cc: Likewise.
	* 22_locale/codecvt/length/wchar_t/2.cc: Likewise.
	* 22_locale/codecvt/length/wchar_t/3.cc: Likewise.
	* 22_locale/codecvt/length/wchar_t/4.cc: Likewise.
	* 22_locale/codecvt/length/wchar_t/5.cc: Likewise.
	* 22_locale/codecvt/length/wchar_t/6.cc: Likewise.
	* 22_locale/codecvt/length/wchar_t/7.cc: Likewise.
	* 22_locale/codecvt/always_noconv/char/1.cc: Likewise.
	* 22_locale/codecvt/encoding/char/1.cc: Likewise.
	* 22_locale/codecvt/in/wchar_t/1.cc: Likewise.
	* 22_locale/codecvt/in/wchar_t/2.cc: Likewise.
	* 22_locale/codecvt/in/wchar_t/3.cc: Likewise.
	* 22_locale/codecvt/in/wchar_t/4.cc: Likewise.
	* 22_locale/codecvt/in/wchar_t/5.cc: Likewise.
	* 22_locale/codecvt/in/wchar_t/6.cc: Likewise.
	* 22_locale/codecvt/in/wchar_t/7.cc: Likewise.
	* 22_locale/codecvt/in/wchar_t/8.cc: Likewise.
	* 22_locale/codecvt/in/wchar_t/9.cc: Likewise.
	* 22_locale/codecvt/in/char/1.cc: Likewise.
	* 22_locale/codecvt/max_length/char/1.cc: Likewise.
	* 22_locale/codecvt/out/wchar_t/1.cc: Likewise.
	* 22_locale/codecvt/out/wchar_t/2.cc: Likewise.
	* 22_locale/codecvt/out/wchar_t/3.cc: Likewise.
	* 22_locale/codecvt/out/wchar_t/4.cc: Likewise.
	* 22_locale/codecvt/out/wchar_t/5.cc: Likewise.
	* 22_locale/codecvt/out/wchar_t/6.cc: Likewise.
	* 22_locale/codecvt/out/wchar_t/7.cc: Likewise.
	* 22_locale/codecvt/out/char/1.cc: Likewise.
	* 22_locale/locale/cons/5.cc: Likewise.
	* 22_locale/collate_byname/named_equivalence.cc: Likewise.

2007-05-07  Mark Mitchell  <mark@codesourcery.com>

	* libstdc++-v3/libsupc++/cxxabi.h (_GLIBCXX_NOTHROW): New macro.
	(__cxa_atexit): Use it.

	* testsuite/lib/libstdc++.exp (v3_target_compile_as_c): For
	installed-tree testing, search more include directories.

2007-05-08  Benjamin Kosnik  <bkoz@redhat.com>

	* include/std/type_traits (make_signed): Remove specializations
	for floating point types.
	(make_unsigned): Same.
	* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Fix.
	* testsuite/20_util/make_signed/requirements/typedefs-1.cc: Same.
	* testsuite/20_util/make_signed/requirements/typedefs-2.cc: Same.
	* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc: Same.
	* testsuite/20_util/make_unsigned/requirements/typedefs-1.cc: Same.
	* testsuite/20_util/make_unsigned/requirements/typedefs-2.cc: Same.

2007-05-08  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/26_numerics/headers/cmath/types_std_c++0x_neg.cc: New.

2007-05-08  Jason Merrill  <jason@redhat.com>

	* libsupc++/cxxabi-internal.h: Remove, to be replaced by...
	* libsupc++/cxxabi-forced.h: ...this new file.
	* include/ext/vstring.tcc: Include cxxabi-forced.h instead.
	* include/bits/istream.tcc: Likewise.
	* include/bits/ostream.tcc: Likewise.
	* include/bits/basic_string.tcc: Likewise.
	* include/bits/ostream_insert.h: Likewise.
	* include/bits/fstream.tcc: Likewise.
	* include/std/bitset: Likewise.
	* libsupc++/cxxabi.h: Restore previous contents.
	* Makefile.am (headers): Add cxxabi-forced.h.
	* Makefile.in: Regenerate.

2007-05-08  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/util/testsuite_abi.cc: Add CXXABI_1.3.2.

	* libsupc++/cxxabi-internal.h (__foreign_exception::__pure): To
	__pure_virtual.

2007-05-07  Jason Merrill  <jason@redhat.com>

	* include/bits/ostream.tcc (operator<<(char*)): Add __s.

	* config/abi/pre/gnu.ver: Fix symbol versions.
	* config/abi/pre/gnu-versioned-namespace.ver: Likewise.

2007-05-07  Danny Smith  <dannysmith@users.sourceforge.net>

	* config/os/mingw32/os_defines.h (NOMINMAX): Update comment.

2007-05-07  Jason Merrill  <jason@redhat.com>

	PR c++/28145
	* libsupc++/cxxabi.h (__forced_unwind, __foreign_exception):
	New classes.
	* libsupc++/eh_exception.cc: Define their destructors.
	* config/abi/pre/gnu.ver: Export their type_infos.
	* config/abi/pre/gnu-versioned-namespace.ver: Likewise.
	* libsupc++/eh_personality.cc: A handler for abi::__forced_unwind
	matches a forced unwind, and a handler for abi::__foreign_exception
	matches a foreign exception.

	* include/bits/istream.tcc: Rethrow forced unwind.
	* include/bits/ostream.tcc: Likewise.
	* include/bits/ostream_insert.h: Likewise.
	* include/bits/basic_string.tcc (operator>>, getline): Likewise.
	* include/bits/fstream.tcc (basic_filebuf::close): Likewise.
	* include/ext/vstring.cc (operator>>, getline): Likewise.
	* src/istream.cc: Likewise.
	* src/compatibility.cc (basic_istream::ignore): Likewise.
	* include/std/bitset (operator>>): Likewise.
	* include/std/fstream (basic_filebuf::close): Remove throw() spec.
	* libsupc++/cxxabi-internal.h: Split out from...
	* libsupc++/cxxabi.h: ...here.

2007-05-07  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algobase.h: Do not include <cstring>.
	(copy(const _Tp*, const _Tp*, _Tp*), __copy_b(const _Tp*, const _Tp*,
	_Tp*)): Use __builtin_memmove.
	(__fill_aux): Use __builtin_memset.
	(equal(const _Tp*, const _Tp*, const _Tp*),
	lexicographical_compare(const unsigned char*, const unsigned char*,
	const unsigned char*, const unsigned char*)): Use __builtin_memcmp.
	* include/bits/valarray_array.h: Do not include <cstring>.
	(_Array_default_ctor<, true>::_S_do_it): Use __builtin_memset.
	(_Array_copy_ctor<, true>::_S_do_it, _Array_copier<, true>::_S_do_it):
	Use __builtin_memcpy.
	* include/ext/algorithm
	(__lexicographical_compare_3way(const unsigned char*,
	const unsigned char*, const unsigned char*, const unsigned char*)):
	Use __builtin_memcmp.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_1_neg.cc: Adjust dg-error line number.
	* testsuite/23_containers/vector/requirements/dr438/
	constructor_2_neg.cc: Likewise.

2007-05-07  Mark Mitchell  <mark@codesourcery.com>

	* testsuite/lib/libstdc++.exp (v3_target_compile_as_c): For
	installed-tree testing, search more include directories.

	* testsuite/22_locale/num_put/put/char/14220.cc: XFAIL on Solaris
	2.10.
	* testsuite/22_locale/num_put/put/wchar_t/14220.cc: Likewise.

	* testsuite/lib/libstdc++.exp (v3_target_compile_as_c): In
	installed-tree testing, use "remote_exec host", not "remote_exec
	exec".  Trip trailing newlines from output of -dumpversion and
	-dumpmachine.

2007-05-07  Benjamin Kosnik  <bkoz@redhat.com>
            Howard Hinnant  <hhinnant@apple.com>

	* include/std/type_traits: (make_signed, make_unsigned): Adjust
	for enum sizes.
	* testsuite/20_util/make_unsigned/requirements/typedefs.cc: Move to...
	* testsuite/20_util/make_unsigned/requirements/typedefs-1.cc: ...here.
	* testsuite/20_util/make_unsigned/requirements/typedefs-2.cc: Add,
	compile with -funsigned-char -fshort-enums.
	* testsuite/20_util/make_signed/requirements/typedefs.cc: Move to...
	* testsuite/20_util/make_signed/requirements/typedefs-1.cc: ...here.
	* testsuite/20_util/make_signed/requirements/typedefs-2.cc: Add,
	compile with -funsigned-char -fshort-enums.

	* testsuite/20_util/headers/type_traits/types_std_c++0x_neg.cc:
	Add a temporary xfail to this test for all platforms.

2007-05-06  Paolo Carlini  <pcarlini@suse.de>

	* include/std/complex: Add missing extern template declarations.
	* testsuite/26_numerics/complex/complex_inserters_extractors.cc:
	Move...
	* testsuite/26_numerics/complex/inserters_extractors/char/1.cc:
	... here.
	* testsuite/26_numerics/complex/inserters_extractors/wchar_t/1.cc:
	New.

2007-05-06  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/31834
	* testsuite/17_intro/headers/c++200x/all.cc: Protect inclusion
	of C99 headers.
	* testsuite/17_intro/headers/c++200x/all_multiple_inclusion.cc:
	Likewise.

2007-05-06  Paolo Carlini  <pcarlini@suse.de>

	* config/locale/generic/c_locale.cc: Don't use __builtin_huge_val*
	when __*_HAS_INFINITY__ is false.

2007-05-04  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_raw_storage_iter.h (class raw_storage_iterator):
	Adjust template parameter name.

2007-05-04  Mark Mitchell  <mark@codesourcery.com>

	* libsupc++/cxxabi.h (__cxa_atexit): Conditionalize exception
	specification on #ifdef __cplusplus.

2007-05-04  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_memory.h: Rename to stl_auto_ptr.h.
	(__get_temporary_buffer, get_temporary_buffer,
	return_temporary_buffer): Move...
	* include/bits/stl_tempbuf.h: ... here.
	* include/std/memory: Adjust includes.
	* testsuite/20_util/auto_ptr/assign_neg.cc: Adjust dg-error line
	numbers.
	* include/Makefile.am: Adjust.
	* include/Makefile.in: Regenerate.

	* testsuite/util/testsuite_iterators.h: Do not include the entire
	<iterator>.
	* include/bits/stl_iterator_base_types.h: Adjust includes.
	* testsuite/25_algorithms/unique_copy/2.cc: Include <functional>.

2007-05-04  Mark Mitchell  <mark@codesourcery.com>

	* libsupc++/atexit_arm.cc: New file.
	* libsupc++/vec.cc (__aeabi_atexit): Remove.
	* libsupc++/cxxabi.h (__cxa_atexit): Add exception specification.

	* libsupc++/Makefile.am: Add atexit_arm.cc.
	* libsupc++/Makefile.in: Regenerated.

2007-05-04  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_construct.h (_Destroy(_ForwardIterator,
	_ForwardIterator __last, _Allocator)): Change the last parameter
	to _Allocator&.
	* include/bits/stl_uninitialized.h (__uninitialized_copy_a,
	__uninitialized_fill_a, __uninitialized_fill_n_a,
	__uninitialized_fill_copy, __uninitialized_copy_fill,
	__uninitialized_copy_copy): Likewise.
	* include/ext/rope: Adjust everywhere.
	* include/ext/ropeimpl.h: Likewise.

2007-05-03  Benjamin Kosnik  <bkoz@redhat.com>

	* include/std/type_traits (enable_if): New.
	(conditional): New.
	(__decay_selector, decay): New.
	(__cv_selector, __match_cv_qualifiers): New.
	(__make_unsigned, __make_unsigned_selector, make_unsigned): New.
	(__make_signed, __make_signed_selector, make_signed): New.
	(has_trivial_constructor): ... to has_trivial_default_constructor.
	(has_nothrow_constructor): ... to has_nothrow_default_constructor.
	(has_trivial_copy): ... to has_trivial_copy_constructor.
	(has_nothrow_copy): ... to has_nothrow_copy_constructor.

	* include/tr1/type_traits_fwd: Move to...
	* include/tr1/type_traitsfwd: ... this, consistency with
	ios/string/locale forward headers.
	* include/tr1/type_traits: Adjust include.
	* include/Makefile.am (tr1_headers): Change type_traits_fwd.h to
	type_traitsfwd.h.
	* include/Makefile.in: Regenerate.

	* testsuite/23_containers/tuple: Move...
	* testsuite/20_util/tuple:... here.

	* testsuite/20_util/conditional: New.
	* testsuite/20_util/conditional/requirements: Same.
	* testsuite/20_util/conditional/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/20_util/conditional/requirements/typedefs.cc: Same.
	* testsuite/20_util/decay: Same.
	* testsuite/20_util/decay/requirements: Same.
	* testsuite/20_util/decay/requirements/explicit_instantiation.cc: Same.
	* testsuite/20_util/decay/requirements/typedefs.cc: Same.
	* testsuite/20_util/enable_if: Same.
	* testsuite/20_util/enable_if/requirements: Same.
	* testsuite/20_util/enable_if/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/20_util/enable_if/requirements/typedefs.cc: Same.
	* testsuite/20_util/enable_if/requirements/typedefs_neg.cc: Same.
	* testsuite/20_util/has_nothrow_copy_constructor: Same.
	* testsuite/20_util/has_nothrow_copy_constructor/requirements: Same.
	* testsuite/20_util/has_nothrow_copy_constructor/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/20_util/has_nothrow_copy_constructor/requirements/
	typedefs.cc: Same.
	* testsuite/20_util/has_nothrow_copy_constructor/value.cc: Same.
	* testsuite/20_util/has_nothrow_default_constructor: Same.
	* testsuite/20_util/has_nothrow_default_constructor/requirements: Same.
	* testsuite/20_util/has_nothrow_default_constructor/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/20_util/has_nothrow_default_constructor/requirements/
	typedefs.cc: Same.
	* testsuite/20_util/has_nothrow_default_constructor/value.cc: Same.
	* testsuite/20_util/has_trivial_copy_constructor: Same.
	* testsuite/20_util/has_trivial_copy_constructor/requirements: Same.
	* testsuite/20_util/has_trivial_copy_constructor/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/20_util/has_trivial_copy_constructor/requirements/
	typedefs.cc: Same.
	* testsuite/20_util/has_trivial_copy_constructor/value.cc: Same.
	* testsuite/20_util/has_trivial_default_constructor: Same.
	* testsuite/20_util/has_trivial_default_constructor/requirements: Same.
	* testsuite/20_util/has_trivial_default_constructor/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/20_util/has_trivial_default_constructor/requirements/
	typedefs.cc: Same.
	* testsuite/20_util/has_trivial_default_constructor/value.cc: Same.
	* testsuite/20_util/headers/type_traits/types_std_c++0x_neg.cc: Same.
	* testsuite/20_util/make_signed: Same.
	* testsuite/20_util/make_signed/requirements: Same.
	* testsuite/20_util/make_signed/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/20_util/make_signed/requirements/typedefs.cc: Same.
	* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Same.
	* testsuite/20_util/make_unsigned: Same.
	* testsuite/20_util/make_unsigned/requirements: Same.
	* testsuite/20_util/make_unsigned/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/20_util/make_unsigned/requirements/typedefs.cc: Same.
	* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc: Same.

2007-05-02  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/31777
	* include/ext/pool_allocator.h (__pool_alloc<>::allocate,
	__pool_alloc<>::deallocate): Fix _S_force_new check.

2007-05-01  Benjamin Kosnik  <bkoz@redhat.com>

	* 23_containers/requirements/sequences/dr438/deque/*: Move to...
	* 23_containers/deque/requirements/dr438: ...here.

	* 23_containers/requirements/sequences/dr438/list/*: Move to...
	* 23_containers/list/requirements/dr438: ...here.

	* 23_containers/requirements/sequences/dr438/vector/*: Move to...
	* 23_containers/vector/requirements/dr438: ...here.

2007-05-01  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/*/explicit_instantiations.cc: Change to...
	* testsuite/*/explicit_instantiation.cc: ... this.

2007-05-01  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/tr1/4_metaprogramming/*/explicit_instantiations.cc: Change
	"basic_ofstream" in comment to type_traits.

2007-04-30  Benjamin Kosnik  <bkoz@redhat.com>

	Directory layout flattening.

	Added in testsuite:
	* tr1/4_metaprogramming/add_const
	* tr1/4_metaprogramming/add_const/requirements
	* tr1/4_metaprogramming/add_const/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/add_const/requirements/typedefs.cc
	* tr1/4_metaprogramming/add_cv
	* tr1/4_metaprogramming/add_cv/requirements
	* tr1/4_metaprogramming/add_cv/requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/add_cv/requirements/typedefs.cc
	* tr1/4_metaprogramming/add_pointer
	* tr1/4_metaprogramming/add_pointer/requirements
	* tr1/4_metaprogramming/add_pointer/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/add_pointer/requirements/typedefs.cc
	* tr1/4_metaprogramming/add_reference
	* tr1/4_metaprogramming/add_reference/requirements
	* tr1/4_metaprogramming/add_reference/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/add_reference/requirements/typedefs.cc
	* tr1/4_metaprogramming/add_volatile
	* tr1/4_metaprogramming/add_volatile/requirements
	* tr1/4_metaprogramming/add_volatile/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/add_volatile/requirements/typedefs.cc
	* tr1/4_metaprogramming/aligned_storage
	* tr1/4_metaprogramming/aligned_storage/requirements
	* tr1/4_metaprogramming/aligned_storage/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/aligned_storage/requirements/typedefs.cc
	* tr1/4_metaprogramming/alignment_of
	* tr1/4_metaprogramming/alignment_of/requirements
	* tr1/4_metaprogramming/alignment_of/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/alignment_of/requirements/typedefs.cc
	* tr1/4_metaprogramming/alignment_of/value.cc
	* tr1/4_metaprogramming/extent
	* tr1/4_metaprogramming/extent/requirements
	* tr1/4_metaprogramming/extent/requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/extent/requirements/typedefs.cc
	* tr1/4_metaprogramming/extent/value.cc
	* tr1/4_metaprogramming/has_nothrow_assign
	* tr1/4_metaprogramming/has_nothrow_assign/requirements
	* tr1/4_metaprogramming/has_nothrow_assign/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/has_nothrow_assign/requirements/typedefs.cc
	* tr1/4_metaprogramming/has_nothrow_assign/value.cc
	* tr1/4_metaprogramming/has_nothrow_constructor
	* tr1/4_metaprogramming/has_nothrow_constructor/requirements
	* tr1/4_metaprogramming/has_nothrow_constructor/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/has_nothrow_constructor/
	requirements/typedefs.cc
	* tr1/4_metaprogramming/has_nothrow_constructor/value.cc
	* tr1/4_metaprogramming/has_nothrow_copy
	* tr1/4_metaprogramming/has_nothrow_copy/requirements
	* tr1/4_metaprogramming/has_nothrow_copy/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/has_nothrow_copy/requirements/typedefs.cc
	* tr1/4_metaprogramming/has_nothrow_copy/value.cc
	* tr1/4_metaprogramming/has_trivial_assign
	* tr1/4_metaprogramming/has_trivial_assign/requirements
	* tr1/4_metaprogramming/has_trivial_assign/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/has_trivial_assign/requirements/typedefs.cc
	* tr1/4_metaprogramming/has_trivial_assign/value.cc
	* tr1/4_metaprogramming/has_trivial_constructor
	* tr1/4_metaprogramming/has_trivial_constructor/requirements
	* tr1/4_metaprogramming/has_trivial_constructor/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/has_trivial_constructor/
	requirements/typedefs.cc
	* tr1/4_metaprogramming/has_trivial_constructor/value.cc
	* tr1/4_metaprogramming/has_trivial_copy
	* tr1/4_metaprogramming/has_trivial_copy/requirements
	* tr1/4_metaprogramming/has_trivial_copy/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/has_trivial_copy/requirements/typedefs.cc
	* tr1/4_metaprogramming/has_trivial_copy/value.cc
	* tr1/4_metaprogramming/has_trivial_destructor
	* tr1/4_metaprogramming/has_trivial_destructor/requirements
	* tr1/4_metaprogramming/has_trivial_destructor/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/has_trivial_destructor/requirements/typedefs.cc
	* tr1/4_metaprogramming/has_trivial_destructor/value.cc
	* tr1/4_metaprogramming/has_virtual_destructor
	* tr1/4_metaprogramming/has_virtual_destructor/requirements
	* tr1/4_metaprogramming/has_virtual_destructor/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/has_virtual_destructor/requirements/typedefs.cc
	* tr1/4_metaprogramming/has_virtual_destructor/value.cc
	* tr1/4_metaprogramming/integral_constant
	* tr1/4_metaprogramming/integral_constant/requirements
	* tr1/4_metaprogramming/integral_constant/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/integral_constant/requirements/typedefs.cc
	* tr1/4_metaprogramming/integral_constant/true_false_value.cc
	* tr1/4_metaprogramming/is_abstract
	* tr1/4_metaprogramming/is_abstract/requirements
	* tr1/4_metaprogramming/is_abstract/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/is_abstract/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_abstract/value.cc
	* tr1/4_metaprogramming/is_arithmetic
	* tr1/4_metaprogramming/is_arithmetic/requirements
	* tr1/4_metaprogramming/is_arithmetic/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/is_arithmetic/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_arithmetic/value.cc
	* tr1/4_metaprogramming/is_array
	* tr1/4_metaprogramming/is_array/requirements
	* tr1/4_metaprogramming/is_array/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/is_array/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_array/value.cc
	* tr1/4_metaprogramming/is_base_of
	* tr1/4_metaprogramming/is_base_of/requirements
	* tr1/4_metaprogramming/is_base_of/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/is_base_of/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_base_of/value.cc
	* tr1/4_metaprogramming/is_class
	* tr1/4_metaprogramming/is_class/requirements
	* tr1/4_metaprogramming/is_class/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/is_class/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_class/value.cc
	* tr1/4_metaprogramming/is_compound
	* tr1/4_metaprogramming/is_compound/requirements
	* tr1/4_metaprogramming/is_compound/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/is_compound/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_compound/value.cc
	* tr1/4_metaprogramming/is_const
	* tr1/4_metaprogramming/is_const/requirements
	* tr1/4_metaprogramming/is_const/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/is_const/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_const/value.cc
	* tr1/4_metaprogramming/is_convertible
	* tr1/4_metaprogramming/is_convertible/requirements
	* tr1/4_metaprogramming/is_convertible/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/is_convertible/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_convertible/value.cc
	* tr1/4_metaprogramming/is_empty
	* tr1/4_metaprogramming/is_empty/requirements
	* tr1/4_metaprogramming/is_empty/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/is_empty/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_empty/value.cc
	* tr1/4_metaprogramming/is_enum
	* tr1/4_metaprogramming/is_enum/requirements
	* tr1/4_metaprogramming/is_enum/requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/is_enum/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_enum/value.cc
	* tr1/4_metaprogramming/is_floating_point
	* tr1/4_metaprogramming/is_floating_point/requirements
	* tr1/4_metaprogramming/is_floating_point/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/is_floating_point/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_floating_point/value.cc
	* tr1/4_metaprogramming/is_function
	* tr1/4_metaprogramming/is_function/requirements
	* tr1/4_metaprogramming/is_function/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/is_function/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_function/value.cc
	* tr1/4_metaprogramming/is_fundamental
	* tr1/4_metaprogramming/is_fundamental/requirements
	* tr1/4_metaprogramming/is_fundamental/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/is_fundamental/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_fundamental/value.cc
	* tr1/4_metaprogramming/is_integral
	* tr1/4_metaprogramming/is_integral/requirements
	* tr1/4_metaprogramming/is_integral/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/is_integral/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_integral/value.cc
	* tr1/4_metaprogramming/is_member_function_pointer
	* tr1/4_metaprogramming/is_member_function_pointer/requirements
	* tr1/4_metaprogramming/is_member_function_pointer/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/is_member_function_pointer/
	requirements/typedefs.cc
	* tr1/4_metaprogramming/is_member_function_pointer/value.cc
	* tr1/4_metaprogramming/is_member_object_pointer
	* tr1/4_metaprogramming/is_member_object_pointer/requirements
	* tr1/4_metaprogramming/is_member_object_pointer/
	requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/is_member_object_pointer/
	requirements/typedefs.cc
	* tr1/4_metaprogramming/is_member_object_pointer/value.cc
	* tr1/4_metaprogramming/is_member_pointer
	* tr1/4_metaprogramming/is_member_pointer/requirements
	* tr1/4_metaprogramming/is_member_pointer/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/is_member_pointer/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_member_pointer/value.cc
	* tr1/4_metaprogramming/is_object
	* tr1/4_metaprogramming/is_object/requirements
	* tr1/4_metaprogramming/is_object/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/is_object/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_object/value.cc
	* tr1/4_metaprogramming/is_pod
	* tr1/4_metaprogramming/is_pod/requirements
	* tr1/4_metaprogramming/is_pod/requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/is_pod/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_pod/value.cc
	* tr1/4_metaprogramming/is_pointer
	* tr1/4_metaprogramming/is_pointer/requirements
	* tr1/4_metaprogramming/is_pointer/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/is_pointer/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_pointer/value.cc
	* tr1/4_metaprogramming/is_polymorphic
	* tr1/4_metaprogramming/is_polymorphic/requirements
	* tr1/4_metaprogramming/is_polymorphic/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/is_polymorphic/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_polymorphic/value.cc
	* tr1/4_metaprogramming/is_reference
	* tr1/4_metaprogramming/is_reference/requirements
	* tr1/4_metaprogramming/is_reference/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/is_reference/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_reference/value.cc
	* tr1/4_metaprogramming/is_same
	* tr1/4_metaprogramming/is_same/requirements
	* tr1/4_metaprogramming/is_same/requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/is_same/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_same/value.cc
	* tr1/4_metaprogramming/is_scalar
	* tr1/4_metaprogramming/is_scalar/requirements
	* tr1/4_metaprogramming/is_scalar/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/is_scalar/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_scalar/value.cc
	* tr1/4_metaprogramming/is_signed
	* tr1/4_metaprogramming/is_signed/requirements
	* tr1/4_metaprogramming/is_signed/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/is_signed/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_signed/value.cc
	* tr1/4_metaprogramming/is_union
	* tr1/4_metaprogramming/is_union/requirements
	* tr1/4_metaprogramming/is_union/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/is_union/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_union/value.cc
	* tr1/4_metaprogramming/is_unsigned
	* tr1/4_metaprogramming/is_unsigned/requirements
	* tr1/4_metaprogramming/is_unsigned/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/is_unsigned/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_unsigned/value.cc
	* tr1/4_metaprogramming/is_void
	* tr1/4_metaprogramming/is_void/requirements
	* tr1/4_metaprogramming/is_void/requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/is_void/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_void/value.cc
	* tr1/4_metaprogramming/is_volatile
	* tr1/4_metaprogramming/is_volatile/requirements
	* tr1/4_metaprogramming/is_volatile/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/is_volatile/requirements/typedefs.cc
	* tr1/4_metaprogramming/is_volatile/value.cc
	* tr1/4_metaprogramming/rank
	* tr1/4_metaprogramming/rank/requirements
	* tr1/4_metaprogramming/rank/requirements/explicit_instantiations.cc
	* tr1/4_metaprogramming/rank/requirements/typedefs.cc
	* tr1/4_metaprogramming/rank/value.cc
	* tr1/4_metaprogramming/remove_all_extents
	* tr1/4_metaprogramming/remove_all_extents/requirements
	* tr1/4_metaprogramming/remove_all_extents/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/remove_all_extents/value.cc
	* tr1/4_metaprogramming/remove_const
	* tr1/4_metaprogramming/remove_const/requirements
	* tr1/4_metaprogramming/remove_const/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/remove_const/value.cc
	* tr1/4_metaprogramming/remove_cv
	* tr1/4_metaprogramming/remove_cv/requirements
	* tr1/4_metaprogramming/remove_cv/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/remove_cv/value.cc
	* tr1/4_metaprogramming/remove_extent
	* tr1/4_metaprogramming/remove_extent/requirements
	* tr1/4_metaprogramming/remove_extent/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/remove_extent/value.cc
	* tr1/4_metaprogramming/remove_pointer
	* tr1/4_metaprogramming/remove_pointer/requirements
	* tr1/4_metaprogramming/remove_pointer/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/remove_pointer/value.cc
	* tr1/4_metaprogramming/remove_reference
	* tr1/4_metaprogramming/remove_reference/requirements
	* tr1/4_metaprogramming/remove_reference/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/remove_reference/value.cc
	* tr1/4_metaprogramming/remove_volatile
	* tr1/4_metaprogramming/remove_volatile/requirements
	* tr1/4_metaprogramming/remove_volatile/requirements/
	explicit_instantiations.cc
	* tr1/4_metaprogramming/remove_volatile/value.cc

	Deleted in testsuite:
	* tr1/4_metaprogramming/alignment_of/alignment_of.cc
	* tr1/4_metaprogramming/alignment_of/typedefs.cc
	* tr1/4_metaprogramming/array_modifications
	* tr1/4_metaprogramming/array_modifications/remove_all_extents.cc
	* tr1/4_metaprogramming/array_modifications/remove_extent.cc
	* tr1/4_metaprogramming/composite_type_traits
	* tr1/4_metaprogramming/composite_type_traits/is_arithmetic
	* tr1/4_metaprogramming/composite_type_traits/is_arithmetic/
	is_arithmetic.cc
	* tr1/4_metaprogramming/composite_type_traits/is_arithmetic/typedefs.cc
	* tr1/4_metaprogramming/composite_type_traits/is_compound
	* tr1/4_metaprogramming/composite_type_traits/is_compound/
	is_compound.cc
	* tr1/4_metaprogramming/composite_type_traits/is_compound/typedefs.cc
	* tr1/4_metaprogramming/composite_type_traits/is_fundamental
	* tr1/4_metaprogramming/composite_type_traits/is_fundamental/
	is_fundamental.cc
	* tr1/4_metaprogramming/composite_type_traits/is_fundamental/
	typedefs.cc
	* tr1/4_metaprogramming/composite_type_traits/is_member_pointer
	* tr1/4_metaprogramming/composite_type_traits/is_member_pointer/
	is_member_pointer.cc
	* tr1/4_metaprogramming/composite_type_traits/is_member_pointer/
	typedefs.cc
	* tr1/4_metaprogramming/composite_type_traits/is_object
	* tr1/4_metaprogramming/composite_type_traits/is_object/24808.cc
	* tr1/4_metaprogramming/composite_type_traits/is_object/is_object.cc
	* tr1/4_metaprogramming/composite_type_traits/is_object/typedefs.cc
	* tr1/4_metaprogramming/composite_type_traits/is_scalar
	* tr1/4_metaprogramming/composite_type_traits/is_scalar/is_scalar.cc
	* tr1/4_metaprogramming/composite_type_traits/is_scalar/typedefs.cc
	* tr1/4_metaprogramming/const_volatile_modifications
	* tr1/4_metaprogramming/const_volatile_modifications/add_const.cc
	* tr1/4_metaprogramming/const_volatile_modifications/add_cv.cc
	* tr1/4_metaprogramming/const_volatile_modifications/add_volatile.cc
	* tr1/4_metaprogramming/const_volatile_modifications/remove_const.cc
	* tr1/4_metaprogramming/const_volatile_modifications/remove_cv.cc
	* tr1/4_metaprogramming/const_volatile_modifications/remove_volatile.cc
	* tr1/4_metaprogramming/extent/extent.cc
	* tr1/4_metaprogramming/extent/typedefs.cc
	* tr1/4_metaprogramming/has_nothrow_assign/has_nothrow_assign.cc
	* tr1/4_metaprogramming/has_nothrow_assign/typedefs.cc
	* tr1/4_metaprogramming/has_nothrow_constructor/
	has_nothrow_constructor.cc
	* tr1/4_metaprogramming/has_nothrow_constructor/typedefs.cc
	* tr1/4_metaprogramming/has_nothrow_copy/has_nothrow_copy.cc
	* tr1/4_metaprogramming/has_nothrow_copy/typedefs.cc
	* tr1/4_metaprogramming/has_trivial_assign/has_trivial_assign.cc
	* tr1/4_metaprogramming/has_trivial_assign/typedefs.cc
	* tr1/4_metaprogramming/has_trivial_constructor/
	has_trivial_constructor.cc
	* tr1/4_metaprogramming/has_trivial_constructor/typedefs.cc
	* tr1/4_metaprogramming/has_trivial_copy/has_trivial_copy.cc
	* tr1/4_metaprogramming/has_trivial_copy/typedefs.cc
	* tr1/4_metaprogramming/has_trivial_destructor/
	has_trivial_destructor.cc
	* tr1/4_metaprogramming/has_trivial_destructor/typedefs.cc
	* tr1/4_metaprogramming/has_virtual_destructor/
	has_virtual_destructor.cc
	* tr1/4_metaprogramming/has_virtual_destructor/typedefs.cc
	* tr1/4_metaprogramming/helper_classes
	* tr1/4_metaprogramming/helper_classes/static_definition.cc
	* tr1/4_metaprogramming/helper_classes/true_false_type.cc
	* tr1/4_metaprogramming/helper_classes/true_false_type_typedefs.cc
	* tr1/4_metaprogramming/helper_classes/typedefs.cc
	* tr1/4_metaprogramming/integral_constant/true_false_type.cc
	* tr1/4_metaprogramming/integral_constant/typedefs.cc
	* tr1/4_metaprogramming/is_abstract/is_abstract.cc
	* tr1/4_metaprogramming/is_abstract/typedefs.cc
	* tr1/4_metaprogramming/is_arithmetic/is_arithmetic.cc
	* tr1/4_metaprogramming/is_arithmetic/typedefs.cc
	* tr1/4_metaprogramming/is_array/is_array.cc
	* tr1/4_metaprogramming/is_array/typedefs.cc
	* tr1/4_metaprogramming/is_base_of/is_base_of.cc
	* tr1/4_metaprogramming/is_base_of/typedefs.cc
	* tr1/4_metaprogramming/is_class/is_class.cc
	* tr1/4_metaprogramming/is_class/typedefs.cc
	* tr1/4_metaprogramming/is_compound/is_compound.cc
	* tr1/4_metaprogramming/is_compound/typedefs.cc
	* tr1/4_metaprogramming/is_const/is_const.cc
	* tr1/4_metaprogramming/is_const/typedefs.cc
	* tr1/4_metaprogramming/is_convertible/is_convertible.cc
	* tr1/4_metaprogramming/is_convertible/typedefs.cc
	* tr1/4_metaprogramming/is_empty/is_empty.cc
	* tr1/4_metaprogramming/is_empty/typedefs.cc
	* tr1/4_metaprogramming/is_enum/is_enum.cc
	* tr1/4_metaprogramming/is_enum/typedefs.cc
	* tr1/4_metaprogramming/is_floating_point/is_floating_point.cc
	* tr1/4_metaprogramming/is_floating_point/typedefs.cc
	* tr1/4_metaprogramming/is_function/is_function.cc
	* tr1/4_metaprogramming/is_function/typedefs.cc
	* tr1/4_metaprogramming/is_fundamental/is_fundamental.cc
	* tr1/4_metaprogramming/is_fundamental/typedefs.cc
	* tr1/4_metaprogramming/is_integral/is_integral.cc
	* tr1/4_metaprogramming/is_integral/typedefs.cc
	* tr1/4_metaprogramming/is_member_function_pointer/
	is_member_function_pointer.cc
	* tr1/4_metaprogramming/is_member_function_pointer/typedefs.cc
	* tr1/4_metaprogramming/is_member_object_pointer/
	is_member_object_pointer.cc
	* tr1/4_metaprogramming/is_member_object_pointer/typedefs.cc
	* tr1/4_metaprogramming/is_member_pointer/is_member_pointer.cc
	* tr1/4_metaprogramming/is_member_pointer/typedefs.cc
	* tr1/4_metaprogramming/is_object/is_object.cc
	* tr1/4_metaprogramming/is_object/typedefs.cc
	* tr1/4_metaprogramming/is_pod/is_pod.cc
	* tr1/4_metaprogramming/is_pod/typedefs.cc
	* tr1/4_metaprogramming/is_pointer/is_pointer.cc
	* tr1/4_metaprogramming/is_pointer/typedefs.cc
	* tr1/4_metaprogramming/is_polymorphic/is_polymorphic.cc
	* tr1/4_metaprogramming/is_polymorphic/typedefs.cc
	* tr1/4_metaprogramming/is_reference/is_reference.cc
	* tr1/4_metaprogramming/is_reference/typedefs.cc
	* tr1/4_metaprogramming/is_same/is_same.cc
	* tr1/4_metaprogramming/is_same/typedefs.cc
	* tr1/4_metaprogramming/is_scalar/is_scalar.cc
	* tr1/4_metaprogramming/is_scalar/typedefs.cc
	* tr1/4_metaprogramming/is_signed/is_signed.cc
	* tr1/4_metaprogramming/is_signed/typedefs.cc
	* tr1/4_metaprogramming/is_union/is_union.cc
	* tr1/4_metaprogramming/is_union/typedefs.cc
	* tr1/4_metaprogramming/is_unsigned/is_unsigned.cc
	* tr1/4_metaprogramming/is_unsigned/typedefs.cc
	* tr1/4_metaprogramming/is_void/is_void.cc
	* tr1/4_metaprogramming/is_void/typedefs.cc
	* tr1/4_metaprogramming/is_volatile/is_volatile.cc
	* tr1/4_metaprogramming/is_volatile/typedefs.cc
	* tr1/4_metaprogramming/other_transformations
	* tr1/4_metaprogramming/other_transformations/aligned_storage
	* tr1/4_metaprogramming/other_transformations/aligned_storage/
	aligned_storage.cc
	* tr1/4_metaprogramming/other_transformations/aligned_storage/
	typedefs.cc
	* tr1/4_metaprogramming/pointer_modifications
	* tr1/4_metaprogramming/pointer_modifications/add_pointer.cc
	* tr1/4_metaprogramming/pointer_modifications/remove_pointer.cc
	* tr1/4_metaprogramming/primary_type_categories
	* tr1/4_metaprogramming/primary_type_categories/is_array
	* tr1/4_metaprogramming/primary_type_categories/is_array/is_array.cc
	* tr1/4_metaprogramming/primary_type_categories/is_array/typedefs.cc
	* tr1/4_metaprogramming/primary_type_categories/is_class
	* tr1/4_metaprogramming/primary_type_categories/is_class/is_class.cc
	* tr1/4_metaprogramming/primary_type_categories/is_class/typedefs.cc
	* tr1/4_metaprogramming/primary_type_categories/is_enum
	* tr1/4_metaprogramming/primary_type_categories/is_enum/24808.cc
	* tr1/4_metaprogramming/primary_type_categories/is_enum/is_enum.cc
	* tr1/4_metaprogramming/primary_type_categories/is_enum/typedefs.cc
	* tr1/4_metaprogramming/primary_type_categories/is_floating_point
	* tr1/4_metaprogramming/primary_type_categories/is_floating_point/
	is_floating_point.cc
	* tr1/4_metaprogramming/primary_type_categories/is_floating_point/
	typedefs.cc
	* tr1/4_metaprogramming/primary_type_categories/is_function
	* tr1/4_metaprogramming/primary_type_categories/is_function/24808.cc
	* tr1/4_metaprogramming/primary_type_categories/is_function/
	is_function.cc
	* tr1/4_metaprogramming/primary_type_categories/is_function/typedefs.cc
	* tr1/4_metaprogramming/primary_type_categories/is_integral
	* tr1/4_metaprogramming/primary_type_categories/is_integral/
	is_integral.cc
	* tr1/4_metaprogramming/primary_type_categories/is_integral/typedefs.cc
	* tr1/4_metaprogramming/primary_type_categories/
	is_member_function_pointer
	* tr1/4_metaprogramming/primary_type_categories/
	is_member_function_pointer/is_member_function_pointer.cc
	* tr1/4_metaprogramming/primary_type_categories/
	is_member_function_pointer/typedefs.cc
	* tr1/4_metaprogramming/primary_type_categories/
	is_member_object_pointer
	* tr1/4_metaprogramming/primary_type_categories/
	is_member_object_pointer/is_member_object_pointer.cc
	* tr1/4_metaprogramming/primary_type_categories/
	is_member_object_pointer/typedefs.cc
	* tr1/4_metaprogramming/primary_type_categories/is_pointer
	* tr1/4_metaprogramming/primary_type_categories/is_pointer/
	is_pointer.cc
	* tr1/4_metaprogramming/primary_type_categories/is_pointer/typedefs.cc
	* tr1/4_metaprogramming/primary_type_categories/is_reference
	* tr1/4_metaprogramming/primary_type_categories/is_reference/
	is_reference.cc
	* tr1/4_metaprogramming/primary_type_categories/is_reference/
	typedefs.cc
	* tr1/4_metaprogramming/primary_type_categories/is_union
	* tr1/4_metaprogramming/primary_type_categories/is_union/is_union.cc
	* tr1/4_metaprogramming/primary_type_categories/is_union/typedefs.cc
	* tr1/4_metaprogramming/primary_type_categories/is_void
	* tr1/4_metaprogramming/primary_type_categories/is_void/is_void.cc
	* tr1/4_metaprogramming/primary_type_categories/is_void/typedefs.cc
	* tr1/4_metaprogramming/rank/rank.cc
	* tr1/4_metaprogramming/rank/typedefs.cc
	* tr1/4_metaprogramming/reference_modifications/add_reference.cc
	* tr1/4_metaprogramming/reference_modifications/remove_reference.cc
	* tr1/4_metaprogramming/relationships_between_types
	* tr1/4_metaprogramming/relationships_between_types/is_base_of
	* tr1/4_metaprogramming/relationships_between_types/is_base_of/
	is_base_of.cc
	* tr1/4_metaprogramming/relationships_between_types/is_base_of/
	typedefs.cc
	* tr1/4_metaprogramming/relationships_between_types/is_convertible
	* tr1/4_metaprogramming/relationships_between_types/is_convertible/
	is_convertible.cc
	* tr1/4_metaprogramming/relationships_between_types/is_convertible/
	typedefs.cc
	* tr1/4_metaprogramming/relationships_between_types/is_same
	* tr1/4_metaprogramming/relationships_between_types/is_same/is_same.cc
	* tr1/4_metaprogramming/relationships_between_types/is_same/typedefs.cc
	* tr1/4_metaprogramming/type_properties
	* tr1/4_metaprogramming/type_properties/alignment_of
	* tr1/4_metaprogramming/type_properties/alignment_of/alignment_of.cc
	* tr1/4_metaprogramming/type_properties/alignment_of/typedefs.cc
	* tr1/4_metaprogramming/type_properties/extent
	* tr1/4_metaprogramming/type_properties/extent/extent.cc
	* tr1/4_metaprogramming/type_properties/extent/typedefs.cc
	* tr1/4_metaprogramming/type_properties/has_nothrow_assign
	* tr1/4_metaprogramming/type_properties/has_nothrow_assign/
	has_nothrow_assign.cc
	* tr1/4_metaprogramming/type_properties/has_nothrow_assign/typedefs.cc
	* tr1/4_metaprogramming/type_properties/has_nothrow_constructor
	* tr1/4_metaprogramming/type_properties/has_nothrow_constructor/
	has_nothrow_constructor.cc
	* tr1/4_metaprogramming/type_properties/has_nothrow_constructor/
	typedefs.cc
	* tr1/4_metaprogramming/type_properties/has_nothrow_copy
	* tr1/4_metaprogramming/type_properties/has_nothrow_copy/
	has_nothrow_copy.cc
	* tr1/4_metaprogramming/type_properties/has_nothrow_copy/typedefs.cc
	* tr1/4_metaprogramming/type_properties/has_trivial_assign
	* tr1/4_metaprogramming/type_properties/has_trivial_assign/
	has_trivial_assign.cc
	* tr1/4_metaprogramming/type_properties/has_trivial_assign/typedefs.cc
	* tr1/4_metaprogramming/type_properties/has_trivial_constructor
	* tr1/4_metaprogramming/type_properties/has_trivial_constructor/
	has_trivial_constructor.cc
	* tr1/4_metaprogramming/type_properties/has_trivial_constructor/
	typedefs.cc
	* tr1/4_metaprogramming/type_properties/has_trivial_copy
	* tr1/4_metaprogramming/type_properties/has_trivial_copy/
	has_trivial_copy.cc
	* tr1/4_metaprogramming/type_properties/has_trivial_copy/typedefs.cc
	* tr1/4_metaprogramming/type_properties/has_trivial_destructor
	* tr1/4_metaprogramming/type_properties/has_trivial_destructor/
	has_trivial_destructor.cc
	* tr1/4_metaprogramming/type_properties/has_trivial_destructor/
	typedefs.cc
	* tr1/4_metaprogramming/type_properties/has_virtual_destructor
	* tr1/4_metaprogramming/type_properties/has_virtual_destructor/
	has_virtual_destructor.cc
	* tr1/4_metaprogramming/type_properties/has_virtual_destructor/
	typedefs.cc
	* tr1/4_metaprogramming/type_properties/is_abstract
	* tr1/4_metaprogramming/type_properties/is_abstract/is_abstract.cc
	* tr1/4_metaprogramming/type_properties/is_abstract/typedefs.cc
	* tr1/4_metaprogramming/type_properties/is_const
	* tr1/4_metaprogramming/type_properties/is_const/is_const.cc
	* tr1/4_metaprogramming/type_properties/is_const/typedefs.cc
	* tr1/4_metaprogramming/type_properties/is_empty
	* tr1/4_metaprogramming/type_properties/is_empty/is_empty.cc
	* tr1/4_metaprogramming/type_properties/is_empty/typedefs.cc
	* tr1/4_metaprogramming/type_properties/is_pod
	* tr1/4_metaprogramming/type_properties/is_pod/is_pod.cc
	* tr1/4_metaprogramming/type_properties/is_pod/typedefs.cc
	* tr1/4_metaprogramming/type_properties/is_polymorphic
	* tr1/4_metaprogramming/type_properties/is_polymorphic/24809.cc
	* tr1/4_metaprogramming/type_properties/is_polymorphic/
	is_polymorphic.cc
	* tr1/4_metaprogramming/type_properties/is_polymorphic/typedefs.cc
	* tr1/4_metaprogramming/type_properties/is_signed
	* tr1/4_metaprogramming/type_properties/is_signed/is_signed.cc
	* tr1/4_metaprogramming/type_properties/is_signed/typedefs.cc
	* tr1/4_metaprogramming/type_properties/is_unsigned
	* tr1/4_metaprogramming/type_properties/is_unsigned/is_unsigned.cc
	* tr1/4_metaprogramming/type_properties/is_unsigned/typedefs.cc
	* tr1/4_metaprogramming/type_properties/is_volatile
	* tr1/4_metaprogramming/type_properties/is_volatile/is_volatile.cc
	* tr1/4_metaprogramming/type_properties/is_volatile/typedefs.cc
	* tr1/4_metaprogramming/type_properties/rank
	* tr1/4_metaprogramming/type_properties/rank/rank.cc
	* tr1/4_metaprogramming/type_properties/rank/typedefs.cc

2007-04-30  Hans-Peter Nilsson  <hp@axis.com>

	* testsuite/lib/libstdc++.exp (v3_target_compile_as_c): Correct
	regexp to filter out -nostdinc++.

2007-04-30  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/30449 (equal)
	* include/bits/stl_algobase.h (struct __niter_base): Add.
	(copy(_II, _II, _OI), copy_backward(_BI1, _BI1, _BI2),
	fill(_ForwardIterator, _ForwardIterator, const _Tp&),
	fill_n(_OI, _Size, const _Tp&), equal(_II1, _II1, _II2)):
	Use it.
	(struct __copy_normal, __copy_backward_normal,
	struct __fill_normal, struct __fill_n_normal): Remove.
	(struct __equal, struct __equal_aux): Add.
	* include/bits/stl_iterator.h: Add _Iterator_type typedef.

	* include/bits/stl_algobase.h (__fill_aux(wchar_t*,
	wchar_t*, wchar_t), __fill_n_aux(wchar_t*, _Size, wchar_t)):
	Remove.

	* testsuite/23_containers/requirements/sequences/dr438/vector/
	constructor_1_neg.cc: Adjust dg-error line number.
	* testsuite/23_containers/requirements/sequences/dr438/vector/
	constructor_2_neg.cc: Likewise.

2007-04-30  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/type_traits (is_pod): Use __is_pod.
	* testsuite/tr1/4_metaprogramming/type_properties/
	has_trivial_destructor/has_trivial_destructor.cc: Adjust.
	* testsuite/tr1/4_metaprogramming/type_properties/
	has_nothrow_constructor/has_nothrow_constructor.cc: Likewise.
	* testsuite/tr1/4_metaprogramming/type_properties/
	has_trivial_constructor/has_trivial_constructor.cc: Likewise.
	* testsuite/tr1/4_metaprogramming/type_properties/
	is_pod/is_pod.cc: Likewise.

2007-04-29  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/localefwd.h: Remove redundant inline qualifiers.
	(__check_facet): Move...
	* include/bits/basic_ios.h: ... here.
	(widen(char), narrow(char_type, char)): Define inline.
	* include/bits/basic_ios.tcc (widen(char), narrow(char_type, char)):
	Remove.

2007-04-27  Paolo Carlini  <pcarlini@suse.de>

	DR 438, [DR].
	* include/bits/basic_string.h (_S_construct_aux(_InIterator,
	_InIterator, const _Alloc&, __true_type)): Do not cast the
	second argument.
	* include/ext/rc_string_base.h (_S_construct_aux(_Integer,
	_Integer, const _Alloc&, std::__true_type)): Likewise.
	* include/ext/sso_string_base.h (_M_construct_aux(_InIterator,
	_InIterator, std::__true_type)): Likewise.
	* include/bits/stl_deque.h (_M_initialize_dispatch(_Integer,
	_Integer, __true_type)): Cast the first argument.
	(_M_assign_dispatch(_Integer, _Integer, __true_type)): Do
	not cast the arguments.
	(_M_insert_dispatch(iterator, _Integer, _Integer, __true_type)):
	Likewise.
	* include/bits/stl_list.h (_M_initialize_dispatch(_Integer,
	_Integer, __true_type)): Likewise.
	(_M_assign_dispatch(_Integer, _Integer, __true_type)): Do
	not cast both arguments.
	* include/bits/stl_bvector.h (_M_initialize_dispatch(_Integer,
	_Integer, __true_type)): Cast the first argument.
	(_M_assign_dispatch(_Integer, _Integer, __true_type)): Do not
	cast the arguments.
	* include/bits/stl_vector.h (_M_initialize_dispatch(_Integer,
	_Integer, __true_type)): Cast the first argument.
	(_M_assign_dispatch(_Integer, _Integer, __true_type)): Do not
	cast the arguments.
	(_M_insert_dispatch(iterator, _Integer, _Integer, __true_type)):
	Likewise.
	* testsuite/21_strings/basic_string/requirements/dr438/
	constructor.cc: New.
	* testsuite/ext/vstring/requirements/dr438/constructor.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/deque/
	assign_neg.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/deque/
	constructor.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/deque/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/deque/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/deque/
	insert_neg.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/list/
	assign_neg.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/list/
	constructor.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/list/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/list/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/list/
	insert_neg.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/vector/
	assign_neg.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/vector/
	constructor.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/vector/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/vector/
	constructor_1_neg.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/vector/
	insert_neg.cc: Likewise.
	* testsuite/23_containers/requirements/sequences/dr438/vector/
	bool/constructor.cc: Likewise.
	* docs/html/ext/howto.html: Add an entry for DR 438.

2007-04-25  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/locale_classes.h: Remove redundant inline specifiers.
	* include/bits/ios_base.h: Likewise.
	* testsuite/27_io/ios_base/cons/assign_neg.cc: Adjust dg-error line
	numbers.
	* testsuite/27_io/ios_base/cons/copy_neg.cc: Likewise.

2007-04-24  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/locale_facets.h (class collate, class collate_byname):
	Move...
	* include/bits/locale_classes.h: ... here.
	* include/bits/locale_facets.tcc (locale::combine, locale::operator(),
	has_facet, use_facet, collate::_M_compare, collate::_M_transform,
	collate::do_compare, collate::do_transform, collate::do_hash): Move...
	* include/bits/locale_classes.tcc: ... here, new.
	* include/Makefile.am: Add.
	* testsuite/util/testsuite_abi.h: Include <locale>.
	* include/std/locale: Tweak.
	* include/std/istream: Likewise.
	* include/std/ostream: Likewise.
	* include/bits/codecvt.h: Likewise.
	* include/Makefile.in: Regenerate.

	* include/bits/codecvt.h: Adjust extern template declarations.
	* include/bits/ostream_insert.h: Likewise.
	* include/bits/ostream.tcc: Likewise.

	* include/bits/locale_facets.h: Do not include <bits/codecvt.h>.
	* include/std/fstream: Do it here.
	* include/bits/locale_facets_nonio.h: Likewise.

2007-04-23  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/locale_facets.h (class time_base,
	struct __timepunct_cache, class __timepunct, class time_get,
	class time_get_byname, class time_put, class time_put_byname,
	class money_base, struct __moneypunct_cache, class moneypunct,
	class moneypunct_byname, class money_get, class money_put,
	struct messages_base, class messages, class messages_byname): Move...
	* include/bits/locale_facets_nonio.h: ... here.
	* include/bits/locale_facets.tcc
	(struct __use_cache<__moneypunct_cache<> >,
	__moneypunct_cache<>::_M_cache, money_get<>::_M_extract,
	money_get<>::__do_get, money_get<>::do_get, money_put<>::_M_insert,
	money_put<>::__do_put, money_put<>::do_put, time_get<>::do_date_order,
	time_get<>::_M_extract_via_format, time_get<>::_M_extract_num,
	time_get<>::_M_extract_name, time_get<>::do_get_time,
	time_get<>::do_get_date, time_get<>::do_get_weekday,
	time_get<>::do_get_monthname, time_get<>::do_get_year, time_put<>::put,
	time_put<>::do_put): Move...
	* include/bits/locale_facets_nonio.tcc: ... here.
	* include/Makefile.am: Add.
	* include/std/locale: Adjust includes.
	* include/std/fstream: Likewise.
	* include/std/istream: Likewise.
	* include/std/ostream: Likewise.
	* include/Makefile.in: Regenerate.

2007-04-23  Nathan Sidwell  <nathan@codesourcery.com>

	* scripts/testsuite_flags.in: Add --build-cc option.
	* testsuite/lib/libstdc++.exp (libstdc++_init): Set cc.  Fix typo
	in previous change.
	(v3_target_compile_as_c): Use cc.

2007-04-22  Mark Mitchell  <mark@codesourcery.com>

	* testsuite/lib/libstdc++.exp (libstdc++_init): Use the same flags
	for remote host testing we use for local host testing.  Copy all
	testsuite headers to the remote host
	(v3_target_compile_as_c): Use remote_exec, not just exec.

2007-04-22  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/functional: Formatting fixes.

2007-04-22  Paolo Carlini  <pcarlini@suse.de>

	* include/ext/concurrence.h: Do not include <cstdlib>, use
	__builtin_abort.
	* include/debug/debug.h: Likewise.
	* include/tr1/memory: Likewise.
	* include/tr1/boost_shared_ptr.h: Likewise.
	* include/tr1/functional: Likewise.

2007-04-22  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/locale_facets.tcc: Do not include <typeinfo>.
	* testsuite/27_io/basic_ios/imbue/14072.cc: Do it here.
	* testsuite/27_io/basic_ios/cons/char/3.cc: Likewise.
	* testsuite/27_io/basic_istream/sentry/pod/1.cc: Likewise.
	* testsuite/27_io/basic_ostream/sentry/pod/1.cc: Likewise.
	* testsuite/21_strings/basic_string/inserters_extractors/
	pod/10081-in.cc: Likewise.
	* testsuite/21_strings/basic_string/inserters_extractors/
	pod/10081-out.cc: Likewise.
	* testsuite/22_locale/locale/cons/2.cc: Likewise.
	* testsuite/22_locale/locale/cons/unicode.cc: Likewise.
	* testsuite/22_locale/numpunct/members/pod/2.cc: Likewise.
	* testsuite/22_locale/global_templates/1.cc: Likewise.

2007-04-19  Joseph Myers  <joseph@codesourcery.com>

	* configure.ac: Allow both powerpc*-*-linux* and powerpc*-*-gnu*
	for long double compatibility.
	* configure: Regenerate.
	* src/complex_io.cc, src/istream-inst.cc, src/ostream-inst.cc:
	Condition some _GLIBCXX_LDBL_COMPAT calls on _GLIBCXX_USE_WCHAR_T.

2007-04-14  Steve Ellcey  <sje@cup.hp.com>

	* configure.ac: Change how LIBSUPCXX_PICFLAGS is set.
	* configure: Regenerate.

2007-04-14  Paolo Carlini  <pcarlini@suse.de>

	* config/locale/generic/c_locale.cc: Include <limits>.

2007-04-13  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/31556
	* include/bits/stl_algobase.h (equal(_InputIterator1, _InputIterator1,
	_InputIterator2, _BinaryPredicate), mismatch(_InputIterator1,
	_InputIterator1, _InputIterator2, _BinaryPredicate)): Convert
	predicate return to bool.
	* include/bits/stl_algo.h (__find_if(_InputIterator, _InputIterator,
	_Predicate, input_iterator_tag), search(_ForwardIterator1,
	_ForwardIterator1, _ForwardIterator2, _ForwardIterator2,
	_BinaryPredicate), __search_n(_ForwardIterator, _ForwardIterator,
	_Integer, const _Tp&, _BinaryPredicate, std::forward_iterator_tag),
	__search_n(_RandomAccessIter, _RandomAccessIter, _Integer, const _Tp&,
	_BinaryPredicate, std::random_access_iterator_tag),
	search_n(_ForwardIterator, _ForwardIterator, _Integer, const _Tp&,
	_BinaryPredicate), remove_copy_if(_InputIterator, _InputIterator,
	_OutputIterator, _Predicate), __unique_copy(_ForwardIterator,
	_ForwardIterator, _OutputIterator, _BinaryPredicate,
	forward_iterator_tag, output_iterator_tag),
	__unique_copy(_InputIterator, _InputIterator, _OutputIterator,
	_BinaryPredicate, input_iterator_tag, output_iterator_tag),
	__unique_copy(_InputIterator, _InputIterator, _OutputIterator,
	_BinaryPredicate, input_iterator_tag, output_iterator_tag),
	__unique_copy(_InputIterator, _InputIterator, _ForwardIterator,
	_BinaryPredicate, input_iterator_tag, forward_iterator_tag),
	unique(_ForwardIterator, _ForwardIterator, _BinaryPredicate),
	__partition(_BidirectionalIterator, _BidirectionalIterator, _Predicate,
	bidirectional_iterator_tag), binary_search(_ForwardIterator,
	_ForwardIterator, const _Tp&, _Compare),
	next_permutation(_BidirectionalIterator, _BidirectionalIterator,
	_Compare), prev_permutation(_BidirectionalIterator,
	_BidirectionalIterator, _Compare)): Likewise.

2007-04-13  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/31554
	* include/bits/stl_algo.h (stable_partition): Convert __buf.size()
	to _DistanceType.

2007-04-13  Paolo Carlini  <pcarlini@suse.de>

	* include/ext/numeric_traits.h: Do not include <limits>.
	(__numeric_traits_integer::__is_signed, __digits): Add.
	(__numeric_traits_floating::__digits10, __max_exponent10): Add.
	* src/istream.cc (ignore<char>(streamsize, int_type), operator>>
	(basic_istream<char>&, char*), ignore<wchar_t>(streamsize,
	int_type)): Use the latter.
	* src/compatibility.cc (ignore<char>(streamsize),
	ignore<wchar_t>(streamsize)): Likewise.
	* include/ext/vstring_util.h (__vstring_utility<>::_S_compare):
	Likewise.
	* include/bits/stl_memory.h (__get_temporary_buffer): Likewise.
	* include/bits/stl_algobase.h (lexicographical_compare(const char*,
	const char*, const char*, const char*)): Likewise.
	* include/bits/locale_facets.tcc (num_get<>::_M_extract_int(_InIter,
	_InIter, ios_base&, ios_base::iostate&, _ValueT&),
	num_put<>::_M_insert_int(_OutIter, ios_base&, _CharT, _ValueT),
	num_put<>::_M_insert_float(_OutIter, ios_base&, _CharT, char,
	_ValueT), collate<>::do_hash(const _CharT*, const _CharT*)): Likewise.
	* include/bits/basic_string.h (basic_string<>::_S_compare): Likewise.
	* include/bits/istream.tcc (operator>>(short&), operator>>(int&),
	ignore(streamsize), ignore(streamsize, int_type), operator>>
	(basic_istream<>&, _CharT*)): Likewise.
	* include/bits/stl_bvector.h (vector<bool>::max_size): Likewise.
	* include/tr1/functional_hash.h (struct hash<long double>): Likewise.
	* include/std/istream: Do not include <limits>.
	* include/tr1/cmath: Include <limits>.
	* testsuite/23_containers/vector/bool/capacity/29134.cc: Likewise.
	* testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc:
	Likewise.
	* testsuite/27_io/basic_istream/extractors_arithmetic/char/13.cc:
	Likewise.
	* testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/12.cc:
	Likewise.
	* testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/13.cc:
	Likewise.
	* testsuite/27_io/ios_base/storage/2.cc: Likewise.

	* include/tr1/hashtable: Do not include the whole <iterator>.

2007-04-11  Paolo Carlini  <pcarlini@suse.de>

	* config/locale/gnu/c_locale.h: Do not include <langinfo.h>
	and <iconv.h>.
	* config/locale/gnu/c++locale_internal.h: Include <langinfo.h>.

2007-04-11  Paolo Carlini  <pcarlini@suse.de>

	* include/std/istream (class basic_istream<>): Remove unneded friend
	declarations.

2007-04-11  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/22_locale/num_get/get/wchar_t/1.cc: Initialize v.

2007-04-11  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/locale_facets.tcc (num_get<>::do_get(iter_type,
	ios_base&, ios_base::iostate&, void*&)): Fix for sizeof(void*)
	> sizeof(unsigned long).

	* testsuite/22_locale/num_get/get/char/1.cc: Fix void* test.
	* testsuite/22_locale/num_get/get/wchar_t/1.cc: Likewise.

	* testsuite/22_locale/num_put/put/char/1.cc: Tweak comment.
	* testsuite/22_locale/num_put/put/wchar_t/1.cc: Likewise.

2007-04-11  Zack Weinberg  <zackw@panix.com>

	* include/std/iosfwd: Do not include <bits/c++locale.h> and
	<bits/functexcept.h>.

2007-04-10  Benjamin Kosnik  <bkoz@redhat.com>

	* include/ext/pb_ds/detail/resize_policy/
	cc_hash_max_collision_check_resize_trigger_imp.hpp: Qualify
	namespace std members.
	* include/ext/pb_ds/detail/list_update_policy/
	counter_lu_metadata.hpp: Same.
	* include/ext/throw_allocator.h: Same.
	* include/ext/pod_char_traits.h: Same.
	* include/ext/malloc_allocator.h: Same.
	* libsupc++/del_op.cc: Same, simplify.

	* include/bits/c++config: Adjust macro name.

	* include/c_global/cstring: Alphabetize.
	* include/c_global/cwctype: Same.

2007-04-10  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/cmath: Include <bits/stl_algobase.h> instead of
	the whole <algorithm>.

2007-04-10  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/type_traits (__is_function_helper): New, uses
	variadic templates.
	(is_function): Forward to the latter.
	* testsuite/tr1/4_metaprogramming/primary_type_categories/
	is_function/is_function.cc: Add test.

2007-04-10  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/28277 (partial: vstring bits)
	* include/bits/ostream_insert.h: New.
	* include/Makefile.am: Add.
	* include/ext/vstring.h (operator<<(basic_ostream<>&,
	const __versa_string<>&): Forward to __ostream_insert.
	* include/bits/basic_string.h (operator<<(basic_ostream<>&,
	const string<>&)): Likewise.
	* include/std/ostream (operator<<(basic_ostream<>&, _CharT),
	operator<<(basic_ostream<char,>&, char), operator<<(basic_ostream<>&,
	const _CharT*), operator<<(basic_ostream<char,>&, const char*)):
	Likewise.
	* include/ext/vstring.tcc (operator<<(basic_ostream<>&,
	const __versa_string<>&)): Remove.
	(class basic_ostream): Remove friend declarations.
	(basic_ostream<>::_M_write(char_type, streamsize),
	_M_insert(const char_type*, streamsize)): Remove.
	* include/bits/ostream.tcc (_M_insert(const char_type*, streamsize)):
	Remove definition.
	(operator<<(basic_ostream<>&, const char*)): Use __ostream_insert.
	* config/abi/pre/gnu.ver: Adjust.
	* src/ostream-inst.cc: Add __ostream_insert instantiations.
	* include/bits/locale_facets.h (__pad<>::_S_pad): Remove __num
	parameter.
	* include/bits/locale_facets.tcc (__pad<>::_S_pad): Adjust.
	(num_put<>::_M_pad(_CharT, streamsize, ios_base&, _CharT*,
	const _CharT*, int&)): Likewise.
	* include/Makefile.in: Rebuild.
	* testsuite/ext/vstring/inserters_extractors/char/28277.cc: New.
	* testsuite/ext/vstring/inserters_extractors/wchar_t/28277.cc: New.

	* include/ext/vstring_util.h: Do not include the whole <locale>.
	* include/ext/vstring.tcc (operator>>(basic_istream<>&,
	__versa_string<>&, getline(basic_istream<>&, __versa_string<>&,
	_CharT)): Tweak to refer to ios_base as a base of istream; do not
	refer to non-standard types of istream.
	* include/bits/istream.tcc (operator>>(basic_istream<>&, _CharT*),
	ws(basic_istream<>&)): Do not refer to non-standard types of istream.
	* include/std/bitset (operator>>(std::basic_istream<>&, bitset<>&)):
	Avoid using basic_streambuf<>*.

	* include/bits/istream.tcc (operator>>(basic_istream<>&,
	basic_string<>&), getline(basic_istream<>&, basic_string<>&, _CharT)):
	Move...
	* include/bits/basic_string.tcc: ... here; tweak to refer to ios_base
	as a base of istream; do not refer to non-standard types of istream.
	* include/std/string: Tweak includes.

	* include/ext/type_traits.h (__is_null_pointer): Add.
	* include/ext/rc_string_base.h: Use it.
	* include/ext/sso_string_base.h: Likewise.
	* include/bits/basic_string.tcc (__is_null_pointer): Remove, use
	the above.
	* include/ext/vstring_util.h (__vstring_utility<>::_S_is_null_pointer):
	Remove.

2007-04-09  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/type_traits_fwd.h (__is_union_or_class): Remove.
	* include/tr1/type_traits (struct __in_array,
	struct __is_union_or_class, struct __is_union_or_class_helper,
	struct __is_empty_helper, struct __is_polymorphic_helper):
	Remove.
	(struct is_enum): Use __is_enum.
	(struct is_union): Use __is_union.
	(struct is_class): Use __is_class.
	(struct is_function): Adjust.
	(struct is_empty): Use __is_empty.
	(struct is_polymorphic): Use __is_polymorphic.
	(struct is_abstract): Use __is_abstract.
	(struct has_virtual_destructor): Use __has_virtual_destructor.
	(struct __is_base_of_helper): Use __is_base_of.
	* testsuite/tr1/4_metaprogramming/composite_type_traits/
	is_union_or_class/typedefs.cc: Remove.
	* testsuite/tr1/4_metaprogramming/composite_type_traits/
	is_union_or_class/is_union_or_class.cc: Likewise.
	* testsuite/tr1/4_metaprogramming/primary_type_categories/
	is_class/typedefs.cc: New.
	* testsuite/tr1/4_metaprogramming/primary_type_categories/
	is_class/is_class.cc: Likewise.
	* testsuite/tr1/4_metaprogramming/primary_type_categories/
	is_union/typedefs.cc: Likewise.
	* testsuite/tr1/4_metaprogramming/primary_type_categories/
	is_union/is_union.cc: Likewise.
	* testsuite/tr1/4_metaprogramming/type_properties/
	has_virtual_destructor/typedefs.cc: Likewise.
	* testsuite/tr1/4_metaprogramming/type_properties/
	has_virtual_destructor/has_virtual_destructor.cc: Likewise.
	* testsuite/util/testsuite_tr1.h (class VirtualDestructorClass): Add.
	* testsuite/tr1/4_metaprogramming/type_properties/is_polymorphic/
	is_polymorphic.cc: Add test.

2007-04-08  Alexey Beshenov  <bav.272304@gmail.com>

	PR libstdc++/31511
	* include/c_global/cmath.tcc (__cmath_power): Use _Tp(1).
	* include/c_std/cmath.tcc (__cmath_power): Likewise.

2007-04-06  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/31117
	* config/locale/gnu/c_locale.cc (__convert_to_v): Do not use errno,
	just check that the value is finite.
	* config/locale/generic/c_locale.cc (__convert_to_v): Likewise.

2007-04-06  Paolo Carlini  <pcarlini@suse.de>

	* include/ext/type_traits.h (__numeric_traits): Move...
	* include/ext/numeric_traits.h: ... here.
	* include/Makefile.am: Add.
	* include/ext/pb_ds/detail/type_utils.hpp: Include
	<ext/numeric_traits.h> too.
	* include/tr1/random: Likewise.
	* testsuite/ext/type_traits/numeric_traits.cc: Move...
	* testsuite/ext/numeric_traits/numeric_traits.cc: ... here.
	* include/Makefile.in: Regenerate.

2007-04-04  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/valarray_array.h (__valarray_default_construct(_Tp*,
	_Tp*)): Use __is_scalar instead of __is_pod.

2007-04-03  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algobase.h (__copy_aux(_II, _II, _OI),
	__copy_backward_aux(_BI1, _BI1, _BI2)): Use __is_pod.
	* include/bits/stl_deque.h (deque<>::_M_destroy_data(iterator,
	iterator, const std::allocator<>&)): Use __has_trivial_constructor.
	(deque<>::_M_destroy_data_dispatch): Remove.
	* include/bits/stl_uninitialized.h (uninitialized_copy(_InputIterator,
	_InputIterator, _ForwardIterator), uninitialized_fill(_ForwardIterator,
	_ForwardIterator, const _Tp&), uninitialized_fill_n(_ForwardIterator,
	_Size, const _Tp&)): Use __is_pod.
	* include/bits/stl_tempbuf.h (_Temporary_buffer::
	_Temporary_buffer(_ForwardIterator, _ForwardIterator)): Use __is_pod.
	(_Temporary_buffer::_M_initialize_buffer): Remove.
	* include/bits/stl_construct.h (_Destroy(_ForwardIterator,
	_ForwardIterator)): Use __has_trivial_destructor.
	(__destroy_aux): Remove.

2007-04-03  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_map.h (map<>::insert(iterator, const value_type&):
	Uglify parameter.

2007-04-03  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/31440
	* include/bits/stl_tree.h (_M_lower_bound(_Link_type, _Link_type,
	const _Key&), _M_upper_bound(_Link_type, _Link_type, const _Key&)):
	Add.
	(_M_equal_range(const _Key&) const): Remove.
	(lower_bound(const key_type&), lower_bound(const key_type&) const,
	upper_bound(const key_type&), upper_bound(const key_type&) const,
	equal_range(const key_type&), equal_range(const key_type&) const):
	Adjust.
	(find(const _Key&), find(const _Key&) const): Tweak.
	* testsuite/23_containers/map/operations/31440.cc: New.

2007-04-02  Matthew Levine  <gcc@severeweblint.org>
	    Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/31370
	* include/bits/stl_bvector.h (vector<bool>::max_size): Fix.
	(vector<bool>::_M_check_len): Add.
	* include/bits/vector.tcc (_M_fill_insert(iterator, size_type, bool),
	_M_insert_range(iterator, _ForwardIterator, _ForwardIterator,
	std::forward_iterator_tag), _M_insert_aux(iterator, bool)): Use it.
	* testsuite/23_containers/vector/bool/modifiers/insert/31370.cc: New.
	* testsuite/23_containers/vector/bool/capacity/29134.cc: Adjust.

	* include/bits/stl_vector.h (vector<>::_M_check_len): Add.
	* include/bits/vector.tcc (_M_insert_aux(iterator, const _Tp&),
	_M_fill_insert(iterator, size_type, const value_type&),
	_M_range_insert(iterator, _ForwardIterator, _ForwardIterator,
	std::forward_iterator_tag)): Use it.

2007-04-02  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/31401 (vstring bits)
	* include/ext/vstring.tcc (find(const _CharT*, size_type,
	size_type)): Avoid unsigned overflow.

2007-04-02  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/locale_facets.tcc (num_put<>::do_put(iter_type,
	ios_base&, char_type, const void*)): Fix for sizeof(const void*)
	> sizeof(unsigned long).

2007-04-01  Andreas Tobler  <a.tobler@schweiz.org>

	* include/tr1/poly_laguerre.tcc: Missing s/__alpha/__alpha1, line 278.

2007-04-01  Richard Henderson  <rth@redhat.com>

	* include/tr1/poly_laguerre.tcc: s/__alpha/__alpha1/g.
	* include/tr1/ell_integral.tcc: Likewise.

2007-03-31  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_bvector.h (_M_fill_insert(iterator, size_type,
	bool), _M_insert_range(iterator, _ForwardIterator, _ForwardIterator,
	std::forward_iterator_tag), _M_insert_aux(iterator, bool)): Move
	out of line...
	* include/bits/vector.tcc: ... here.

2007-03-30  Paolo Carlini  <pcarlini@suse.de>

	PR c++/26099
	* include/bits/cpp_type_traits.h (struct __is_pod, struct __is_empty):
	Remove.
	* include/bits/valarray_array.h: Adjust.
	* include/bits/allocator.h: Likewise.
	* include/bits/stl_tree.h: Likewise.

2007-03-30  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/31401
	* include/bits/basic_string.tcc (find(const _CharT*, size_type,
	size_type)): Avoid unsigned overflow.
	* testsuite/21_strings/basic_string/find/char/4.cc: New.
	* testsuite/21_strings/basic_string/find/wchar_t/4.cc: Likewise.

2007-03-27  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/fstream.tcc (basic_filebuf<>::underflow):
	Don't call codecvt::in at all if _M_ext_next >= _M_ext_end.
	* testsuite/27_io/basic_filebuf/underflow/char/3.cc: New.

2007-03-26  Benjamin Kosnik  <bkoz@redhat.com>

	* include/c_compatibility/complex.h: Without
	__GXX_EXPERIMENTAL_CXX0X__ include_next complex.h.
	* include/c_compatibility/fenv.h: Same.
	* include/c_compatibility/inttypes.h: Same.
	* include/c_compatibility/stdbool.h: Same.
	* include/c_compatibility/stdint.h: Same.
	* include/c_compatibility/tgmath.h: Same.

	* include/tr1/cinttypes: Use include_next.
	* include/tr1/cstdint: Same.
	* include/tr1/cstdbool: Same.

	* acinclude.m4 (GLIBCXX_ENABLE_C99): Add check for tgmath.h
	* configure: Regenerate.
	* config.h.in: Same.

2007-03-25  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/functional: Formatting fixes.

2007-03-23  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/27_io/basic_ostream/inserters_arithmetic/wchar_t/4402.cc:
	Likewise use std::numeric_limits<>::max().
	* testsuite/27_io/basic_ostream/inserters_arithmetic/char/4402.cc:
	Minor tweaks.

2007-03-23  Hans-Peter Nilsson  <hp@axis.com>

	* testsuite/27_io/basic_ostream/inserters_arithmetic/char/4402.cc
	(test02): Use std::numeric_limits<>::max() to get suitable large
	values.

2007-03-22  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/21_strings/headers/cstdlib/functions_std.cc: Without
	C99 support, _GLIBCXX_USE_WCHAR_T not defined, so
	dg-require-c-std.
	* testsuite/tr1/6_containers/headers/functional/synopsis.cc: Same.
	* testsuite/27_io/headers/iostream/synopsis.cc: Same.
	* testsuite/27_io/headers/streambuf/types_std.cc: Same.
	* testsuite/27_io/headers/sstream/types_std.cc: Same.
	* testsuite/27_io/headers/ostream/types_std.cc: Same.
	* testsuite/27_io/headers/istream/types_std.cc: Same.
	* testsuite/27_io/headers/iostream/types_std.cc: Same.
	* testsuite/27_io/headers/fstream/types_std.cc: Same.
	* testsuite/21_strings/headers/string/types_std.cc: Same.
	* testsuite/21_strings/headers/cwctype/functions_std.cc: Same.
	* testsuite/21_strings/headers/cwctype/types_std.cc: Same.
	* testsuite/21_strings/headers/cwchar/functions_std.cc: Same.
	* testsuite/21_strings/headers/cwchar/types_std.cc: Same.

	* include/Makefile.am (c_compatibility_headers): Add fenv.h.
	* include/Makefile.in: Regenerate.
	* configure.host: Update comment.

	* include/tr1/cfenv: Use include_next.

2007-03-19  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/tuple (get(_Tuple_impl<>&, get(const _Tuple_impl<>&):
	Rename as __get_helper.
	(get(tuple<>&, get(const tuple<>&)): Forward to the latter.

2007-03-19  Benjamin Kosnik  <bkoz@redhat.com>

	* docs/doxygen/user.cfg.in: Update for new includes, macros.

2007-03-18  Mark Mitchell  <mark@codesourcery.com>

	* libsupc++/array_type_info.cc: Likewise.
	* libsupc++/bad_cast.cc: Likewise.
	* libsupc++/bad_typeid.cc: Likewise.
	* libsupc++/class_type_info.cc: Likewise.
	* libsupc++/dyncast.cc: Likewise.
	* libsupc++/enum_type_info.cc: Likewise.
	* libsupc++/function_type_info.cc: Likewise.
	* libsupc++/fundamental_type_info.cc: Likewise.
	* libsupc++/pbase_type_info.cc: Likewise.
	* libsupc++/pmem_type_info.cc: Likewise.
	* libsupc++/pointer_type_info.cc: Likewise.
	* libsupc++/si_class_type_info.cc: Likewise.
	* libsupc++/vmi_class_type_info.cc: Likewise.
	* libsupc++/tinfo.h: Move inline type_info functions here.
	* libsupc++/tinfo.cc: Separate type_info classes into their own
	files.
	* libsupc++/tinfo2.cc: Likewise.
	* Makefile.am (sources): Mention new files.
	* Makefile.in: Regenerated.

2007-03-16  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/27_io/headers/cinttypes/types_std_c++0x.cc: Use
	-std=gnu++0x instead of -std=c++0x for testing.
	* testsuite/18_support/headers/cstdint/types_std_c++0x.cc: Same.
	* testsuite/26_numerics/headers/random/types_std_c++0x.cc: Same.
	* testsuite/26_numerics/headers/cfenv/types_std_c++0x.cc: Same.
	* testsuite/26_numerics/headers/cstdlib/types_std_c++0x.cc: Same.
	* testsuite/26_numerics/headers/cmath/types_std_c++0x.cc: Same.
	* testsuite/17_intro/headers/c++200x/all_multiple_inclusion.cc: Same.
	* testsuite/17_intro/headers/c++200x/all.cc: Same.
	* testsuite/17_intro/using_namespace_std_tr1_neg.cc: Same.
	* testsuite/23_containers/hash/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/23_containers/unordered_map/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/23_containers/tuple/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/23_containers/unordered_multimap/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/23_containers/unordered_set/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/23_containers/headers/tuple/types_std_c++0x.cc: Same.
	* testsuite/23_containers/unordered_multiset/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/23_containers/array/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/20_util/enable_shared_from_this/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/20_util/headers/functional/types_std_c++0x.cc: Same.
	* testsuite/20_util/headers/functional/
	using_namespace_std_placeholders.cc: Same.
	* testsuite/20_util/headers/type_traits/types_std_c++0x.cc: Same.
	* testsuite/20_util/headers/memory/types_std_c++0x.cc: Same.
	* testsuite/20_util/shared_ptr/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/20_util/weak_ptr/requirements/
	explicit_instantiation.cc: Same.

2007-03-16  Benjamin Kosnik  <bkoz@redhat.com>

	* testsuite/lib/dg-options.exp (dg-require-c-std): New.
	* testsuite/lib/libstdc++.exp (check_v3_target_c_std): New. Check to
	see if _GLIBCXX_USE_C99_MATH is active.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	08_cyl_bessel_i/check_nan.cc: Use dg-require-c-std.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	17_hyperg/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	13_ellint_2/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	20_riemann_zeta/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	01_assoc_laguerre/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	02_assoc_legendre/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	22_sph_legendre/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	10_cyl_bessel_k/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	09_cyl_bessel_j/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	21_sph_bessel/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	07_conf_hyperg/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	16_hermite/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	12_ellint_1/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	05_comp_ellint_2/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	18_laguerre/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	14_ellint_3/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	04_comp_ellint_1/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	06_comp_ellint_3/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	19_legendre/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	03_beta/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	11_cyl_neumann/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	15_expint/check_nan.cc: Same.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	23_sph_neumann/check_nan.cc: Same.

	* include/tr1/poly_laguerre.tcc (__poly_laguerre): Don't check if
	unsigned int can be a NaN.

2007-03-16  Edward M. Smith-Rowland  <3dw4rd@verizon.net>

	* docs/html/ext/tr1.html : Marked tr1 math special functions done.
	* docs/html/faq/index.html : Ditto.
	* include/Makefile.in : Added new special function header files.
	* include/Makefile.am : Ditto.
	* include/tr1/common.h : Added type promotion routines for three
	and four args.

	* include/tr1/special_function_util.h: New.
	* include/tr1/bessel_function.tcc: New.
	* include/tr1/beta_function.tcc: New.
	* include/tr1/ell_integral.tcc: New.
	* include/tr1/exp_integral.tcc: New.
	* include/tr1/gamma.tcc: New.
	* include/tr1/hypergeometric.tcc: New.
	* include/tr1/legendre_function.tcc: New.
	* include/tr1/modified_bessel_func.tcc: New.
	* include/tr1/poly_hermite.tcc: New.
	* include/tr1/poly_laguerre.tcc: New.
	* include/tr1/riemann_zeta.tcc: New.
	* include/tr1/cmath : Included tr1 math special functions.
	* include/tr1/math.h : Ditto.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	testcase.h: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	01_assoc_laguerre/compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	01_assoc_laguerre/check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	01_assoc_laguerre/check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	01_assoc_laguerre/compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	02_assoc_legendre/compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	02_assoc_legendre/check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	02_assoc_legendre/check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	02_assoc_legendre/compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/03_beta/
	compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/03_beta/
	check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/03_beta/
	check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/03_beta/
	compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	04_comp_ellint_1/compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	04_comp_ellint_1/check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	04_comp_ellint_1/check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	04_comp_ellint_1/compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	05_comp_ellint_2/compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	05_comp_ellint_2/check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	05_comp_ellint_2/check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	05_comp_ellint_2/compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	06_comp_ellint_3/compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	06_comp_ellint_3/check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	06_comp_ellint_3/check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	06_comp_ellint_3/compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	07_conf_hyperg/compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	07_conf_hyperg/check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	07_conf_hyperg/check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	07_conf_hyperg/compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	08_cyl_bessel_i/compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	08_cyl_bessel_i/check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	08_cyl_bessel_i/check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	08_cyl_bessel_i/compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	09_cyl_bessel_j/compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	09_cyl_bessel_j/check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	09_cyl_bessel_j/check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	09_cyl_bessel_j/compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	10_cyl_bessel_k/compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	10_cyl_bessel_k/check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	10_cyl_bessel_k/check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	10_cyl_bessel_k/compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	11_cyl_neumann/compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	11_cyl_neumann/check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	11_cyl_neumann/check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	11_cyl_neumann/compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/12_ellint_1/
	compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/12_ellint_1/
	check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/12_ellint_1/
	check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/12_ellint_1/
	compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/13_ellint_2/
	compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/13_ellint_2/
	check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/13_ellint_2/
	check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/13_ellint_2/
	compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/14_ellint_3/
	compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/14_ellint_3/
	check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/14_ellint_3/
	check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/14_ellint_3/
	compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/15_expint/
	check_value_neg.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/15_expint/
	compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/15_expint/
	check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/15_expint/
	compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/15_expint/
	check_value_pos.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/16_hermite/
	compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/16_hermite/
	check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/16_hermite/
	compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/17_hyperg/
	compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/17_hyperg/
	check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/17_hyperg/
	check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/17_hyperg/
	compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/18_laguerre/
	compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/18_laguerre/
	check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/18_laguerre/
	check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/18_laguerre/
	compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/19_legendre/
	compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/19_legendre/
	check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/19_legendre/
	check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/19_legendre/
	compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	20_riemann_zeta/check_value_neg.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	20_riemann_zeta/compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	20_riemann_zeta/check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	20_riemann_zeta/compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	20_riemann_zeta/check_value_pos.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	21_sph_bessel/compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	21_sph_bessel/check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	21_sph_bessel/check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	21_sph_bessel/compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	22_sph_legendre/compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	22_sph_legendre/check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	22_sph_legendre/check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	22_sph_legendre/compile_2.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	23_sph_neumann/compile.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	23_sph_neumann/check_nan.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	23_sph_neumann/check_value.cc: New.
	* testsuite/tr1/5_numerical_facilities/special_functions/
	23_sph_neumann/ compile_2.cc: New.

2007-03-15  Hans-Peter Nilsson  <hp@axis.com>

	* testsuite/lib/libstdc++.exp (v3-build_support) <ar>: If it
	exists, use env(AR_FOR_TARGET).  Log the command.
	<ranlib>: Similar.

2007-03-14  Nathan Sidwell  <nathan@codesourcery.com>
	    Joseph Myers  <joseph@codesourcery.com>::

	* testsuite/lib/libstdc++.exp (check_v3_target_fileio,
        check_v3_target_time): New.
	* testsuite/lib/dg-options.exp (dg-require-fileio,
        dg-require-time): New.
	* testsuite/ext/stdio_sync_filebuf/char/12048-1.cc: Use it.
	* testsuite/ext/stdio_sync_filebuf/char/12048-2.cc: Use it.
	* testsuite/ext/stdio_sync_filebuf/char/12048-3.cc: Use it.
	* testsuite/ext/stdio_sync_filebuf/char/12048-4.cc: Use it.
	* testsuite/ext/stdio_sync_filebuf/char/1.cc: Use it.
	* testsuite/ext/stdio_filebuf/char/2.cc: Use it.
	* testsuite/ext/stdio_filebuf/char/10063-1.cc: Use it.
	* testsuite/ext/stdio_filebuf/char/10063-2.cc: Use it.
	* testsuite/ext/stdio_filebuf/char/10063-3.cc: Use it.
	* testsuite/22_locale/time_put/put/char/12439_1.cc: Use it.
	* testsuite/22_locale/time_put/put/char/12439_3.cc: Use it.
	* testsuite/27_io/basic_ofstream/open/char/1.cc: Use it.
	* testsuite/27_io/basic_ofstream/cons/char/2.cc: Use it.
	* testsuite/27_io/objects/char/12048-2.cc: Use it.
	* testsuite/27_io/objects/char/12048-4.cc: Use it.
	* testsuite/27_io/objects/char/12048-1.cc: Use it.
	* testsuite/27_io/objects/char/12048-3.cc: Use it.
	* testsuite/27_io/objects/char/10.cc: Use it.
	* testsuite/27_io/objects/char/12048-5.cc: Use it.
	* testsuite/27_io/basic_istream/get/char/2.cc: Use it.
	* testsuite/27_io/basic_istream/ignore/char/2.cc: Use it.
	* testsuite/27_io/basic_istream/ignore/char/3.cc: Use it.
	* testsuite/27_io/basic_istream/getline/char/5.cc: Use it.
	* testsuite/27_io/basic_istream/seekg/char/sstream.cc: Use it.
	* testsuite/27_io/basic_istream/seekg/char/fstream.cc: Use it.
	* testsuite/27_io/basic_istream/readsome/char/6746-2.cc: Use it.
	* testsuite/27_io/basic_istream/extractors_other/char/2.cc: Use it.
	* testsuite/27_io/basic_istream/tellg/char/sstream.cc: Use it.
	* testsuite/27_io/basic_istream/tellg/char/1.cc: Use it.
	* testsuite/27_io/basic_istream/tellg/char/fstream.cc: Use it.
	* testsuite/27_io/basic_istream/extractors_character/char/4.cc: Use it.
	* testsuite/27_io/basic_ostream/inserters_other/char/1.cc: Use it.
	* testsuite/27_io/basic_ostream/tellp/char/1.cc: Use it.
	* testsuite/27_io/basic_ostream/seekp/char/2346-fstream.cc: Use it.
	* testsuite/27_io/basic_ifstream/open/char/1.cc: Use it.
	* testsuite/27_io/basic_ifstream/cons/char/1.cc: Use it.
	* testsuite/27_io/basic_filebuf/sputbackc/char/1-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/sputbackc/char/1-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/sputbackc/char/2-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/sputbackc/char/2-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/sgetn/char/3.cc: Use it.
	* testsuite/27_io/basic_filebuf/sgetn/char/1-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/sgetn/char/1-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/sgetn/char/2-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/sgetn/char/2-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/12790-1.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/12790-2.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/12790-3.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/12790-4.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/char/1-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/char/1-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/char/1-out.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/char/2-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/char/2-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/char/2-out.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/char/3-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/char/3-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/char/3-out.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/char/11543.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/char/12790-1.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/char/12790-2.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/char/12790-3.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekoff/char/12790-4.cc: Use it.
	* testsuite/27_io/basic_filebuf/in_avail/char/1.cc: Use it.
	* testsuite/27_io/basic_filebuf/in_avail/char/9701-3.cc: Use it.
	* testsuite/27_io/basic_filebuf/setbuf/char/1.cc: Use it.
	* testsuite/27_io/basic_filebuf/setbuf/char/2.cc: Use it.
	* testsuite/27_io/basic_filebuf/setbuf/char/3.cc: Use it.
	* testsuite/27_io/basic_filebuf/setbuf/char/12875-1.cc: Use it.
	* testsuite/27_io/basic_filebuf/setbuf/char/12875-2.cc: Use it.
	* testsuite/27_io/basic_filebuf/sbumpc/char/1-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/sbumpc/char/1-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/sbumpc/char/2-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/sbumpc/char/2-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/sbumpc/char/9825.cc: Use it.
	* testsuite/27_io/basic_filebuf/is_open/char/1.cc: Use it.
	* testsuite/27_io/basic_filebuf/sputc/char/1-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/sputc/char/1-out.cc: Use it.
	* testsuite/27_io/basic_filebuf/sputc/char/2-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/sputc/char/2-out.cc: Use it.
	* testsuite/27_io/basic_filebuf/open/12790-1.cc: Use it.
	* testsuite/27_io/basic_filebuf/open/char/1.cc: Use it.
	* testsuite/27_io/basic_filebuf/open/char/2.cc: Use it.
	* testsuite/27_io/basic_filebuf/open/char/3.cc: Use it.
	* testsuite/27_io/basic_filebuf/overflow/char/2-unbuf.cc: Use it.
	* testsuite/27_io/basic_filebuf/overflow/char/2.cc: Use it.
	* testsuite/27_io/basic_filebuf/overflow/char/9988.cc: Use it.
	* testsuite/27_io/basic_filebuf/overflow/char/9182-2.cc: Use it.
	* testsuite/27_io/basic_filebuf/overflow/char/9169.cc: Use it.
	* testsuite/27_io/basic_filebuf/snextc/char/1-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/snextc/char/1-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/snextc/char/2-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/snextc/char/2-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/sgetc/char/1-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/sgetc/char/1-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/sgetc/char/1-out.cc: Use it.
	* testsuite/27_io/basic_filebuf/sgetc/char/2-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/sgetc/char/2-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/close/12790-1.cc: Use it.
	* testsuite/27_io/basic_filebuf/close/char/1.cc: Use it.
	* testsuite/27_io/basic_filebuf/close/char/12790-1.cc: Use it.
	* testsuite/27_io/basic_filebuf/close/char/12790-2.cc: Use it.
	* testsuite/27_io/basic_filebuf/close/char/2.cc: Use it.
	* testsuite/27_io/basic_filebuf/close/char/12790-3.cc: Use it.
	* testsuite/27_io/basic_filebuf/close/char/12790-4.cc: Use it.
	* testsuite/27_io/basic_filebuf/close/char/4.cc: Use it.
	* testsuite/27_io/basic_filebuf/underflow/10096.cc: Use it.
	* testsuite/27_io/basic_filebuf/underflow/char/2.cc: Use it.
	* testsuite/27_io/basic_filebuf/sungetc/char/1-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/sungetc/char/1-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/sungetc/char/2-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/sungetc/char/2-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekpos/12790-1.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekpos/12790-2.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekpos/12790-3.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekpos/char/12790-1.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekpos/char/12790-2.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekpos/char/12790-4.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekpos/char/1-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekpos/char/1-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekpos/char/1-out.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekpos/char/2-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekpos/char/2-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekpos/char/2-out.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekpos/char/3-in.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekpos/char/3-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/seekpos/char/3-out.cc: Use it.
	* testsuite/27_io/basic_filebuf/sputn/char/1-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/sputn/char/1-out.cc: Use it.
	* testsuite/27_io/basic_filebuf/sputn/char/2-io.cc: Use it.
	* testsuite/27_io/basic_filebuf/sputn/char/2-out.cc: Use it.
	* testsuite/27_io/basic_filebuf/sputn/char/9339.cc: Use it.
	* testsuite/27_io/basic_filebuf/pbackfail/char/9761.cc: Use it.
	* testsuite/27_io/basic_filebuf/sync/char/9182-1.cc: Use it.
	* testsuite/21_strings/basic_string/inserters_extractors/
	char/10.cc: Use it.
	* testsuite/21_strings/basic_string/inserters_extractors/
	char/11.cc: Use it.
	* testsuite/21_strings/basic_string/inserters_extractors/
	char/5.cc: Use it.

2007-03-13  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/tuple: Only include <utility> for std::pair, and
	forward declare reference_wrapper; formatting fixes.
	* include/tr1/ref_fwd.h: Remove.
	* include/tr1/tuple_defs.h: Remove, unused.
	* include/Makefile.am: Update.
	* include/Makefile.in: Regenerate.
	* testsuite/tr1/6_containers/tuple/creation_functions/make_tuple.cc:
	Include <tr1/functional> too.

	* include/tr1/tuple: Define tuple_size<tuple<_Elements...> >::value.

2007-03-12  Stephen M. Webb  <stephen.webb@bregmasoft.com>

	* include/tr1/regex: Add "boilerplate" implementations.
	* testsuite/tr1/7_regular_expressions/regex_traits/wchar_t/
	translate_nocase.cc: New.
	* testsuite/tr1/7_regular_expressions/regex_traits/wchar_t/
	ctor.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/regex_traits/char/
	translate_nocase.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/regex_traits/char/
	ctor.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/regex/cons/char/
	c_string_ecma.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/regex/cons/char/
	default.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/regex/cons/char/
	c_string_grep.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/regex/cons/char/
	c_string_extended.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/regex/cons/char/
	c_string_basic.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/regex/cons/char/
	c_string_awk.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/regex/cons/char/
	c_string_egrep.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/assign/wchar_t/
	range.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/assign/wchar_t/
	string_op.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/assign/wchar_t/
	string.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/assign/wchar_t/
	pstring.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/assign/wchar_t/
	cstring_op.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/assign/wchar_t/
	cstring.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/assign/char/
	range.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/assign/char/
	string_op.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/assign/char/
	string.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/assign/char/
	pstring.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/assign/char/
	cstring_op.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/assign/char/
	cstring.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/ctors/wchar_t/
	range.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/ctors/wchar_t/
	default.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/ctors/wchar_t/
	string.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/ctors/wchar_t/
	pstring.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/ctors/wchar_t/
	cstring.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/ctors/char/
	range.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/ctors/char/
	default.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/ctors/char/
	string.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/ctors/char/
	pstring.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/basic_regex/ctors/char/
	cstring.cc: Likewise.
	* testsuite/tr1/7_regular_expressions/match_results/ctors/char/
	default.cc: Likewise.

2007-03-12  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algo.h (swap_ranges): Move...
	* include/bits/stl_algobase.h: ... here.
	* include/tr1/array: Trim includes, stl_algobase.h is enough.

2007-03-11  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/28080 (final)
	* include/std/iosfwd: Do not include <bits/c++io.h>.
	* config/io/basic_file_stdio.h: Do it here.
	* include/ext/stdio_sync_filebuf.h: Likewise.
	* include/ext/rope: Include <bits/gthr.h> unconditionally.
	* include/std/fstream: Do not include <bits/gthr.h>.

	* include/std/ios: Do not include <cstdio>.
	* include/bits/ios_base.h: Do it here.
	* testsuite/27_io/ios_base/cons/assign_neg.cc: Adjust dg-error
	line numbers.
	* testsuite/27_io/ios_base/cons/copy_neg.cc: Likewise.

2007-03-10  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/28080 (partial)
	* include/std/memory: Move C++03 implementation...
	* include/bits/stl_memory.h: ... here, new.
	* include/Makefile.am: Add.
	* include/bits/stl_tempbuf.h: Include the latter instead.
	* include/tr1/hashtable: Include allocator.h instead of
	the whole <memory>.
	* include/tr1/hashtable_policy.h: Include stl_function.h
	instead of <functional>.
	* include/Makefile.in: Regenerate.
	* testsuite/20_util/auto_ptr/assign_neg.cc: Adjust dg-error
	line numbers.

2007-03-09  Douglas Gregor  <doug.gregor@gmail.com>

	* include/Makefile.in: Regenerate.
	* include/tr1/mu_iterate.h: Remove.
	* include/tr1/tuple (_Tuple_impl): New.
	(tuple): Make variadic, re-implement as shell over _Tuple_impl.
	(0-element tuple): Basis case.
	(2-element tuple): Handle pair methods.
	(__get_helper): Remove.
	(tuple_element): Reimplement with variadic templates.
	(tuple_size): Ditto.
	(get): Ditto.
	(operator==): Use variadic templates in the signature.
	(operator<): Ditto.
	(operator!=): Ditto.
	(operator>): Ditto.
	(operator<=): Ditto.
	(operator>=): Ditto.
	(__stripped_tuple_type): Remove; we've inlined its behavior.
	(make_tuple): Reimplement with variadic templates.
	(tie): Ditto.
	* include/tr1/tuple_iterate.h: Remove.
	* include/tr1/bind_repeat.h: Remove.
	* include/tr1/ref_wrap_iterate.h: Remove.
	* include/tr1/bind_iterate.h: Remove.
	* include/tr1/functional (_Weak_result_type): Add variadic
	partial specializations.
	(result_of): Ditto.
	(__invoke): Reimplement using variadic templates.
	(reference_wrapper): Reimplement operator() with variadic
	templates.
	(_Maybe_unary_or_binary_function): New.
	(_Mem_fn): Implement for member function pointers using variadic
	templates.
	(placeholders): Define 30 placeholders.
	(_Index_tuple): New.
	(_Build_index_tuple): New.
	(_No_tuple_element): New.
	(_Safe_tuple_element_impl): New.
	(_Safe_tuple_element): New.
	(_Mu): Reimplement with variadic templates, use
	_Safe_tuple_element instead of tuple_element.
	(_Bind): Reimplement with variadic templates and tuples.
	(_Bind_result): Ditto.
	(bind): Reimplement with variadic templates.
	(_Function_handler): Ditto.
	(function): Ditto.
	* include/tr1/functional_iterate.h: Remove.
	* include/tr1/repeat.h: Remove.
	* include/Makefile.am: Don't install removed headers.

2007-03-06  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/28080 (partial)
	* include/bits/stl_algobase.h: Do not include <cstdlib>.
	* src/localename.cc: Do it here.
	* src/ctype.cc: Likewise.
	* include/ext/pb_ds/detail/map_debug_base.hpp: Likewise.
	* include/ext/pb_ds/exception.hpp: Likewise.
	* include/ext/pb_ds/list_update_policy.hpp: Likewise.
	* include/bits/stl_algo.h: Likewise.
	* include/tr1/random: Likewise.
	* testsuite/util/testsuite_hooks.cc: Likewise.
	* testsuite/util/testsuite_abi_check.cc: Likewise.
	* testsuite/util/testsuite_abi.cc: Likewise.
	* testsuite/util/performance/assoc/timing/
	tree_order_statistics_test.hpp: Likewise.
	* config/locale/darwin/ctype_members.cc: Likewise.
	* config/locale/gnu/c++locale_internal.h: Likewise.
	* config/locale/generic/ctype_members.cc: Likewise.
	* config/locale/generic/time_members.cc: Likewise.

	* include/ext/pb_ds/detail/resize_policy/
	hash_load_check_resize_trigger_imp.hpp: Qualify abort.
	* testsuite/util/performance/assoc/timing/
	multimap_find_test.hpp: Likewise.
	* include/std/valarray: Do include <cstdlib>.
	* include/tr1/hashtable: Likewise.

2007-03-05  Joseph Myers  <joseph@codesourcery.com>

	PR libstdc++/30675
	* testsuite/lib/libstdc++.exp (v3-build_support): Use [transform
	"ar"] and [transform "ranlib"].

2007-03-04  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/27_io/basic_ostream/inserters_arithmetic/
	char/31031.cc: Include the right header.

2007-03-04  Benjamin Kosnik  <bkoz@redhat.com>

	* acinclude.m4 (GLIBCXX_ENABLE_CHEADERS): Add c_global.
	* configure.host (c_model): Set default to c_global.
	* configure: Regenerate.
	* include/Makefile.am (c_compatibility_headers_extra): Make
	conditional on GLIBCXX_C_HEADERS_COMPATIBILITY.
	(c_base_headers_extra): Make conditional on GLIBCXX_C_HEADERS_EXTRA.
	(c_compatibility_headers): Make conditional on c/c_std/c_global.
	* include/Makefile.in: Regenerate.
	* docs/html/configopts.html: Add c_global information to
	--enable-cheaders. Eventually, "c_std" should mean "C" includes
	that are in namespace std, with optional C++ "C" compatibility
	includes to inject into global scope. And "c_global" should mean
	"C" includes that are in the global namespace, with C++ includes
	injecting into namespace std and no C++ "C" compatibility
	includes.

2007-03-04  Benjamin Kosnik  <bkoz@redhat.com>

	* include/bits/c++config: Add _GLIBCXX_NAMEPACE_C.
	Add _GLIBCXX_NAMESPACE_ASSOCIATION_CXX200x.
	Add _GLIBCXX_TR1 as namespace macro.
	Add namespace associations for std::__cxx200x conditionally.

	* include/c_compatibility/assert.h: Correct doxygen markup,
	conditionalize the global injections on _GLIBCXX_NAMESPACE_C.
	* include/c_compatibility/ctype.h: Same.
	* include/c_compatibility/errno.h: Same.
	* include/c_compatibility/float.h: Same.
	* include/c_compatibility/iso646.h: Same.
	* include/c_compatibility/limits.h: Same.
	* include/c_compatibility/locale.h: Same.
	* include/c_compatibility/math.h: Same.
	* include/c_compatibility/setjmp.h: Same.
	* include/c_compatibility/signal.h: Same.
	* include/c_compatibility/stdarg.h: Same.
	* include/c_compatibility/stddef.h: Same.
	* include/c_compatibility/stdio.h: Same.
	* include/c_compatibility/stdlib.h: Same.
	* include/c_compatibility/string.h: Same.
	* include/c_compatibility/time.h: Same.
	* include/c_compatibility/wchar.h: Same.
	* include/c_compatibility/wctype.h: Same.

	* include/c_compatibility/complex.h: Add.
	* include/c_compatibility/fenv.h: Same.
	* include/c_compatibility/inttypes.h: Same.
	* include/c_compatibility/stdbool.h: Same.
	* include/c_compatibility/stdint.h: Same.
	* include/c_compatibility/tgmath.h: Same.

	* include/c_global/cassert: Add, use include_next, use C++0x features
	if -std=c++0x.
	* include/c_global/cctype: Same.
	* include/c_global/cerrno: Same.
	* include/c_global/cfloat: Same.
	* include/c_global/ciso646: Same.
	* include/c_global/climits: Same.
	* include/c_global/clocale: Same.
	* include/c_global/cmath: Same.
	* include/c_global/cmath.tcc: Same.
	* include/c_global/csetjmp: Same.
	* include/c_global/csignal: Same.
	* include/c_global/cstdarg: Same.
	* include/c_global/cstddef: Same.
	* include/c_global/cstdio: Same.
	* include/c_global/cstdlib: Same.
	* include/c_global/cstring: Same.
	* include/c_global/ctime: Same.
	* include/c_global/cwchar: Same.
	* include/c_global/cwctype: Same.

	* include/c_global/ccomplex: Add.
	* include/c_global/cfenv: Add.
	* include/c_global/cinttypes: Add.
	* include/c_global/cstdbool: Add.
	* include/c_global/cstdint: Add.
	* include/c_global/ctgmath: Add.

	* include/std/algorithm: Use C++0x features if -std=c++0x.
	* include/std/bitset: Same.
	* include/std/complex: Same.
	* include/std/deque: Same.
	* include/std/fstream: Same.
	* include/std/functional: Same.
	* include/std/iomanip: Same.
	* include/std/ios: Same.
	* include/std/iosfwd: Same.
	* include/std/iostream: Same.
	* include/std/istream: Same.
	* include/std/iterator: Same.
	* include/std/limits: Same.
	* include/std/list: Same.
	* include/std/locale: Same.
	* include/std/map: Same.
	* include/std/memory: Same.
	* include/std/numeric: Same.
	* include/std/ostream: Same.
	* include/std/queue: Same.
	* include/std/set: Same.
	* include/std/sstream: Same.
	* include/std/stack: Same.
	* include/std/stdexcept: Same.
	* include/std/streambuf: Same.
	* include/std/string: Same.
	* include/std/utility: Same.
	* include/std/valarray: Same.
	* include/std/vector: Same.

	* include/std/array: Add.
	* include/std/random: Add.
	* include/std/regex: Add.
	* include/std/tuple: Add.
	* include/std/type_traits: Add.
	* include/std/unordered_map: Add.
	* include/std/unordered_set: Add.
	* include/std/c++0x_warning.h: Add.

	* include/tr1/array: Switch namespaces based on _GLIBCXX_TR1.
	* include/tr1/boost_shared_ptr.h: Same.
	* include/tr1/cctype: Same.
	* include/tr1/cfenv: Same.
	* include/tr1/cinttypes: Same.
	* include/tr1/cmath: Same.
	* include/tr1/common.h: Same.
	* include/tr1/complex: Same.
	* include/tr1/cstdint: Same.
	* include/tr1/cstdio: Same.
	* include/tr1/cstdlib: Same.
	* include/tr1/cwchar: Same.
	* include/tr1/cwctype: Same.
	* include/tr1/functional: Same.
	* include/tr1/functional_hash.h: Same.
	* include/tr1/functional_iterate.h: Same.
	* include/tr1/hashtable: Same.
	* include/tr1/hashtable_policy.h: Same.
	* include/tr1/math.h: Same.
	* include/tr1/memory: Same.
	* include/tr1/random: Same.
	* include/tr1/random.tcc: Same.
	* include/tr1/ref_fwd.h: Same.
	* include/tr1/repeat.h: Same.
	* include/tr1/stdlib.h: Same.
	* include/tr1/tuple: Same.
	* include/tr1/tuple_iterate.h: Same.
	* include/tr1/type_traits: Same.
	* include/tr1/type_traits_fwd.h: Same.
	* include/tr1/unordered_map: Same.
	* include/tr1/unordered_set: Same.
	* include/tr1/utility: Same.

	* include/tr1/ccomplex: Add.
	* include/tr1/complex.h: Add.
	* include/tr1/regex: Add.

	* include/Makefile.am: Add C++0x headers, "C" compatibility headers.
	* include/Makefile.in: Regenerate.

	* testsuite/tr1/headers.cc: Add in regex/complex.

	* testsuite/17_intro/headers/c++200x/all.cc: New.
	* testsuite/17_intro/headers/c++200x/all_multiple_inclusion.cc: Same.
	* testsuite/17_intro/using_namespace_std_tr1_neg.cc: Same.
	* testsuite/18_support/headers/cstdbool/std_c++0x_neg.cc: Same.
	* testsuite/18_support/headers/cstdint/std_c++0x_neg.cc: Same.
	* testsuite/18_support/headers/cstdint/types_std_c++0x.cc: Same.
	* testsuite/20_util/enable_shared_from_this/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/20_util/headers/functional/types_std_c++0x.cc: Same.
	* testsuite/20_util/headers/functional/
	using_namespace_std_placeholders.cc: Same.
	* testsuite/20_util/headers/memory/types_std_c++0x.cc: Same.
	* testsuite/20_util/headers/type_traits/std_c++0x_neg.cc: Same.
	* testsuite/20_util/headers/type_traits/types_std_c++0x.cc: Same.
	* testsuite/20_util/shared_ptr/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/20_util/weak_ptr/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/23_containers/array/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/23_containers/hash/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/23_containers/headers/array/std_c++0x_neg.cc: Same.
	* testsuite/23_containers/headers/tuple/std_c++0x_neg.cc: Same.
	* testsuite/23_containers/headers/tuple/types_std_c++0x.cc: Same.
	* testsuite/23_containers/headers/unordered_map/std_c++0x_neg.cc: Same.
	* testsuite/23_containers/headers/unordered_set/std_c++0x_neg.cc: Same.
	* testsuite/23_containers/tuple/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/23_containers/unordered_map/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/23_containers/unordered_multimap/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/23_containers/unordered_multiset/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/23_containers/unordered_set/requirements/
	explicit_instantiation.cc: Same.
	* testsuite/26_numerics/headers/ccomplex/std_c++0x_neg.cc: Same.
	* testsuite/26_numerics/headers/cfenv/std_c++0x_neg.cc: Same.
	* testsuite/26_numerics/headers/cfenv/types_std_c++0x.cc: Same.
	* testsuite/26_numerics/headers/cmath/types_std_c++0x.cc: Same.
	* testsuite/26_numerics/headers/cstdlib/types_std_c++0x.cc: Same.
	* testsuite/26_numerics/headers/ctgmath/std_c++0x_neg.cc: Same.
	* testsuite/26_numerics/headers/random/std_c++0x_neg.cc: Same.
	* testsuite/26_numerics/headers/random/types_std_c++0x.cc: Same.
	* testsuite/27_io/headers/cinttypes/std_c++0x_neg.cc: Same.
	* testsuite/27_io/headers/cinttypes/types_std_c++0x.cc: Same.
	* testsuite/28_regex/headers/regex/std_c++0x_neg.cc: Same.

	* testsuite/tr1/8_c_compatibility/cfenv/types.cc: Rename ...
	* testsuite/tr1/8_c_compatibility/cinttypes/types.cc: Same.
	* testsuite/tr1/8_c_compatibility/cmath/types.cc: Same.
	* testsuite/tr1/8_c_compatibility/cstdint/types.cc: Same.
	* testsuite/tr1/8_c_compatibility/cstdlib/types.cc: Same.
	* testsuite/tr1/8_c_compatibility/cfenv/types_std_tr1.cc: ...to this.
	* testsuite/tr1/8_c_compatibility/cinttypes/types_std_tr1.cc: Same.
	* testsuite/tr1/8_c_compatibility/cmath/types_std_tr1.cc: Same.
	* testsuite/tr1/8_c_compatibility/cstdint/types_std_tr1.cc: Same.
	* testsuite/tr1/8_c_compatibility/cstdlib/types_std_tr1.cc: Same.

2007-03-03  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/31031
	* include/bits/istream.tcc: Inhibit implicit instantiation of
	the _M_insert helpers.
	* include/bits/ostream.tcc: Likewise for _M_extract.
	* testsuite/27_io/basic_ostream/inserters_arithmetic/char/
	31031.cc: New.
	* testsuite/27_io/basic_ostream/inserters_arithmetic/wchar_t/
	31031.cc: Likewise.

2007-03-03  Benjamin Kosnik  <bkoz@redhat.com>

	* include/debug/functions.h: Use cstddef.

	* testsuite/tr1/3_function_objects/headers/functional/
	using_namespace_std_tr1_placeholders.cc: Fix include.

2007-03-03  Benjamin Kosnik  <bkoz@redhat.com>

	* crossconfig.m4 (djgpp): Correct builtin defines to HAVE___,
	instead of HAVE____.
	* configure: Regenerate.

2007-03-03  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/28080 (partial)
	* include/bits/stl_algobase.h: Do not include <iosfwd>,
	<bits/functexcept.h> is enough; adjust __copy_aux declarations;
	remove declaration of copy overload for istreambuf_iterator /
	ostreambuf_iterator.
	* src/debug.cc: Include <cstdio>.
	* include/ext/rope: Include <iosfwd>.
	* include/bits/char_traits.h: Include <cstdio> and <cwchar>.
	* include/bits/stl_algo.h: Remove declaration of find overload
	for istreambuf_iterator.
	* include/std/queue: Clean up includes.
	* include/std/stack: Likewise.
	* include/std/memory: Likewise.
	* include/std/algorithm: Likewise.
	* include/std/vector: Likewise.
	* include/std/deque: Likewise.
	* include/std/list: Likewise.
	* include/bits/stl_tree.h: Likewise.
	* testsuite/ext/type_traits/remove_unsigned_integer_neg.cc: Adjust
	dg-error markers.
	* testsuite/ext/type_traits/add_unsigned_floating_neg.cc: Likewise.
	* testsuite/ext/type_traits/remove_unsigned_floating_neg.cc: Likewise.
	* testsuite/ext/type_traits/add_unsigned_integer_neg.cc: Likewise.
	* testsuite/23_containers/set/operators/1_neg.cc: Likewise.
	* testsuite/23_containers/map/operators/1_neg.cc: Likewise.
	* testsuite/20_util/auto_ptr/assign_neg.cc: Likewise.

	* include/ext/type_traits.h: Fix type of __max_digits10; clean up
	includes.

	* testsuite/util/testsuite_hooks.h: Do not include <cstddef>.
	* testsuite/util/testsuite_hooks.cc: Do it here.

2007-03-02  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/27_io/objects/wchar_t/9661-1.cc: Include <cstdlib>.
	* testsuite/27_io/objects/wchar_t/7.cc: Likewise.
	* testsuite/27_io/objects/char/9661-1.cc: Likewise.
	* testsuite/27_io/objects/char/7.cc: Likewise.
	* testsuite/27_io/basic_istream/ignore/wchar_t/2.cc: Likewise.
	* testsuite/27_io/basic_istream/ignore/char/2.cc: Likewise.
	* testsuite/27_io/basic_istream/getline/wchar_t/5.cc: Likewise.
	* testsuite/27_io/basic_istream/getline/char/5.cc: Likewise.
	* testsuite/27_io/basic_istream/extractors_arithmetic/char/
	11.cc: Likewise.
	* testsuite/27_io/basic_istream/extractors_character/wchar_t/
	4.cc: Likewise.
	* testsuite/27_io/basic_istream/extractors_character/char/
	4.cc: Likewise.
	* testsuite/27_io/basic_ostream/seekp/wchar_t/
	2346-fstream.cc: Likewise.
	* testsuite/27_io/basic_ostream/seekp/char/
	2346-fstream.cc: Likewise.
	* testsuite/27_io/basic_filebuf/seekoff/char/26777.cc: Likewise.
	* testsuite/27_io/basic_filebuf/imbue/wchar_t/13582-2.cc: Likewise.
	* testsuite/27_io/basic_filebuf/imbue/wchar_t/14975-2.cc: Likewise.
	* testsuite/27_io/basic_filebuf/imbue/char/13171-2.cc: Likewise.
	* testsuite/27_io/basic_filebuf/imbue/char/13582-2.cc: Likewise.
	* testsuite/27_io/basic_filebuf/close/char/4879.cc: Likewise.
	* testsuite/27_io/basic_filebuf/close/char/9964.cc: Likewise.
	* testsuite/27_io/basic_filebuf/underflow/char/10097.cc: Likewise.
	* testsuite/27_io/basic_filebuf/showmanyc/char/9533-1.cc: Likewise.
	* testsuite/21_strings/basic_string/inserters_extractors/
	wchar_t/10.cc: Likewise.
	* testsuite/21_strings/basic_string/inserters_extractors/
	wchar_t/11.cc: Likewise.
	* testsuite/21_strings/basic_string/inserters_extractors/
	char/10.cc: Likewise.
	* testsuite/21_strings/basic_string/inserters_extractors/
	char/11.cc: Likewise.
	* testsuite/ext/pb_ds/example/trie_dna.cc: Likewise.
	* testsuite/ext/new_allocator/deallocate_global.cc: Likewise.
	* testsuite/ext/new_allocator/deallocate_local.cc: Likewise.
	* testsuite/performance/27_io/filebuf_sgetn_unbuf.cc: Likewise.
	* testsuite/performance/27_io/ifstream_getline.cc: Likewise.
	* testsuite/22_locale/locale/cons/4.cc: Likewise.
	* testsuite/22_locale/locale/cons/5.cc: Likewise.
	* testsuite/tr1/2_general_utilities/shared_ptr/thread/
	mutex_weaktoshared.cc: Likewise.
	* testsuite/tr1/2_general_utilities/shared_ptr/thread/
	default_weaktoshared.cc: Likewise.
	* testsuite/thread/pthread5.cc: Likewise.
	* testsuite/thread/pthread1.cc: Likewise.
	* testsuite/23_containers/deque/cons/assign/1.cc: Likewise.

2007-03-02  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/thread/pthread1.cc: Include <pthread.h>.
	* testsuite/thread/pthread2.cc: Likewise.
	* testsuite/thread/pthread3.cc: Likewise.
	* testsuite/thread/pthread4.cc: Likewise.
	* testsuite/thread/pthread5.cc: Likewise.
	* testsuite/thread/pthread6.cc: Likewise.
	* testsuite/thread/pthread7-rope.cc: Likewise.

2007-03-02  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/28080 (partial)
	* include/tr1/random (class random_device): Rework to use simple
	<cstdio> input, do not include <fstream>.
	* include/tr1/random.tcc (all inserters and extractors): Refer
	to ios_base as base class of basic_istream or basic_ostream.

2007-03-01  Brooks Moses  <brooks.moses@codesourcery.com>

	* Makefile.am: Add dummy install-pdf target.
	* Makefile.in: Regenerate

2007-03-01  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/31005
	* include/bits/localefwd.h: Include <cctype>.

2007-02-27  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/28080 (partial)
	* include/std/bitset: Do not include <ios>, <iosfwd> is enough.
	(operator>>(std::basic_istream<>&, bitset<>&)): Tweak, refer to
	ios_base as a base of basic_istream.
	* include/std/iomanip: Do not include <ios>, <iosfwd> +
	<bits/ios_base.h> is enough.
	* include/std/iosfwd: Do not include <cctype> here...
	* include/bits/locale_facets.h: ... do it here, when needed.
	* include/bits/ostream.tcc: Clean up, do not include <locale> here...
	* include/std/ostream: ... here instead.
	* include/bits/istream.tcc: Likewise for <locale> and <ostream>...
	* include/std/istream: ... here.
	* include/bits/sstream.tcc: Do not include <sstream>.

2007-02-27  Richard Guenther  <rguenther@suse.de>

	* acinclude.m4: Adjust regular expression for ld version extraction.
	* configure: Regenerate.

2007-02-26  DJ Delorie  <dj@redhat.com>

	* crossconfig.m4 (djgpp): Pre-detect djgpp-specific results, to
	avoid needing to link during cross compiling.
	* configure: Regenerated.

2007-02-26  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/28080 (partial)
	* include/std/bitset: Do not include <istream> and <ostream>,
	<ios> is enough.
	* include/std/iomanip: Do not include the whole <istream>,
	<ios> is enough; do not include <functional>; reformat.
	* include/std/functional: Do not include <cstddef>.
	* include/std/list: Do not include <bits/stl_uninitialized.h>.
	* include/std/numeric: Do not include the whole <iterator> and
	<bits/stl_function.h>.
	* include/std/valarray: Do not include <numeric>.
	* include/bits/stl_numeric.h: Include <bits/concept_check.h>.
	* src/iostream-inst.cc: Include <istream>.
	* include/ext/functional: Include <cstddef>.
	* testsuite/util/testsuite_hooks.h: Do not include <locale>,
	<ctime> is enough; qualify tm.
	* testsuite/util/testsuite_hooks.cc: Qualify tm.

2007-02-26  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/locale_facets.h (class ctype_byname<char>,
	class ctype_byname<wchar_t>): Declare.
	* src/ctype.cc (ctype_byname<wchar_t>::ctype_byname(const char*,
	size_t), ctype_byname<wchar_t>::~ctype_byname): Define.
	* config/locale/generic/ctype_members.cc (ctype_byname<char>::
	ctype_byname(const char*, size_t), ctype_byname<char>::~ctype_byname):
	Likewise.
	* config/locale/gnu/ctype_members.cc (ctype_byname<char>::
	ctype_byname(const char*, size_t), ctype_byname<char>::~ctype_byname):
	Likewise.
	* config/locale/darwin/ctype_members.cc (ctype_byname<char>::
	ctype_byname(const char*, size_t), ctype_byname<char>::~ctype_byname):
	Likewise.
	* testsuite/22_locale/headers/locale/synopsis.cc: Remove xfail.

2007-02-25  Paolo Carlini  <pcarlini@suse.de>

	* testsuite/19_diagnostics/headers/cerrno/macros.cc: Include
	the right header.
	* testsuite/18_support/headers/cstdlib/macros.cc: Likewise.

2007-02-23  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/25896
	* include/tr1/hashtable (_Hashtable<>::erase(const key_type&)):
	Take care of &_M_extract((*__slot)->_M_v) == &__k.

	* testsuite/tr1/6_containers/unordered_map/erase/1.cc: New.
	* testsuite/tr1/6_containers/unordered_multimap/erase/1.cc: Likewise.
	* testsuite/tr1/6_containers/unordered_multiset/erase/1.cc: Likewise.
	* testsuite/tr1/6_containers/unordered_set/erase/1.cc: Likewise.

2007-02-23  Mark Mitchell  <mark@codesourcery.com>

	* testsuite/27_io/ios_base/sync_with_stdio/1.cc: XFAIL for wrapped
	targets.

2007-02-23  Mark Mitchell  <mark@codesourcery.com>

	* testsuite/26_numerics/headers/cmath/c99_classification_macros_c.cc:
	XFAIL for Newlib targets.

2007-02-22  Simon Martin  <simartin@users.sourceforge.net>

	* testsuite/27_io/basic_ios/cons/char/3.cc: Fixed type mismatches in
	explicit instantiations.
	* testsuite/27_io/basic_istream/extractors_other/pod/
	3983-3.cc: Likewise.
	* testsuite/27_io/basic_istream/extractors_arithmetic/pod/3983-1.cc:
	Likewise.
	* testsuite/27_io/basic_istream/extractors_character/pod/3983-2.cc:
	Likewise.
	* testsuite/27_io/basic_istream/sentry/pod/1.cc: Likewise.
	* testsuite/27_io/basic_ostream/sentry/pod/1.cc: Likewise.
	* testsuite/21_strings/basic_string/inserters_extractors/
	pod/10081-in.cc: Likewise.
	* testsuite/21_strings/basic_string/inserters_extractors/pod/
	10081-out.cc: Likewise.
	* testsuite/21_strings/basic_string/capacity/1.cc: Likewise.

2007-02-22  Paolo Carlini  <pcarlini@suse.de>

	* include/tr1/unordered_map (class __unordered_map,
	class __unordered_multimap): New.
	(class unordered_map, class unordered_multimap): Forward to
	the latter.
	* include/tr1/unordered_set: Likewise for unordered_set and
	unordered_multiset.
	* testsuite/tr1/6_containers/headers/unordered_set/synopsis.cc:
	Remove xfail.
	* testsuite/tr1/6_containers/headers/unordered_map/synopsis.cc:
	Likewise.
	* testsuite/tr1/6_containers/unordered_multimap/requirements/
	explicit_instantiation.cc: Adjust.
	* testsuite/tr1/6_containers/unordered_set/requirements/
	explicit_instantiation.cc: Likewise.
	* testsuite/tr1/6_containers/unordered_map/requirements/
	explicit_instantiation.cc: Likewise.
	* testsuite/tr1/6_containers/unordered_multiset/requirements/
	explicit_instantiation.cc: Likewise.
	* testsuite/tr1/6_containers/unordered_map/24064.cc: Likewise.
	* testsuite/util/native_type/assoc/native_hash_set.hpp: Likewise.
	* testsuite/util/native_type/assoc/native_hash_map.hpp: Likewise.

2007-02-20  Mark Mitchell  <mark@codesourcery.com>

	* testsuite/lib/libstdc++.exp (libstdc++_init): Compile testglue
	with -fexceptions.

2007-02-20  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/28080 (partial)
	* include/tr1/functional: Split out hash bits to...
	* include/tr1/functional_hash.h: ...here.
	* include/Makefile.am: Add.
	* include/tr1/unordered_set: Include the latter instead.
	* include/tr1/unordered_map: Likewise.
	* include/tr1/random: Do not include the whole <algorithm>,
	stl_algobase.h is enough.
	* include/tr1/memory: Likewise.
	* include/Makefile.in: Regenerate.

	* include/tr1/utility (get(std::pair<>&), get(const std::pair<>&)):
	Mark inline.

2007-02-20  Benjamin Kosnik  <bkoz@redhat.com>

	Directory layout flattening.

	Added in testsuite:
	* 20_util/allocator
	* 20_util/auto_ptr
	* 20_util/function_objects
	* 20_util/function_objects/binders
	* 20_util/function_objects/binders/1.cc
	* 20_util/function_objects/binders/3113.cc
	* 20_util/function_objects/comparisons.cc
	* 20_util/pair
	* 20_util/raw_storage_iterator
	* 20_util/rel_ops.cc
	* 20_util/specialized_algorithms
	* 20_util/specialized_algorithms/16505.cc
	* 20_util/temporary_buffer.cc
	* 26_numerics/numeric_arrays/slice_array
	* 26_numerics/numeric_arrays/slice_array/array_assignment.cc
	* 26_numerics/numeric_arrays/slice_array/requirements
	* 26_numerics/numeric_arrays/slice_array/requirements/
	explicit_instantiation.cc
	* 26_numerics/numeric_arrays/slice_array/requirements/typedefs.cc
	* 26_numerics/numeric_arrays/valarray
	* 26_numerics/numeric_arrays/valarray/27867.cc
	* 26_numerics/numeric_arrays/valarray/28277.cc
	* 26_numerics/numeric_arrays/valarray/30416.cc
	* 26_numerics/numeric_arrays/valarray/algo.cc
	* 26_numerics/numeric_arrays/valarray/binary_closure.cc
	* 26_numerics/numeric_arrays/valarray/const_bracket.cc
	* 26_numerics/numeric_arrays/valarray/dr543.cc
	* 26_numerics/numeric_arrays/valarray/name_lookup.cc
	* 26_numerics/numeric_arrays/valarray/operators.cc
	* 26_numerics/numeric_arrays/valarray/requirements
	* 26_numerics/numeric_arrays/valarray/requirements/
	explicit_instantiation.cc
	* 26_numerics/numeric_arrays/valarray/requirements/typedefs.cc
	* 26_numerics/numeric_arrays/valarray/subset_assignment.cc
	* tr1/2_general_utilities/enable_shared_from_this
	* tr1/2_general_utilities/shared_ptr
	* tr1/2_general_utilities/weak_ptr

	Deleted in testsuite:
	* 20_util/functional
	* 20_util/functional/binders
	* 20_util/functional/binders/1.cc
	* 20_util/functional/binders/3113.cc
	* 20_util/functional/comparisons.cc
	* 20_util/memory
	* 20_util/memory/16505.cc
	* 20_util/memory/allocator
	* 20_util/memory/allocator/10378.cc
	* 20_util/memory/allocator/14176.cc
	* 20_util/memory/allocator/1.cc
	* 20_util/memory/allocator/8230.cc
	* 20_util/memory/allocator/requirements
	* 20_util/memory/allocator/requirements/explicit_instantiation
	* 20_util/memory/allocator/requirements/explicit_instantiation/1.cc
	* 20_util/memory/auto_ptr
	* 20_util/memory/auto_ptr/1.cc
	* 20_util/memory/auto_ptr/2.cc
	* 20_util/memory/auto_ptr/3946.cc
	* 20_util/memory/auto_ptr/3.cc
	* 20_util/memory/auto_ptr/4.cc
	* 20_util/memory/auto_ptr/5.cc
	* 20_util/memory/auto_ptr/6.cc
	* 20_util/memory/auto_ptr/7.cc
	* 20_util/memory/auto_ptr/assign_neg.cc
	* 20_util/memory/auto_ptr/requirements
	* 20_util/memory/auto_ptr/requirements/explicit_instantiation
	* 20_util/memory/auto_ptr/requirements/explicit_instantiation/1.cc
	* 20_util/memory/raw_storage_iterator
	* 20_util/memory/raw_storage_iterator/requirements
	* 20_util/memory/raw_storage_iterator/requirements/base_classes.cc
	* 20_util/memory/raw_storage_iterator/requirements/
	explicit_instantiation
	* 20_util/memory/raw_storage_iterator/requirements/
	explicit_instantiation/1.cc
	* 20_util/memory/raw_storage_iterator/requirements/typedefs.cc
	* 20_util/memory/temporary_buffer.cc
	* 20_util/utility
	* 20_util/utility/pair
	* 20_util/utility/pair/1.cc
	* 20_util/utility/pair/2.cc
	* 20_util/utility/pair/3.cc
	* 20_util/utility/pair/4.cc
	* 20_util/utility/pair/requirements
	* 20_util/utility/pair/requirements/explicit_instantiation
	* 20_util/utility/pair/requirements/explicit_instantiation/1.cc
	* 20_util/utility/rel_ops.cc
	* 26_numerics/numeric_arrays/27867.cc
	* 26_numerics/numeric_arrays/28277.cc
	* 26_numerics/numeric_arrays/30416.cc
	* 26_numerics/numeric_arrays/binary_closure.cc
	* 26_numerics/numeric_arrays/dr543.cc
	* 26_numerics/numeric_arrays/slice_array_assignment.cc
	* 26_numerics/numeric_arrays/valarray.cc
	* 26_numerics/numeric_arrays/valarray_const_bracket.cc
	* 26_numerics/numeric_arrays/valarray_name_lookup.cc
	* 26_numerics/numeric_arrays/valarray_operators.cc
	* 26_numerics/numeric_arrays/valarray_subset_assignment.cc
	* tr1/2_general_utilities/memory
	* tr1/2_general_utilities/memory/enable_shared_from_this
	* tr1/2_general_utilities/memory/enable_shared_from_this/1.cc
	* tr1/2_general_utilities/memory/enable_shared_from_this/not_shared2.cc
	* tr1/2_general_utilities/memory/enable_shared_from_this/not_shared3.cc
	* tr1/2_general_utilities/memory/enable_shared_from_this/not_shared.cc
	* tr1/2_general_utilities/memory/enable_shared_from_this/requirements
	* tr1/2_general_utilities/memory/enable_shared_from_this/
	requirements/explicit_instantiation
	* tr1/2_general_utilities/memory/enable_shared_from_this/
	requirements/explicit_instantiation/1.cc
	* tr1/2_general_utilities/memory/enable_shared_from_this/shared.cc
	* tr1/2_general_utilities/memory/enable_shared_from_this/
	still_shared.cc
	* tr1/2_general_utilities/memory/shared_ptr
	* tr1/2_general_utilities/memory/shared_ptr/assign
	* tr1/2_general_utilities/memory/shared_ptr/assign/assign.cc
	* tr1/2_general_utilities/memory/shared_ptr/assign/auto_ptr.cc
	* tr1/2_general_utilities/memory/shared_ptr/assign/auto_ptr_neg.cc
	* tr1/2_general_utilities/memory/shared_ptr/assign/
	auto_ptr_rvalue_neg.cc
	* tr1/2_general_utilities/memory/shared_ptr/assign/dr541.cc
	* tr1/2_general_utilities/memory/shared_ptr/assign/shared_ptr.cc
	* tr1/2_general_utilities/memory/shared_ptr/assign/shared_ptr_neg.cc
	* tr1/2_general_utilities/memory/shared_ptr/casts
	* tr1/2_general_utilities/memory/shared_ptr/casts/1.cc
	* tr1/2_general_utilities/memory/shared_ptr/comparison
	* tr1/2_general_utilities/memory/shared_ptr/comparison/cmp.cc
	* tr1/2_general_utilities/memory/shared_ptr/cons
	* tr1/2_general_utilities/memory/shared_ptr/cons/auto_ptr.cc
	* tr1/2_general_utilities/memory/shared_ptr/cons/auto_ptr_neg.cc
	* tr1/2_general_utilities/memory/shared_ptr/cons/copy.cc
	* tr1/2_general_utilities/memory/shared_ptr/cons/default.cc
	* tr1/2_general_utilities/memory/shared_ptr/cons/pointer.cc
	* tr1/2_general_utilities/memory/shared_ptr/cons/weak_ptr.cc
	* tr1/2_general_utilities/memory/shared_ptr/cons/weak_ptr_expired.cc
	* tr1/2_general_utilities/memory/shared_ptr/dest
	* tr1/2_general_utilities/memory/shared_ptr/dest/dest.cc
	* tr1/2_general_utilities/memory/shared_ptr/misc
	* tr1/2_general_utilities/memory/shared_ptr/misc/24595.cc
	* tr1/2_general_utilities/memory/shared_ptr/misc/io.cc
	* tr1/2_general_utilities/memory/shared_ptr/misc/swap.cc
	* tr1/2_general_utilities/memory/shared_ptr/modifiers
	* tr1/2_general_utilities/memory/shared_ptr/modifiers/24805.cc
	* tr1/2_general_utilities/memory/shared_ptr/modifiers/reset.cc
	* tr1/2_general_utilities/memory/shared_ptr/modifiers/reset_neg.cc
	* tr1/2_general_utilities/memory/shared_ptr/modifiers/swap.cc
	* tr1/2_general_utilities/memory/shared_ptr/modifiers/swap_neg.cc
	* tr1/2_general_utilities/memory/shared_ptr/observers
	* tr1/2_general_utilities/memory/shared_ptr/observers/bool_conv.cc
	* tr1/2_general_utilities/memory/shared_ptr/observers/get.cc
	* tr1/2_general_utilities/memory/shared_ptr/observers/unique.cc
	* tr1/2_general_utilities/memory/shared_ptr/observers/use_count.cc
	* tr1/2_general_utilities/memory/shared_ptr/requirements
	* tr1/2_general_utilities/memory/shared_ptr/requirements/
	explicit_instantiation
	* tr1/2_general_utilities/memory/shared_ptr/requirements/
	explicit_instantiation/1.cc
	* tr1/2_general_utilities/memory/shared_ptr/thread
	* tr1/2_general_utilities/memory/shared_ptr/thread/
	default_weaktoshared.cc
	* tr1/2_general_utilities/memory/shared_ptr/thread/
	mutex_weaktoshared.cc
	* tr1/2_general_utilities/memory/weak_ptr
	* tr1/2_general_utilities/memory/weak_ptr/lock
	* tr1/2_general_utilities/memory/weak_ptr/lock/1.cc
	* tr1/2_general_utilities/memory/weak_ptr/requirements
	* tr1/2_general_utilities/memory/weak_ptr/requirements/
	explicit_instantiation
	* tr1/2_general_utilities/memory/weak_ptr/requirements/
	explicit_instantiation/1.cc

2007-02-20  Benjamin Kosnik  <bkoz@redhat.com>

	Revamp library API testing.

	Added in testsuite:
	* 17_intro/headers
	* 17_intro/headers/all_assert_neg.cc
	* 17_intro/headers/all_c++200x_compatibility.cc
	* 17_intro/headers/all.cc
	* 17_intro/headers/c++1998
	* 17_intro/headers/c++1998/all.cc
	* 17_intro/headers/c++1998/all_multiple_inclusion.cc
	* 17_intro/headers/c++1998/c++_for_c.tar
	* 17_intro/headers/c++1998/c++.tar
	* 17_intro/using_namespace_std.cc
	* 18_support/headers
	* 18_support/headers/cfloat
	* 18_support/headers/cfloat/values.cc
	* 18_support/headers/climits
	* 18_support/headers/climits/values.cc
	* 18_support/headers/csetjmp
	* 18_support/headers/csetjmp/functions_std.cc
	* 18_support/headers/csetjmp/macros.cc
	* 18_support/headers/csetjmp/types_std.cc
	* 18_support/headers/csignal
	* 18_support/headers/csignal/functions_std.cc
	* 18_support/headers/csignal/macros.cc
	* 18_support/headers/csignal/types_std.cc
	* 18_support/headers/cstdarg
	* 18_support/headers/cstdarg/macros.cc
	* 18_support/headers/cstdarg/types_std.cc
	* 18_support/headers/cstddef
	* 18_support/headers/cstddef/macros.cc
	* 18_support/headers/cstddef/types_std.cc
	* 18_support/headers/cstdlib
	* 18_support/headers/cstdlib/functions_std.cc
	* 18_support/headers/cstdlib/macros.cc
	* 18_support/headers/ctime
	* 18_support/headers/ctime/functions_std.cc
	* 18_support/headers/ctime/macros.cc
	* 18_support/headers/ctime/types_std.cc
	* 18_support/headers/exception
	* 18_support/headers/exception/synopsis.cc
	* 18_support/headers/exception/types_std.cc
	* 18_support/headers/limits
	* 18_support/headers/limits/synopsis.cc
	* 18_support/headers/new
	* 18_support/headers/new/synopsis.cc
	* 18_support/headers/new/types_std.cc
	* 18_support/headers/typeinfo
	* 18_support/headers/typeinfo/synopsis.cc
	* 18_support/headers/typeinfo/types_std.cc
	* 18_support/numeric_limits/is_signed.cc
	* 18_support/numeric_limits/requirements
	* 18_support/numeric_limits/requirements/explicit_instantiation
	* 18_support/numeric_limits/requirements/explicit_instantiation/1.cc
	* 18_support/numeric_limits/specialization_default_values.cc
	* 19_diagnostics/headers
	* 19_diagnostics/headers/cassert
	* 19_diagnostics/headers/cassert/macros.cc
	* 19_diagnostics/headers/cerrno
	* 19_diagnostics/headers/cerrno/macros.cc
	* 19_diagnostics/headers/stdexcept
	* 19_diagnostics/headers/stdexcept/synopsis.cc
	* 19_diagnostics/headers/stdexcept/types_std.cc
	* 20_util/headers
	* 20_util/headers/cstdlib
	* 20_util/headers/cstdlib/functions_std.cc
	* 20_util/headers/cstring
	* 20_util/headers/cstring/functions_std.cc
	* 20_util/headers/cstring/macros.cc
	* 20_util/headers/cstring/types_std.cc
	* 20_util/headers/ctime
	* 20_util/headers/ctime/functions_std.cc
	* 20_util/headers/ctime/macros.cc
	* 20_util/headers/ctime/types_std.cc
	* 20_util/headers/functional
	* 20_util/headers/functional/synopsis.cc
	* 20_util/headers/memory
	* 20_util/headers/memory/synopsis.cc
	* 20_util/headers/utility
	* 20_util/headers/utility/synopsis.cc
	* 20_util/headers/utility/using_namespace_std_rel_ops.cc
	* 20_util/memory/allocator/requirements
	* 20_util/memory/allocator/requirements/explicit_instantiation
	* 20_util/memory/allocator/requirements/explicit_instantiation/1.cc
	* 20_util/memory/auto_ptr/requirements
	* 20_util/memory/auto_ptr/requirements/explicit_instantiation
	* 20_util/memory/auto_ptr/requirements/explicit_instantiation/1.cc
	* 20_util/memory/raw_storage_iterator
	* 20_util/memory/raw_storage_iterator/requirements
	* 20_util/memory/raw_storage_iterator/requirements/base_classes.cc
	* 20_util/memory/raw_storage_iterator/requirements/
	explicit_instantiation
	* 20_util/memory/raw_storage_iterator/requirements/
	explicit_instantiation/1.cc
	* 20_util/memory/raw_storage_iterator/requirements/typedefs.cc
	* 20_util/utility/pair/requirements
	* 20_util/utility/pair/requirements/explicit_instantiation
	* 20_util/utility/pair/requirements/explicit_instantiation/1.cc
	* 21_strings/basic_string/requirements
	* 21_strings/basic_string/requirements/explicit_instantiation
	* 21_strings/basic_string/requirements/explicit_instantiation/1.cc
	* 21_strings/basic_string/requirements/explicit_instantiation/debug.cc
	* 21_strings/headers
	* 21_strings/headers/cctype
	* 21_strings/headers/cctype/functions_std.cc
	* 21_strings/headers/cstdlib
	* 21_strings/headers/cstdlib/functions_std.cc
	* 21_strings/headers/cstdlib/macros.cc
	* 21_strings/headers/cstring
	* 21_strings/headers/cstring/functions_std.cc
	* 21_strings/headers/cstring/macros.cc
	* 21_strings/headers/cstring/types_std.cc
	* 21_strings/headers/cwchar
	* 21_strings/headers/cwchar/functions_std.cc
	* 21_strings/headers/cwchar/macros.cc
	* 21_strings/headers/cwchar/types_std.cc
	* 21_strings/headers/cwctype
	* 21_strings/headers/cwctype/functions_std.cc
	* 21_strings/headers/cwctype/macros.cc
	* 21_strings/headers/cwctype/types_std.cc
	* 21_strings/headers/string
	* 21_strings/headers/string/synopsis.cc
	* 21_strings/headers/string/types_std.cc
	* 22_locale/codecvt_byname/requirements
	* 22_locale/codecvt_byname/requirements/base_classes.cc
	* 22_locale/codecvt_byname/requirements/explicit_instantiation.cc
	* 22_locale/codecvt_byname/requirements/typedefs.cc
	* 22_locale/codecvt/requirements
	* 22_locale/codecvt/requirements/base_classes.cc
	* 22_locale/codecvt/requirements/explicit_instantiation.cc
	* 22_locale/codecvt/requirements/typedefs.cc
	* 22_locale/collate_byname/requirements
	* 22_locale/collate_byname/requirements/base_classes.cc
	* 22_locale/collate_byname/requirements/explicit_instantiation.cc
	* 22_locale/collate_byname/requirements/typedefs.cc
	* 22_locale/collate/requirements
	* 22_locale/collate/requirements/base_classes.cc
	* 22_locale/collate/requirements/explicit_instantiation.cc
	* 22_locale/collate/requirements/typedefs.cc
	* 22_locale/ctype_base/mask.cc
	* 22_locale/ctype/requirements
	* 22_locale/ctype/requirements/base_classes.cc
	* 22_locale/ctype/requirements/explicit_instantiation.cc
	* 22_locale/ctype/requirements/typedefs.cc
	* 22_locale/headers
	* 22_locale/headers/clocale
	* 22_locale/headers/clocale/functions_std.cc
	* 22_locale/headers/clocale/macros.cc
	* 22_locale/headers/clocale/types_std.cc
	* 22_locale/headers/locale
	* 22_locale/headers/locale/synopsis.cc
	* 22_locale/headers/locale/types_std.cc
	* 22_locale/messages_byname/requirements
	* 22_locale/messages_byname/requirements/base_classes.cc
	* 22_locale/messages_byname/requirements/explicit_instantiation.cc
	* 22_locale/messages_byname/requirements/typedefs.cc
	* 22_locale/messages/requirements
	* 22_locale/messages/requirements/base_classes.cc
	* 22_locale/messages/requirements/explicit_instantiation.cc
	* 22_locale/messages/requirements/typedefs.cc
	* 22_locale/money_get/cons
	* 22_locale/money_get/cons/3.cc
	* 22_locale/money_get/requirements
	* 22_locale/money_get/requirements/base_classes.cc
	* 22_locale/money_get/requirements/explicit_instantiations.cc
	* 22_locale/money_get/requirements/typedefs.cc
	* 22_locale/moneypunct_byname/requirements
	* 22_locale/moneypunct_byname/requirements/base_classes.cc
	* 22_locale/moneypunct_byname/requirements/explicit_instantiation.cc
	* 22_locale/moneypunct_byname/requirements/typedefs.cc
	* 22_locale/moneypunct/requirements
	* 22_locale/moneypunct/requirements/false
	* 22_locale/moneypunct/requirements/false/base_classes.cc
	* 22_locale/moneypunct/requirements/false/explicit_instantiation.cc
	* 22_locale/moneypunct/requirements/false/intl.cc
	* 22_locale/moneypunct/requirements/false/typedefs.cc
	* 22_locale/moneypunct/requirements/true
	* 22_locale/moneypunct/requirements/true/base_classes.cc
	* 22_locale/moneypunct/requirements/true/explicit_instantiation.cc
	* 22_locale/moneypunct/requirements/true/intl.cc
	* 22_locale/moneypunct/requirements/true/typedefs.cc
	* 22_locale/money_put/cons
	* 22_locale/money_put/cons/3.cc
	* 22_locale/money_put/requirements
	* 22_locale/money_put/requirements/base_classes.cc
	* 22_locale/money_put/requirements/explicit_instantiation.cc
	* 22_locale/money_put/requirements/typedefs.cc
	* 22_locale/num_get/cons
	* 22_locale/num_get/cons/3.cc
	* 22_locale/num_get/requirements
	* 22_locale/num_get/requirements/base_classes.cc
	* 22_locale/num_get/requirements/explicit_instantiation.cc
	* 22_locale/num_get/requirements/typedefs.cc
	* 22_locale/numpunct_byname/requirements
	* 22_locale/numpunct_byname/requirements/base_classes.cc
	* 22_locale/numpunct_byname/requirements/explicit_instantiations.cc
	* 22_locale/numpunct_byname/requirements/typedefs.cc
	* 22_locale/numpunct/requirements
	* 22_locale/numpunct/requirements/base_classes.cc
	* 22_locale/numpunct/requirements/explicit_instantiations.cc
	* 22_locale/numpunct/requirements/typedefs.cc
	* 22_locale/num_put/cons
	* 22_locale/num_put/cons/3.cc
	* 22_locale/num_put/requirements
	* 22_locale/num_put/requirements/base_classes.cc
	* 22_locale/num_put/requirements/explicit_instantiations.cc
	* 22_locale/num_put/requirements/typedefs.cc
	* 22_locale/time_get/requirements
	* 22_locale/time_get/requirements/base_classes.cc
	* 22_locale/time_get/requirements/explicit_instantiations.cc
	* 22_locale/time_get/requirements/typedefs.cc
	* 22_locale/time_put/requirements
	* 22_locale/time_put/requirements/base_classes.cc
	* 22_locale/time_put/requirements/explicit_instantiations.cc
	* 22_locale/time_put/requirements/typedefs.cc
	* 23_containers/bitset/requirements
	* 23_containers/bitset/requirements/explicit_instantiation
	* 23_containers/bitset/requirements/explicit_instantiation/1.cc
	* 23_containers/deque/requirements
	* 23_containers/deque/requirements/explicit_instantiation
	* 23_containers/deque/requirements/partial_specialization
	* 23_containers/deque/requirements/partial_specialization/1.cc
	* 23_containers/headers
	* 23_containers/headers/bitset
	* 23_containers/headers/bitset/synopsis.cc
	* 23_containers/headers/deque
	* 23_containers/headers/deque/synopsis.cc
	* 23_containers/headers/list
	* 23_containers/headers/list/synopsis.cc
	* 23_containers/headers/map
	* 23_containers/headers/map/synopsis.cc
	* 23_containers/headers/queue
	* 23_containers/headers/queue/synopsis.cc
	* 23_containers/headers/set
	* 23_containers/headers/set/synopsis.cc
	* 23_containers/headers/stack
	* 23_containers/headers/stack/synopsis.cc
	* 23_containers/headers/vector
	* 23_containers/headers/vector/synopsis.cc
	* 23_containers/list/requirements
	* 23_containers/list/requirements/explicit_instantiation
	* 23_containers/list/requirements/partial_specialization
	* 23_containers/list/requirements/partial_specialization/1.cc
	* 23_containers/map/requirements
	* 23_containers/map/requirements/explicit_instantiation
	* 23_containers/map/requirements/partial_specialization
	* 23_containers/map/requirements/partial_specialization/1.cc
	* 23_containers/multimap/requirements
	* 23_containers/multimap/requirements/explicit_instantiation
	* 23_containers/multimap/requirements/partial_specialization
	* 23_containers/multimap/requirements/partial_specialization/1.cc
	* 23_containers/multiset/requirements
	* 23_containers/multiset/requirements/explicit_instantiation
	* 23_containers/multiset/requirements/partial_specialization
	* 23_containers/multiset/requirements/partial_specialization/1.cc
	* 23_containers/priority_queue/requirements
	* 23_containers/priority_queue/requirements/explicit_instantiation
	* 23_containers/priority_queue/requirements/explicit_instantiation/1.cc
	* 23_containers/queue/requirements
	* 23_containers/queue/requirements/explicit_instantiation
	* 23_containers/queue/requirements/explicit_instantiation/1.cc
	* 23_containers/set/requirements
	* 23_containers/set/requirements/explicit_instantiation
	* 23_containers/set/requirements/partial_specialization
	* 23_containers/set/requirements/partial_specialization/1.cc
	* 23_containers/stack/requirements
	* 23_containers/stack/requirements/explicit_instantiation
	* 23_containers/stack/requirements/explicit_instantiation/1.cc
	* 23_containers/vector/requirements
	* 23_containers/vector/requirements/explicit_instantiation
	* 23_containers/vector/requirements/partial_specialization
	* 23_containers/vector/requirements/partial_specialization/1.cc
	* 24_iterators/back_insert_iterator
	* 24_iterators/back_insert_iterator/2.cc
	* 24_iterators/back_insert_iterator/requirements
	* 24_iterators/back_insert_iterator/requirements/base_classes.cc
	* 24_iterators/back_insert_iterator/requirements/container.cc
	* 24_iterators/back_insert_iterator/requirements/
	explicit_instantiation.cc
	* 24_iterators/back_insert_iterator/requirements/typedefs.cc
	* 24_iterators/front_insert_iterator
	* 24_iterators/front_insert_iterator/2.cc
	* 24_iterators/front_insert_iterator/requirements
	* 24_iterators/front_insert_iterator/requirements/base_classes.cc
	* 24_iterators/front_insert_iterator/requirements/container.cc
	* 24_iterators/front_insert_iterator/requirements/
	explicit_instantiation.cc
	* 24_iterators/front_insert_iterator/requirements/typedefs.cc
	* 24_iterators/headers
	* 24_iterators/headers/iterator
	* 24_iterators/headers/iterator/synopsis.cc
	* 24_iterators/headers/iterator/types_std.cc
	* 24_iterators/insert_iterator
	* 24_iterators/insert_iterator/2.cc
	* 24_iterators/insert_iterator/requirements
	* 24_iterators/insert_iterator/requirements/base_classes.cc
	* 24_iterators/insert_iterator/requirements/container.cc
	* 24_iterators/insert_iterator/requirements/explicit_instantiation.cc
	* 24_iterators/insert_iterator/requirements/typedefs.cc
	* 24_iterators/istreambuf_iterator/requirements
	* 24_iterators/istreambuf_iterator/requirements/base_classes.cc
	* 24_iterators/istreambuf_iterator/requirements/
	explicit_instantiation.cc
	* 24_iterators/istreambuf_iterator/requirements/typedefs.cc
	* 24_iterators/istream_iterator
	* 24_iterators/istream_iterator/2.cc
	* 24_iterators/istream_iterator/requirements
	* 24_iterators/istream_iterator/requirements/base_classes.cc
	* 24_iterators/istream_iterator/requirements/explicit_instantiation.cc
	* 24_iterators/istream_iterator/requirements/typedefs.cc
	* 24_iterators/ostreambuf_iterator/requirements
	* 24_iterators/ostreambuf_iterator/requirements/base_classes.cc
	* 24_iterators/ostreambuf_iterator/requirements/
	explicit_instantiation.cc
	* 24_iterators/ostreambuf_iterator/requirements/typedefs.cc
	* 24_iterators/ostream_iterator
	* 24_iterators/ostream_iterator/requirements
	* 24_iterators/ostream_iterator/requirements/base_classes.cc
	* 24_iterators/ostream_iterator/requirements/explicit_instantiation.cc
	* 24_iterators/ostream_iterator/requirements/typedefs.cc
	* 24_iterators/random_access_iterator
	* 24_iterators/random_access_iterator/26020.cc
	* 24_iterators/random_access_iterator/string_vector_iterators.cc
	* 24_iterators/reverse_iterator/requirements
	* 24_iterators/reverse_iterator/requirements/base_classes.cc
	* 24_iterators/reverse_iterator/requirements/current.cc
	* 24_iterators/reverse_iterator/requirements/explicit_instantiation.cc
	* 24_iterators/reverse_iterator/requirements/typedefs.cc
	* 25_algorithms/headers
	* 25_algorithms/headers/algorithm
	* 25_algorithms/headers/algorithm/synopsis.cc
	* 25_algorithms/headers/cstdlib
	* 25_algorithms/headers/cstdlib/functions_std.cc
	* 26_numerics/headers
	* 26_numerics/headers/cmath
	* 26_numerics/headers/cmath/19322.cc
	* 26_numerics/headers/cmath/c99_classification_macros_c.cc
	* 26_numerics/headers/cmath/c99_classification_macros_c++.cc
	* 26_numerics/headers/cmath/c_math.cc
	* 26_numerics/headers/cmath/c_math_dynamic.cc
	* 26_numerics/headers/cmath/fabs_inline.cc
	* 26_numerics/headers/cmath/functions_std.cc
	* 26_numerics/headers/cmath/macros.cc
	* 26_numerics/headers/cmath/overloads.cc
	* 26_numerics/headers/cmath/powi.cc
	* 26_numerics/headers/complex
	* 26_numerics/headers/complex/synopsis.cc
	* 26_numerics/headers/cstdlib
	* 26_numerics/headers/cstdlib/13943.cc
	* 26_numerics/headers/cstdlib/2190.cc
	* 26_numerics/headers/cstdlib/functions_std.cc
	* 26_numerics/headers/cstdlib/macros.cc
	* 26_numerics/headers/cstdlib/types_std.cc
	* 26_numerics/headers/numeric
	* 26_numerics/headers/numeric/synopsis.cc
	* 26_numerics/headers/valarray
	* 26_numerics/headers/valarray/synopsis.cc
	* 26_numerics/headers/valarray/types_std.cc
	* 26_numerics/numeric_arrays
	* 26_numerics/numeric_operations
	* 27_io/basic_filebuf/cons/2020.cc
	* 27_io/basic_filebuf/requirements
	* 27_io/basic_filebuf/requirements/base_classes.cc
	* 27_io/basic_filebuf/requirements/explicit_instantiation.cc
	* 27_io/basic_filebuf/requirements/typedefs.cc
	* 27_io/basic_fstream/cons
	* 27_io/basic_fstream/cons/3.cc
	* 27_io/basic_fstream/requirements
	* 27_io/basic_fstream/requirements/base_classes.cc
	* 27_io/basic_fstream/requirements/explicit_instantiation.cc
	* 27_io/basic_fstream/requirements/typedefs.cc
	* 27_io/basic_ifstream/cons/2020.cc
	* 27_io/basic_ifstream/requirements
	* 27_io/basic_ifstream/requirements/base_classes.cc
	* 27_io/basic_ifstream/requirements/explicit_instantiation.cc
	* 27_io/basic_ifstream/requirements/typedefs.cc
	* 27_io/basic_ios/cons/2020.cc
	* 27_io/basic_ios/requirements
	* 27_io/basic_ios/requirements/base_classes.cc
	* 27_io/basic_ios/requirements/explicit_instantiation.cc
	* 27_io/basic_ios/requirements/typedefs.cc
	* 27_io/basic_iostream/cons
	* 27_io/basic_iostream/cons/2020.cc
	* 27_io/basic_iostream/requirements
	* 27_io/basic_iostream/requirements/base_classes.cc
	* 27_io/basic_iostream/requirements/explicit_instantiation.cc
	* 27_io/basic_iostream/requirements/typedefs.cc
	* 27_io/basic_istream/cons
	* 27_io/basic_istream/cons/3.cc
	* 27_io/basic_istream/requirements
	* 27_io/basic_istream/requirements/base_classes.cc
	* 27_io/basic_istream/requirements/explicit_instantiation.cc
	* 27_io/basic_istream/requirements/typedefs.cc
	* 27_io/basic_istringstream/cons
	* 27_io/basic_istringstream/cons/2020.cc
	* 27_io/basic_istringstream/requirements
	* 27_io/basic_istringstream/requirements/base_classes.cc
	* 27_io/basic_istringstream/requirements/explicit_instantiation.cc
	* 27_io/basic_istringstream/requirements/typedefs.cc
	* 27_io/basic_ofstream/cons/2020.cc
	* 27_io/basic_ofstream/requirements
	* 27_io/basic_ofstream/requirements/base_classes.cc
	* 27_io/basic_ofstream/requirements/explicit_instantiations.cc
	* 27_io/basic_ofstream/requirements/typedefs.cc
	* 27_io/basic_ostream/cons/2020.cc
	* 27_io/basic_ostream/requirements
	* 27_io/basic_ostream/requirements/base_classes.cc
	* 27_io/basic_ostream/requirements/explicit_instantiation.cc
	* 27_io/basic_ostream/requirements/typedefs.cc
	* 27_io/basic_ostringstream/cons/2020.cc
	* 27_io/basic_ostringstream/requirements
	* 27_io/basic_ostringstream/requirements/base_classes.cc
	* 27_io/basic_ostringstream/requirements/explicit_instantiation.cc
	* 27_io/basic_ostringstream/requirements/typedefs.cc
	* 27_io/basic_streambuf/cons/2020.cc
	* 27_io/basic_streambuf/requirements
	* 27_io/basic_streambuf/requirements/base_classes.cc
	* 27_io/basic_streambuf/requirements/typedefs.cc
	* 27_io/basic_stringbuf/cons/2020.cc
	* 27_io/basic_stringbuf/requirements
	* 27_io/basic_stringbuf/requirements/base_classes.cc
	* 27_io/basic_stringbuf/requirements/explicit_instantiation
	* 27_io/basic_stringbuf/requirements/explicit_instantiation/2.cc
	* 27_io/basic_stringbuf/requirements/explicit_instantiation/4.cc
	* 27_io/basic_stringbuf/requirements/typedefs.cc
	* 27_io/basic_stringstream/cons
	* 27_io/basic_stringstream/cons/2020.cc
	* 27_io/basic_stringstream/requirements
	* 27_io/basic_stringstream/requirements/base_classes.cc
	* 27_io/basic_stringstream/requirements/explicit_instantiation.cc
	* 27_io/basic_stringstream/requirements/typedefs.cc
	* 27_io/fpos/requirements
	* 27_io/fpos/requirements/explicit_instantiation.cc
	* 27_io/headers
	* 27_io/headers/cstdio
	* 27_io/headers/cstdio/functions_std.cc
	* 27_io/headers/cstdio/macros.cc
	* 27_io/headers/cstdio/types_std.cc
	* 27_io/headers/cstdlib
	* 27_io/headers/fstream
	* 27_io/headers/fstream/synopsis.cc
	* 27_io/headers/fstream/types_std.cc
	* 27_io/headers/iomanip
	* 27_io/headers/iomanip/synopsis.cc
	* 27_io/headers/ios
	* 27_io/headers/ios/synopsis.cc
	* 27_io/headers/iostream
	* 27_io/headers/iostream/synopsis.cc
	* 27_io/headers/iostream/types_std.cc
	* 27_io/headers/ios/types_std.cc
	* 27_io/headers/istream
	* 27_io/headers/istream/synopsis.cc
	* 27_io/headers/istream/types_std.cc
	* 27_io/headers/ostream
	* 27_io/headers/ostream/synopsis.cc
	* 27_io/headers/ostream/types_std.cc
	* 27_io/headers/sstream
	* 27_io/headers/sstream/synopsis.cc
	* 27_io/headers/sstream/types_std.cc
	* 27_io/headers/streambuf
	* 27_io/headers/streambuf/synopsis.cc
	* 27_io/headers/streambuf/types_std.cc
	* ext/debug_allocator/explicit_instantiation.cc
	* ext/hash_map/requirements
	* ext/hash_map/requirements/explicit_instantiation.cc
	* ext/hash_set/requirements
	* ext/hash_set/requirements/explicit_instantiation.cc
	* ext/malloc_allocator/explicit_instantiation.cc
	* ext/mt_allocator/explicit_instantiation.cc
	* ext/pool_allocator/explicit_instantiation.cc
	* ext/slist/requirements
	* ext/slist/requirements/explicit_instantiation.cc
	* ext/stdio_filebuf/requirements
	* ext/stdio_filebuf/requirements/explicit_instantiation.cc
	* ext/vstring/requirements
	* ext/vstring/requirements/explicit_instantiation
	* tr1/2_general_utilities/headers
	* tr1/2_general_utilities/headers/functional
	* tr1/2_general_utilities/headers/functional/synopsis.cc
	* tr1/2_general_utilities/headers/memory
	* tr1/2_general_utilities/headers/memory/synopsis.cc
	* tr1/2_general_utilities/headers/memory/types_std_tr1.cc
	* tr1/2_general_utilities/memory/enable_shared_from_this/requirements
	* tr1/2_general_utilities/memory/enable_shared_from_this/
	requirements/explicit_instantiation
	* tr1/2_general_utilities/memory/shared_ptr/requirements
	* tr1/2_general_utilities/memory/shared_ptr/requirements/
	explicit_instantiation
	* tr1/2_general_utilities/memory/weak_ptr/requirements
	* tr1/2_general_utilities/memory/weak_ptr/requirements/
	explicit_instantiation
	* tr1/3_function_objects/headers
	* tr1/3_function_objects/headers/functional
	* tr1/3_function_objects/headers/functional/synopsis.cc
	* tr1/3_function_objects/headers/functional/types_std_tr1.cc
	* tr1/3_function_objects/headers/functional/
	using_namespace_std_tr1_placeholders.cc
	* tr1/4_metaprogramming/headers
	* tr1/4_metaprogramming/headers/type_traits
	* tr1/4_metaprogramming/headers/type_traits/synopsis.cc
	* tr1/4_metaprogramming/headers/type_traits/types_std_tr1.cc
	* tr1/5_numerical_facilities/headers
	* tr1/5_numerical_facilities/headers/random
	* tr1/5_numerical_facilities/headers/random/synopsis.cc
	* tr1/5_numerical_facilities/headers/random/types_std_tr1.cc
	* tr1/5_numerical_facilities/random/discard_block/
	requirements/typedefs.cc
	* tr1/6_containers/array/requirements/explicit_instantiation.cc
	* tr1/6_containers/hash
	* tr1/6_containers/hash/requirements
	* tr1/6_containers/hash/requirements/base_classes.cc
	* tr1/6_containers/hash/requirements/explicit_instantiation.cc
	* tr1/6_containers/headers
	* tr1/6_containers/headers/array
	* tr1/6_containers/headers/array/synopsis.cc
	* tr1/6_containers/headers/functional
	* tr1/6_containers/headers/functional/synopsis.cc
	* tr1/6_containers/headers/tuple
	* tr1/6_containers/headers/tuple/synopsis.cc
	* tr1/6_containers/headers/tuple/types_std_tr1.cc
	* tr1/6_containers/headers/unordered_map
	* tr1/6_containers/headers/unordered_map/synopsis.cc
	* tr1/6_containers/headers/unordered_set
	* tr1/6_containers/headers/unordered_set/synopsis.cc
	* tr1/6_containers/tuple/requirements
	* tr1/6_containers/tuple/requirements/explicit_instantiation.cc
	* tr1/6_containers/unordered_map
	* tr1/6_containers/unordered_map/24064.cc
	* tr1/6_containers/unordered_map/capacity
	* tr1/6_containers/unordered_map/capacity/29134-map.cc
	* tr1/6_containers/unordered_map/erase
	* tr1/6_containers/unordered_map/erase/24061-map.cc
	* tr1/6_containers/unordered_map/find
	* tr1/6_containers/unordered_map/find/map1.cc
	* tr1/6_containers/unordered_map/insert
	* tr1/6_containers/unordered_map/insert/24061-map.cc
	* tr1/6_containers/unordered_map/insert/array_syntax.cc
	* tr1/6_containers/unordered_map/insert/map_range.cc
	* tr1/6_containers/unordered_map/insert/map_single.cc
	* tr1/6_containers/unordered_map/requirements
	* tr1/6_containers/unordered_map/requirements/explicit_instantiation.cc
	* tr1/6_containers/unordered_map/requirements/iterator_neg.cc
	* tr1/6_containers/unordered_map/requirements/iterator_null_neg.cc
	* tr1/6_containers/unordered_map/swap
	* tr1/6_containers/unordered_map/swap/1.cc
	* tr1/6_containers/unordered_map/swap/2.cc
	* tr1/6_containers/unordered_multimap
	* tr1/6_containers/unordered_multimap/capacity
	* tr1/6_containers/unordered_multimap/capacity/29134-multimap.cc
	* tr1/6_containers/unordered_multimap/erase
	* tr1/6_containers/unordered_multimap/erase/24061-multimap.cc
	* tr1/6_containers/unordered_multimap/find
	* tr1/6_containers/unordered_multimap/find/multimap1.cc
	* tr1/6_containers/unordered_multimap/insert
	* tr1/6_containers/unordered_multimap/insert/24061-multimap.cc
	* tr1/6_containers/unordered_multimap/insert/multimap_range.cc
	* tr1/6_containers/unordered_multimap/insert/multimap_single.cc
	* tr1/6_containers/unordered_multimap/requirements
	* tr1/6_containers/unordered_multimap/requirements/
	explicit_instantiation.cc
	* tr1/6_containers/unordered_multimap/requirements/iterator_neg.cc
	* tr1/6_containers/unordered_multimap/requirements/iterator_null_neg.cc
	* tr1/6_containers/unordered_multimap/swap
	* tr1/6_containers/unordered_multimap/swap/1.cc
	* tr1/6_containers/unordered_multimap/swap/2.cc
	* tr1/6_containers/unordered_multiset
	* tr1/6_containers/unordered_multiset/24054.cc
	* tr1/6_containers/unordered_multiset/capacity
	* tr1/6_containers/unordered_multiset/capacity/29134-multiset.cc
	* tr1/6_containers/unordered_multiset/erase
	* tr1/6_containers/unordered_multiset/erase/24061-multiset.cc
	* tr1/6_containers/unordered_multiset/find
	* tr1/6_containers/unordered_multiset/find/multiset1.cc
	* tr1/6_containers/unordered_multiset/insert
	* tr1/6_containers/unordered_multiset/insert/24061-multiset.cc
	* tr1/6_containers/unordered_multiset/insert/multiset_range.cc
	* tr1/6_containers/unordered_multiset/insert/multiset_single.cc
	* tr1/6_containers/unordered_multiset/requirements
	* tr1/6_containers/unordered_multiset/requirements/
	explicit_instantiation.cc
	* tr1/6_containers/unordered_multiset/requirements/iterator_neg.cc
	* tr1/6_containers/unordered_multiset/requirements/iterator_null_neg.cc
	* tr1/6_containers/unordered_multiset/swap
	* tr1/6_containers/unordered_multiset/swap/1.cc
	* tr1/6_containers/unordered_multiset/swap/2.cc
	* tr1/6_containers/unordered_set
	* tr1/6_containers/unordered_set/23053.cc
	* tr1/6_containers/unordered_set/23465.cc
	* tr1/6_containers/unordered_set/26127.cc
	* tr1/6_containers/unordered_set/26132.cc
	* tr1/6_containers/unordered_set/capacity
	* tr1/6_containers/unordered_set/capacity/29134-set.cc
	* tr1/6_containers/unordered_set/erase
	* tr1/6_containers/unordered_set/erase/24061-set.cc
	* tr1/6_containers/unordered_set/find
	* tr1/6_containers/unordered_set/find/set1.cc
	* tr1/6_containers/unordered_set/insert
	* tr1/6_containers/unordered_set/insert/24061-set.cc
	* tr1/6_containers/unordered_set/insert/set_range.cc
	* tr1/6_containers/unordered_set/insert/set_single.cc
	* tr1/6_containers/unordered_set/requirements
	* tr1/6_containers/unordered_set/requirements/explicit_instantiation.cc
	* tr1/6_containers/unordered_set/requirements/iterator_neg.cc
	* tr1/6_containers/unordered_set/requirements/iterator_null_neg.cc
	* tr1/6_containers/unordered_set/requirements/
	iterators_default_constructor.cc
	* tr1/6_containers/unordered_set/swap
	* tr1/6_containers/unordered_set/swap/1.cc
	* tr1/6_containers/unordered_set/swap/2.cc
	* tr1/using_namespace_std_tr1.cc

	Deleted in testsuite:
	* 17_intro/header_cassert.cc
	* 17_intro/header_cerrno.cc
	* 17_intro/header_csetjmp.cc
	* 17_intro/header_cstdarg.cc
	* 17_intro/header_cstddef.cc
	* 17_intro/header_cstdio.cc
	* 17_intro/header_cstdlib.cc
	* 17_intro/header_cstring.cc
	* 17_intro/header_ctime.cc
	* 17_intro/header_cwchar.cc
	* 17_intro/header_cwctype.cc
	* 17_intro/header_fstream.cc
	* 17_intro/header_iomanip.cc
	* 17_intro/header_ios.cc
	* 17_intro/header_iosfwd.cc
	* 17_intro/header_iostream.cc
	* 17_intro/header_istream.cc
	* 17_intro/header_ostream.cc
	* 17_intro/headers.cc
	* 17_intro/headers_c++_c++0x_compat.cc
	* 17_intro/headers_c.cc
	* 17_intro/headers_c++.cc
	* 17_intro/header_sstream.cc
	* 17_intro/header_streambuf.cc
	* 17_intro/no_assert_neg.cc
	* 18_support/numeric_limits/sign.cc
	* 18_support/numeric_limits/specialization.cc
	* 20_util/memory/raw_storage_iterator.cc
	* 21_strings/basic_string/1.cc
	* 21_strings/basic_string/2.cc
	* 22_locale/codecvt/1.cc
	* 22_locale/codecvt/2.cc
	* 22_locale/codecvt_byname/1.cc
	* 22_locale/collate/1.cc
	* 22_locale/collate/2.cc
	* 22_locale/collate_byname/1.cc
	* 22_locale/ctype/1.cc
	* 22_locale/ctype_base/1.cc
	* 22_locale/messages/1.cc
	* 22_locale/messages/2.cc
	* 22_locale/messages_byname/1.cc
	* 22_locale/money_get/1.cc
	* 22_locale/money_get/2.cc
	* 22_locale/money_get/3.cc
	* 22_locale/moneypunct/1.cc
	* 22_locale/moneypunct/2.cc
	* 22_locale/moneypunct/3.cc
	* 22_locale/moneypunct_byname/1.cc
	* 22_locale/money_put/1.cc
	* 22_locale/money_put/2.cc
	* 22_locale/money_put/3.cc
	* 22_locale/num_get/1.cc
	* 22_locale/num_get/2.cc
	* 22_locale/num_get/3.cc
	* 22_locale/numpunct/1.cc
	* 22_locale/numpunct/2.cc
	* 22_locale/numpunct_byname/1.cc
	* 22_locale/num_put/1.cc
	* 22_locale/num_put/2.cc
	* 22_locale/num_put/3.cc
	* 22_locale/time_get/1.cc
	* 22_locale/time_get/2.cc
	* 22_locale/time_put/1.cc
	* 22_locale/time_put/2.cc
	* 23_containers/deque/1.cc
	* 23_containers/deque/explicit_instantiation
	* 23_containers/deque/explicit_instantiation/1.cc
	* 23_containers/deque/explicit_instantiation/2.cc
	* 23_containers/deque/explicit_instantiation/3.cc
	* 23_containers/list/1.cc
	* 23_containers/list/explicit_instantiation
	* 23_containers/list/explicit_instantiation/1.cc
	* 23_containers/list/explicit_instantiation/2.cc
	* 23_containers/list/explicit_instantiation/3.cc
	* 23_containers/map/1.cc
	* 23_containers/map/explicit_instantiation
	* 23_containers/map/explicit_instantiation/1.cc
	* 23_containers/map/explicit_instantiation/2.cc
	* 23_containers/map/explicit_instantiation/3.cc
	* 23_containers/multimap/1.cc
	* 23_containers/multimap/explicit_instantiation
	* 23_containers/multimap/explicit_instantiation/1.cc
	* 23_containers/multimap/explicit_instantiation/2.cc
	* 23_containers/multimap/explicit_instantiation/3.cc
	* 23_containers/multiset/1.cc
	* 23_containers/multiset/explicit_instantiation
	* 23_containers/multiset/explicit_instantiation/1.cc
	* 23_containers/multiset/explicit_instantiation/2.cc
	* 23_containers/multiset/explicit_instantiation/3.cc
	* 23_containers/set/1.cc
	* 23_containers/set/explicit_instantiation
	* 23_containers/set/explicit_instantiation/1.cc
	* 23_containers/set/explicit_instantiation/2.cc
	* 23_containers/set/explicit_instantiation/3.cc
	* 23_containers/vector/1.cc
	* 23_containers/vector/explicit_instantiation
	* 23_containers/vector/explicit_instantiation/1.cc
	* 23_containers/vector/explicit_instantiation/2.cc
	* 23_containers/vector/explicit_instantiation/3.cc
	* 24_iterators/26020.cc
	* 24_iterators/back_insert_iterator.cc
	* 24_iterators/front_insert_iterator.cc
	* 24_iterators/insert_iterator.cc
	* 24_iterators/istreambuf_iterator/1.cc
	* 24_iterators/istream_iterator.cc
	* 24_iterators/iterator.cc
	* 24_iterators/ostreambuf_iterator/1.cc
	* 24_iterators/ostream_iterator.cc
	* 24_iterators/reverse_iterator/1.cc
	* 26_numerics/cmath
	* 26_numerics/cmath/19322.cc
	* 26_numerics/cmath/c99_classification_macros_c.cc
	* 26_numerics/cmath/c99_classification_macros_c++.cc
	* 26_numerics/cmath/c_math.cc
	* 26_numerics/cmath/c_math_dynamic.cc
	* 26_numerics/cmath/fabs_inline.cc
	* 26_numerics/cmath/overloads.cc
	* 26_numerics/cmath/powi.cc
	* 26_numerics/cstdlib
	* 26_numerics/cstdlib/13943.cc
	* 26_numerics/numeric
	* 26_numerics/numeric/sum_diff.cc
	* 26_numerics/valarray
	* 26_numerics/valarray/27867.cc
	* 26_numerics/valarray/28277.cc
	* 26_numerics/valarray/30416.cc
	* 26_numerics/valarray/binary_closure.cc
	* 26_numerics/valarray/dr543.cc
	* 26_numerics/valarray/slice_array_assignment.cc
	* 26_numerics/valarray/slice.cc
	* 26_numerics/valarray/valarray.cc
	* 26_numerics/valarray/valarray_const_bracket.cc
	* 26_numerics/valarray/valarray_name_lookup.cc
	* 26_numerics/valarray/valarray_operators.cc
	* 26_numerics/valarray/valarray_subset_assignment.cc
	* 27_io/basic_filebuf/1.cc
	* 27_io/basic_filebuf/2.cc
	* 27_io/basic_filebuf/3.cc
	* 27_io/basic_filebuf/4.cc
	* 27_io/basic_fstream/1.cc
	* 27_io/basic_fstream/2.cc
	* 27_io/basic_fstream/3.cc
	* 27_io/basic_fstream/4.cc
	* 27_io/basic_ifstream/1.cc
	* 27_io/basic_ifstream/2.cc
	* 27_io/basic_ifstream/3.cc
	* 27_io/basic_ifstream/4.cc
	* 27_io/basic_ios/1.cc
	* 27_io/basic_ios/2.cc
	* 27_io/basic_ios/3.cc
	* 27_io/basic_ios/4.cc
	* 27_io/basic_iostream/1.cc
	* 27_io/basic_iostream/2.cc
	* 27_io/basic_iostream/3.cc
	* 27_io/basic_iostream/4.cc
	* 27_io/basic_istream/1.cc
	* 27_io/basic_istream/2.cc
	* 27_io/basic_istream/3.cc
	* 27_io/basic_istream/4.cc
	* 27_io/basic_istringstream/1.cc
	* 27_io/basic_istringstream/2.cc
	* 27_io/basic_istringstream/3.cc
	* 27_io/basic_istringstream/4.cc
	* 27_io/basic_ofstream/1.cc
	* 27_io/basic_ofstream/2.cc
	* 27_io/basic_ofstream/3.cc
	* 27_io/basic_ofstream/4.cc
	* 27_io/basic_ostream/1.cc
	* 27_io/basic_ostream/2.cc
	* 27_io/basic_ostream/3.cc
	* 27_io/basic_ostream/4.cc
	* 27_io/basic_ostringstream/1.cc
	* 27_io/basic_ostringstream/2.cc
	* 27_io/basic_ostringstream/3.cc
	* 27_io/basic_ostringstream/4.cc
	* 27_io/basic_streambuf/1.cc
	* 27_io/basic_streambuf/2.cc
	* 27_io/basic_streambuf/3.cc
	* 27_io/basic_stringbuf/1.cc
	* 27_io/basic_stringbuf/2.cc
	* 27_io/basic_stringbuf/3.cc
	* 27_io/basic_stringbuf/4.cc
	* 27_io/basic_stringbuf/5.cc
	* 27_io/basic_stringstream/1.cc
	* 27_io/basic_stringstream/2.cc
	* 27_io/basic_stringstream/3.cc
	* 27_io/basic_stringstream/4.cc
	* 27_io/fpos/1.cc
	* ext/debug_allocator/instantiate.cc
	* ext/hash_map/instantiate.cc
	* ext/hash_set/instantiate.cc
	* ext/malloc_allocator/instantiate.cc
	* ext/mt_allocator/instantiate.cc
	* ext/pool_allocator/instantiate.cc
	* ext/slist/instantiate.cc
	* ext/stdio_filebuf/char/1.cc
	* ext/vstring/explicit_instantiation
	* ext/vstring/explicit_instantiation/1.cc
	* ext/vstring/explicit_instantiation/2.cc
	* ext/vstring/explicit_instantiation/char
	* ext/vstring/explicit_instantiation/char/1.cc
	* ext/vstring/explicit_instantiation/wchar_t
	* ext/vstring/explicit_instantiation/wchar_t/1.cc
	* tr1/2_general_utilities/memory/enable_shared_from_this/
	explicit_instantiation
	* tr1/2_general_utilities/memory/enable_shared_from_this/
	explicit_instantiation/1.cc
	* tr1/2_general_utilities/memory/shared_ptr/explicit_instantiation
	* tr1/2_general_utilities/memory/shared_ptr/explicit_instantiation/1.cc
	* tr1/2_general_utilities/memory/weak_ptr/explicit_instantiation
	* tr1/2_general_utilities/memory/weak_ptr/explicit_instantiation/1.cc
	* tr1/5_numerical_facilities/random/discard_block/requirements/
	requirements.cc
	* tr1/6_containers/array/requirements/instantiate.cc
	* tr1/6_containers/unordered
	* tr1/6_containers/unordered/23781.cc
	* tr1/6_containers/unordered/capacity
	* tr1/6_containers/unordered/capacity/29134-map.cc
	* tr1/6_containers/unordered/capacity/29134-multimap.cc
	* tr1/6_containers/unordered/capacity/29134-multiset.cc
	* tr1/6_containers/unordered/capacity/29134-set.cc
	* tr1/6_containers/unordered/erase
	* tr1/6_containers/unordered/erase/24061-map.cc
	* tr1/6_containers/unordered/erase/24061-multimap.cc
	* tr1/6_containers/unordered/erase/24061-multiset.cc
	* tr1/6_containers/unordered/erase/24061-set.cc
	* tr1/6_containers/unordered/find
	* tr1/6_containers/unordered/find/map1.cc
	* tr1/6_containers/unordered/find/multimap1.cc
	* tr1/6_containers/unordered/find/multiset1.cc
	* tr1/6_containers/unordered/find/set1.cc
	* tr1/6_containers/unordered/hash
	* tr1/6_containers/unordered/hash/24799.cc
	* tr1/6_containers/unordered/hashtable
	* tr1/6_containers/unordered/hashtable/23053.cc
	* tr1/6_containers/unordered/hashtable/23465.cc
	* tr1/6_containers/unordered/hashtable/24054.cc
	* tr1/6_containers/unordered/hashtable/24064.cc
	* tr1/6_containers/unordered/hashtable/26127.cc
	* tr1/6_containers/unordered/hashtable/26132.cc
	* tr1/6_containers/unordered/hashtable/iterators_default_constructor.cc
	* tr1/6_containers/unordered/insert
	* tr1/6_containers/unordered/insert/24061-map.cc
	* tr1/6_containers/unordered/insert/24061-multimap.cc
	* tr1/6_containers/unordered/insert/24061-multiset.cc
	* tr1/6_containers/unordered/insert/24061-set.cc
	* tr1/6_containers/unordered/insert/array_syntax.cc
	* tr1/6_containers/unordered/insert/map_range.cc
	* tr1/6_containers/unordered/insert/map_single.cc
	* tr1/6_containers/unordered/insert/multimap_range.cc
	* tr1/6_containers/unordered/insert/multimap_single.cc
	* tr1/6_containers/unordered/insert/multiset_range.cc
	* tr1/6_containers/unordered/insert/multiset_single.cc
	* tr1/6_containers/unordered/insert/set_range.cc
	* tr1/6_containers/unordered/insert/set_single.cc
	* tr1/6_containers/unordered/instantiate
	* tr1/6_containers/unordered/instantiate/hash.cc
	* tr1/6_containers/unordered/instantiate/map.cc
	* tr1/6_containers/unordered/instantiate/multimap.cc
	* tr1/6_containers/unordered/instantiate/multiset.cc
	* tr1/6_containers/unordered/instantiate/set.cc
	* tr1/6_containers/unordered/swap
	* tr1/6_containers/unordered/swap/unordered_map
	* tr1/6_containers/unordered/swap/unordered_map/1.cc
	* tr1/6_containers/unordered/swap/unordered_map/2.cc
	* tr1/6_containers/unordered/swap/unordered_multimap
	* tr1/6_containers/unordered/swap/unordered_multimap/1.cc
	* tr1/6_containers/unordered/swap/unordered_multimap/2.cc
	* tr1/6_containers/unordered/swap/unordered_multiset
	* tr1/6_containers/unordered/swap/unordered_multiset/1.cc
	* tr1/6_containers/unordered/swap/unordered_multiset/2.cc
	* tr1/6_containers/unordered/swap/unordered_set
	* tr1/6_containers/unordered/swap/unordered_set/1.cc
	* tr1/6_containers/unordered/swap/unordered_set/2.cc
	* tr1/6_containers/unordered/types
	* tr1/6_containers/unordered/types/map_iterator.cc
	* tr1/6_containers/unordered/types/multimap_iterator.cc
	* tr1/6_containers/unordered/types/multiset_iterator.cc
	* tr1/6_containers/unordered/types/set_iterator.cc

	* testsuite/24_iterators/reverse_iterator/2.cc: To just one
	non-requirements test.
	* testsuite/ext/headers.cc: Add new includes.

2007-02-18  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/28080 (partial)
	* include/bits/stl_algobase.h: Do not include <climits>, use
	std::numeric_limits.
	* include/bits/stl_bvector.h: Use __CHAR_BIT__.
	* config/locale/gnu/codecvt_members.cc: Include <climits>.
	* config/locale/generic/codecvt_members.cc: Likewise.
	* include/std/string: Do not include <algorithm>; do not include
	<memory>, include <bits/allocator.h> instead.
	* include/ext/vstring_fwd.h: Likewise.
	* include/ext/vstring_util.h: Do not include <algorithm>.
	* include/tr1/hashtable_policy.h: Include <algorithm>.
	* testsuite/21_strings/basic_string/replace/char/1.cc: Likewise.
	* testsuite/21_strings/basic_string/replace/wchar_t/1.cc: Likewise.
	* testsuite/23_containers/bitset/cons/1.cc: Likewise.
	* testsuite/util/testsuite_character.h: Likewise.

	* config/locale/gnu/codecvt_members.cc: Also include <cstdlib>,
	for MB_CUR_MAX.
	* config/locale/generic/codecvt_members.cc: Likewise.

2007-02-16  Paolo Carlini  <pcarlini@suse.de>

	Revert.
	2007-02-14  Hans-Peter Nilsson  <hp@axis.com>

	PR middle-end/30768
	* testsuite/ext/pb_ds/regression/list_update_data_map_rand.cc:
	Xfail ICE for cris-*-*.

2007-02-14  Hans-Peter Nilsson  <hp@axis.com>

	PR middle-end/30768
	* testsuite/ext/pb_ds/regression/list_update_data_map_rand.cc:
	Xfail ICE for cris-*-*.

2007-02-14  Benjamin Kosnik  <bkoz@redhat.com>

	* configure.ac: Move AM_ICONV to native-only, add HAVE_ICONV for
        newlib.
	* configure: Regenerate.

2007-02-13  Dirk Mueller  <dmueller@suse.de>

	* include/bits/locale_facets.tcc (num_get<>::do_get): Avoid
	warning about ambiguous else.

2007-02-12  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/21172
	* include/bits/stl_heap.h (__adjust_heap(_RandomAccessIterator,
	_Distance, _Distance, _Tp), __adjust_heap(_RandomAccessIterator,
	_Distance, _Distance, _Tp, _Compare)): Avoid potential integer
	overflow.

	* include/bits/stl_heap.h (__is_heap(_RandomAccessIterator,
	_RandomAccessIterator), __is_heap(_RandomAccessIterator,
	_RandomAccessIterator, _StrictWeakOrdering): Mark inline.
	(make_heap(_RandomAccessIterator, _RandomAccessIterator,
	_Compare)): Do not mark inline.

	* include/bits/stl_heap.h (push_heap(_RandomAccessIterator,
	_RandomAccessIterator), sort_heap(_RandomAccessIterator,
	_RandomAccessIterator)): Uncomment __glibcxx_requires_heap.

2007-02-09  Richard Sandiford  <richard@codesourcery.com>

	* testsuite/22_locale/time_put/put/wchar_t/1.cc: XFAIL if
	dummy_wcsftime.
	* testsuite/22_locale/time_put/put/wchar_t/5.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/9.cc: Likewise.
	* testsuite/22_locale/time_put/put/wchar_t/10.cc: Likewise.
	* testsuite/22_locale/num_get/get/wchar_t/2.cc: XFAIL if lax_strtofp.
	* testsuite/22_locale/num_get/get/char/2.cc: Likewise.
	* testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/12.cc:
	Likewise.
	* testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/09.cc:
	Likewise.
	* testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc:
	Likewise.
	* testsuite/27_io/basic_istream/extractors_arithmetic/char/09.cc:
	Likewise.
	* testsuite/27_io/basic_ostream/inserters_arithmetic/wchar_t/6.cc:
	Likewise.
	* testsuite/27_io/basic_ostream/inserters_arithmetic/char/6.cc:
	Likewise.
	* testsuite/26_numerics/cmath/c99_classification_macros_c++.cc: XFAIL
	for uClibc.
	* testsuite/26_numerics/cmath/c99_classification_macros_c.cc: Likewise.

2007-02-09  Paolo Carlini  <pcarlini@suse.de>

	* scripts/testsuite_flags.in: Add back @LIBICONV@ to SECTIONLDFLAGS.

2007-02-08  Howard Hinnant  <hhinnant@apple.com>

	PR libstdc++/17012
	* include/bits/list.tcc (list<>::remove): Take care of
	&*__first == &__value.
	* docs/html/ext/howto.html: Add an entry for DR 526.

2007-02-07  Jakub Jelinek  <jakub@redhat.com>

	PR libgomp/28468
	* configure: Regenerate.

2007-02-07  Hans-Peter Nilsson  <hp@axis.com>

	PR testsuite/28870
	* testsuite/27_io/basic_stringbuf/overflow/char/1.cc: Use only
	10000 iterations for simulator targets.
	* testsuite/ext/pb_ds/regression/tree_data_map_rand.cc: Use only 5
	iterations for simulator targets.
	* testsuite/ext/pb_ds/regression/tree_no_data_map_rand.cc: Ditto.
	* testsuite/ext/pb_ds/regression/trie_data_map_rand.cc: Ditto.
	* testsuite/ext/pb_ds/regression/trie_no_data_map_rand.cc: Ditto.
	* testsuite/ext/pb_ds/regression/hash_no_data_map_rand.cc: Ditto.
	* testsuite/ext/pb_ds/regression/hash_data_map_rand.cc: Ditto.
	* testsuite/ext/pb_ds/regression/priority_queue_rand.cc: Ditto.
	* testsuite/23_containers/set/modifiers/16728.cc: Use only 10
	iterations for simulator targets.

2007-02-06  Benjamin Kosnik  <bkoz@redhat.com>
            Marco Trudel  <mtrudel@gmx.ch>

	* include/precompiled/extc++.h: Guard include files that assume
	iconv support is present from precompilation via
	_GLIBCXX_HAVE_ICONV.

2007-02-05  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_deque.h (operator<): Qualify call.

2007-02-02  Benjamin Kosnik  <bkoz@redhat.com>

	* include/bits/c++config: Consistent macro guards for config includes.
	* config/locale/gnu/c_locale.h: Same.
	* config/locale/generic/c_locale.h: Same.
	* config/allocator/mt_allocator_base.h: Same.
	* config/allocator/malloc_allocator_base.h: Same.
	* config/allocator/new_allocator_base.h: Same.
	* config/allocator/pool_allocator_base.h: Same.
	* config/allocator/bitmap_allocator_base.h: Same.
	* config/os/vxworks/os_defines.h: Same.
	* config/cpu/sh/atomicity.h: Same.
	* config/io/c_io_stdio.h: Same.
	* config/io/basic_file_stdio.h: Same.

2007-02-01  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/14493
	* libsupc++/typeinfo (bad_cast::what, bad_typeid::what): Declare.
	* libsupc++/tinfo.cc: Define.
	* libsupc++/exception (bad_exception::what): Declare.
	* libsupc++/eh_exception.cc: Define.
	(exception::what): Adjust, don't use typeid.
	* libsupc++/new (bad_alloc::what): Declare.
	* libsupc++/new_handler.cc: Define.
	* config/abi/pre/gnu.ver: Export the new methods @3.4.9; adjust
	existing 3.4.10 exports to 3.4.9.
	* configure.ac: Adjust to 6.0.9.
	* configure: Regenerate.
	* testsuite/util/testsuite_abi.cc: Update.
	* testsuite/18_support/14493.cc: New.

2007-02-01  Ben Elliston  <bje@au.ibm.com>

	* libsupc++/eh_alloc.cc (__cxa_free_exception): Don't refer to the
	emergency_buffer using `&array[0][0]' notation, use `array'.

2007-01-30  Benjamin Kosnik  <bkoz@redhat.com>

	PR libstdc++/30571
	* include/ext/pb_ds/detail/type_utils.hpp: Use C++0x
	static_assert if available, if not, centralize PB_DS_STATIC_ASSERT
	definition here.
	* include/ext/pb_ds/detail/resize_policy/
	cc_hash_max_collision_check_resize_trigger_imp.hpp: Remove
	PB_DS_STATIC_ASSERT definition.
	* include/ext/pb_ds/detail/resize_policy/
	hash_load_check_resize_trigger_imp.hpp: Same.
	* include/ext/pb_ds/detail/resize_policy/
	hash_standard_resize_policy_imp.hpp: Same.
	* include/ext/pb_ds/detail/cc_hash_table_map_/cc_ht_map_.hpp: Same.
	* include/ext/pb_ds/detail/pat_trie_/pat_trie_.hpp: Same.
	* include/ext/pb_ds/detail/pat_trie_/internal_node.hpp: Same.
	* include/ext/pb_ds/detail/gp_hash_table_map_/gp_ht_map_.hpp: Same.
	* include/ext/pb_ds/detail/ov_tree_map_/node_iterators.hpp: Same.
	* include/ext/pb_ds/trie_policy.hpp: Same.
	* testsuite/util/performance/assoc/timing/
	tree_order_statistics_test.hpp: Same.
	* testsuite/ext/pb_ds/example/hash_resize_neg.cc: Adjust line numbers.
	* testsuite/17_intro/headers_c++_c++0x_compat.cc: New.

	* include/precompiled/extc++.h: Update to current list of ext files.

2007-01-29  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_uninitialized.h (uninitialized_copy(const char*,
	const char*, char*), uninitialized_copy(const wchar_t*, const wchar_t*,
	wchar_t*)): Remove, just forward to std::copy.

2007-01-29  Benjamin Kosnik  <bkoz@redhat.com>

	* include/ext/enc_filebuf.h: Resurrect, update.
	* include/ext/codecvt_specializations.h: Remove
        _GLIBCXX_USE_ICONV, _GLIBCXX_USE_ENCODING_STATE.
	* include/bits/localefwd.h: Remove declaration for __enc_traits.
	* docs/html/22_locale/codecvt.html: Change __enc_traits to
	encoding_state.
	* scripts/testsuite_flags.in: Remove ICONV.

	* configure.ac: Remove GLIBCXX_CHECK_ICONV_SUPPORT.
	* acinclude.m4 (GLIBCXX_CHECK_ICONV_SUPPORT): Remove.
	* crossconfig.m4: Remove use of GLIBCXX_CHECK_ICONV_SUPPORT.
	* config.h.in: Remove HAVE_ICONV_CLOSE, HAVE_ICONV_OPEN,
	HAVE_NL_LANGINFO, _GLIBCXX_USE_ICONV.
	* include/Makefile.am: Uglify ICONV_CONST.
	* configure: Regenerate.
	* aclocal.m4: Regenerate.
	* Makefile.in: Regenerate.
	* src/Makefile.in: Regenerate.
	* po/Makefile.in: Regenerate.
	* libmath/Makefile.in: Regenerate.
	* include/Makefile.in: Regenerate.
	* libsupc++/Makefile.in: Regenerate.
	* testsuite/Makefile.in: Regenerate.

	* testsuite/ext/enc_filebuf/wchar_t/13189.cc: Use
	dg-require-iconv, fix up for encoding_state changes.
	* testsuite/ext/enc_filebuf/char/13189.cc: Same.
	* testsuite/ext/enc_filebuf/char/13598.cc: Same.
	* testsuite/22_locale/codecvt/unicode: Move...
	* testsuite/22_locale/codecvt/unicode/char.cc: Move...
	* testsuite/22_locale/codecvt/unicode/1.cc: Move...
	* testsuite/22_locale/codecvt/unicode/wchar_t.cc: Move...
	* testsuite/ext/codecvt: New.
	* testsuite/ext/codecvt/char-1.cc: ...here. Also, use dg-require-iconv.
	* testsuite/ext/codecvt/char-2.cc: ...here. Same.
	* testsuite/ext/codecvt/1.cc: ...here. Same.
	* testsuite/ext/codecvt/wchar_t.cc: ...here. Same.
	* testsuite/22_locale/locale/cons/unicode: Delete directory.
	* testsuite/22_locale/locale/cons/unicode/1.cc: Move...
	* testsuite/22_locale/locale/cons/unicode.cc: ...here.

2007-01-28  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/locale_facets.tcc (num_get<>::do_get(iter_type,
	iter_type, ios_base&, ios_base::iostate&, bool&),
	num_put<>::_M_insert_int(_OutIter, ios_base&, _CharT, _ValueT)):
	-Wconversion and -Woverflow fixes.
	* include/bits/istream.tcc (operator>>(int&), operator>>(short&)):
	Likewise.
	* include/std/valarray (valarray<>::shift, cshift): Likewise.

2007-01-26  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/30586
	* config/cpu/ia64/atomic_word.h: Just include <bits/cxxabi_tweaks.h>.
	* testsuite/abi/30586.cc: New.

2007-01-25  Nathan Myers  <ncm@cantrip.org>

	* include/bits/streambuf_iterator.h (istreambuf_iterator<>::equal):
	Simplify.

2007-01-24   Steve LoBasso <slobasso@yahoo.com>
	     Paolo Carlini  <pcarlini@suse.de>

	* include/bits/deque.tcc (deque<>::erase(iterator, iterator)):
	Fix condition.
	* testsuite/23_containers/deque/modifiers/erase/3.cc: New.

2007-01-24  Andrew Pinski  <andrew_pinski@playstation.sony.com>

	* libsupc++/eh_personality.cc  (PERSONALITY_FUNCTION): Replace
	_Unwind_Word with _uleb128_t in the SJLJ context.

2007-01-24  Benjamin Kosnik  <bkoz@redhat.com>

	PR libstdc++/29722 continued
	* testsuite/lib/libstdc++.exp (v3_target_compile_as_c): Add
	libsupc++ library directory.
	* testsuite/abi/cxx_runtime_only_linkage.cc: Remove hard-coded
	path specification.

2007-01-24  Andreas Krebbel  <krebbel1@de.ibm.com>

	* libsupc++/eh_personality.cc (parse_lsda_header, check_exception_spec,
	get_ttype_entry, empty_exception_spec, PERSONALITY_FUNCTION): Replaced
	_Unwind_Word with _uleb128_t and _Unwind_SWord with _sleb128_t.

2007-01-22  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algobase.h (__fill_aux(unsigned char*,
	unsigned char*, const unsigned char&), __fill_aux(signed char*,
	signed char*, const signed char&), __fill_aux(char*, char*,
	const char&), __fill_aux(wchar_t*, wchar_t*, const wchar_t&)):
	Take the character by value.
	(__fill_n_aux): Likewise.

2007-01-21  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/30449 (fill, fill_n)
	* include/bits/stl_algobase.h (__fill_aux(wchar_t*, wchar_t*,
	const wchar_t&), __fill_n_aux(wchar_t*, _Size, const wchar_t&)): New.
	(fill(signed char*, signed char*, const signed char&),
	fill(unsigned char*, unsigned char*, const unsigned char&),
	fill(char*, char*, char&), fill_n(signed char*, _Size,
	const signed char&), fill_n(unsigned char*, _Size,
	const unsigned char&), fill_n(char*, _Size, char&)): Rename to
	__*_aux.
	(__fill_normal, __fill_n_normal): New, call the latter.
	(fill, fill_n): Adjust, call the latter.
	* testsuite/25_algorithms/fill/4.cc: New.
	* testsuite/25_algorithms/fill/5.cc: New.

2007-01-18  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/basic_string.h (basic_string<>::_S_compare): Add.
	(compare(const basic_string&)): Use it.
	* include/bits/basic_string.tcc (compare(size_type, size_type,
	const basic_string&), compare(size_type, size_type,
	const basic_string&, size_type, size_type), compare(const _CharT*),
	compare(size_type, size_type, const _CharT*), compare(size_type,
	size_type, const _CharT*, size_type)): Likewise.
	* include/ext/vstring_util.h (__vstring_utility<>::_S_compare): Add.
	* include/ext/vstring.h (compare(const __versa_string&)): Use it.
	* include/ext/vstring.tcc (compare(size_type, size_type,
	const __versa_string&), compare(size_type, size_type,
	const __versa_string&, size_type, size_type), compare(const _CharT*),
	compare(size_type, size_type, const _CharT*), compare(size_type,
	size_type, const _CharT*, size_type)): Likewise.

2007-01-15  Ian Lance Taylor  <iant@google.com>
	    Paolo Carlini  <pcarlini@suse.de>

	* include/ext/type_traits.h: Fix __glibcxx_max macro.
	* include/std/limits: Likewise.

2007-01-15  Paolo Carlini  <pcarlini@suse.de>

	* include/std/valarray (valarray<>::cshift): Fix typo.

2007-01-14  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algobase.h (fill_n(char*, _Size,
	const signed char&)): Fix signature.
	* testsuite/25_algorithms/fill/3.cc: New.

2007-01-13  John David Anglin  <dave.anglin@nrc-cnrc.gc>

	* config/cpu/hppa/atomicity.h (__exchange_and_add): Don't use ordered
	store.
	(__atomic_add): Likewise.

2007-01-13  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/14991
	* docs/html/17_intro/porting-howto.html ([3]): Mention stdio_filebuf.
	* docs/html/17_intro/porting-howto.xml: Remove.

	* docs/html/17_intro/porting-howto.html: Remove spurious end tags
	pointed out by validator.w3.org.

2007-01-12  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/30416 (continued)
	* include/std/valarray (valarray<>::shift, valarray<>::cshift):
	Allways return the same variable, thus facilitating NRVO.

2007-01-12  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/30416
	* include/std/valarray (valarray<>::shift, valarray<>::cshift):
	Do not segfault when |n| > size.
	* testsuite/26_numerics/valarray/30416.cc: New.

2007-01-06  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/30365
	* crossconfig.m4 (case *-linux*): Run GLIBCXX_CHECK_LFS.
	* configure: Regenerate.

2007-01-06  Matthias Klose  <doko@debian.org>

	* include/tr1/random (gamma_distribution): Fix typo in formula.
	* docs/doxygen/user.cfg.in: Use package amsmath.

Copyright (C) 2007 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

